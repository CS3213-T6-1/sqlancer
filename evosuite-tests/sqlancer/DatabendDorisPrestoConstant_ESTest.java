/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 07 13:42:00 GMT 2025
 */

package sqlancer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.DatabendDorisPrestoConstant;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DatabendDorisPrestoConstant_ESTest extends DatabendDorisPrestoConstant_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      // Undeclared exception!
      try { 
        databendDorisPrestoConstant0.asString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // sqlancer.DatabendDorisPrestoConstant@0000000001
         //
         verifyException("sqlancer.DatabendDorisPrestoConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      boolean boolean0 = databendDorisPrestoConstant0.isBoolean();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      // Undeclared exception!
      try { 
        databendDorisPrestoConstant0.asFloat();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // sqlancer.DatabendDorisPrestoConstant@0000000001
         //
         verifyException("sqlancer.DatabendDorisPrestoConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      boolean boolean0 = databendDorisPrestoConstant0.isString();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      boolean boolean0 = databendDorisPrestoConstant0.isFloat();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      // Undeclared exception!
      try { 
        databendDorisPrestoConstant0.asInt();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // sqlancer.DatabendDorisPrestoConstant@0000000001
         //
         verifyException("sqlancer.DatabendDorisPrestoConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      boolean boolean0 = databendDorisPrestoConstant0.isInt();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      // Undeclared exception!
      try { 
        databendDorisPrestoConstant0.asBoolean();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // sqlancer.DatabendDorisPrestoConstant@0000000001
         //
         verifyException("sqlancer.DatabendDorisPrestoConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DatabendDorisPrestoConstant databendDorisPrestoConstant0 = new DatabendDorisPrestoConstant();
      boolean boolean0 = databendDorisPrestoConstant0.isNull();
      assertFalse(boolean0);
  }
}
