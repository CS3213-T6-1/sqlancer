/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 07 13:38:09 GMT 2025
 */

package sqlancer.common.oracle;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class PivotedQuerySynthesisBase_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "sqlancer.common.oracle.PivotedQuerySynthesisBase"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\yewjo\\OneDrive\\Desktop\\NUS\\y4s2\\cs3213\\project\\sqlancer"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\yewjo\\AppData\\Local\\Temp\\"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PivotedQuerySynthesisBase_ESTest_scaffolding.class.getClassLoader() ,
      "sqlancer.sqlite3.ast.SQLite3Select",
      "sqlancer.MainOptions",
      "sqlancer.postgres.PostgresSchema$PostgresTable",
      "sqlancer.Randomly",
      "sqlancer.sqlite3.SQLite3GlobalState",
      "sqlancer.sqlite3.schema.SQLite3Schema",
      "sqlancer.common.oracle.TestOracle",
      "sqlancer.common.schema.AbstractTableColumn",
      "sqlancer.postgres.PostgresSchema$PostgresRowValue",
      "sqlancer.common.query.SQLancerResultSet",
      "sqlancer.postgres.gen.PostgresCommon",
      "sqlancer.sqlite3.oracle.SQLite3PivotedQuerySynthesisOracle",
      "sqlancer.common.query.SQLQueryAdapter",
      "sqlancer.sqlite3.schema.SQLite3Schema$SQLite3RowValue",
      "sqlancer.Main$StateLogger",
      "sqlancer.common.ast.newast.Expression",
      "sqlancer.postgres.PostgresSchema$PostgresColumn",
      "sqlancer.SQLGlobalState",
      "sqlancer.postgres.PostgresGlobalState",
      "sqlancer.common.schema.AbstractTable",
      "sqlancer.StateToReproduce",
      "sqlancer.common.query.ExpectedErrors",
      "sqlancer.GlobalState",
      "sqlancer.common.ast.newast.Select",
      "sqlancer.common.schema.AbstractSchema",
      "sqlancer.postgres.PostgresSchema",
      "sqlancer.SQLConnection",
      "sqlancer.ExpandedGlobalState",
      "sqlancer.DBMSSpecificOptions",
      "sqlancer.common.schema.AbstractRelationalTable",
      "sqlancer.Main$QueryManager",
      "sqlancer.IgnoreMeException",
      "sqlancer.common.log.Loggable",
      "sqlancer.common.ast.SelectBase",
      "sqlancer.common.schema.AbstractRowValue",
      "sqlancer.postgres.ast.PostgresExpression",
      "sqlancer.common.query.Query",
      "sqlancer.common.oracle.PivotedQuerySynthesisBase",
      "sqlancer.postgres.oracle.PostgresPivotedQuerySynthesisOracle",
      "sqlancer.common.DBMSCommon",
      "sqlancer.SQLancerDBConnection",
      "sqlancer.sqlite3.ast.SQLite3Expression",
      "sqlancer.Reproducer"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PivotedQuerySynthesisBase_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "sqlancer.common.oracle.PivotedQuerySynthesisBase",
      "sqlancer.GlobalState",
      "sqlancer.SQLGlobalState",
      "sqlancer.mysql.MySQLGlobalState",
      "sqlancer.mysql.oracle.MySQLPivotedQuerySynthesisOracle",
      "sqlancer.common.query.ExpectedErrors",
      "sqlancer.mysql.MySQLErrors",
      "sqlancer.mysql.MySQLBugs",
      "sqlancer.ExpandedGlobalState",
      "sqlancer.postgres.PostgresGlobalState",
      "sqlancer.citus.CitusGlobalState",
      "sqlancer.postgres.oracle.PostgresPivotedQuerySynthesisOracle",
      "sqlancer.postgres.gen.PostgresCommon",
      "sqlancer.common.DBMSCommon",
      "sqlancer.materialize.MaterializeGlobalState",
      "sqlancer.materialize.oracle.MaterializePivotedQuerySynthesisOracle",
      "sqlancer.materialize.gen.MaterializeCommon",
      "sqlancer.oceanbase.OceanBaseGlobalState",
      "sqlancer.oceanbase.oracle.OceanBasePivotedQuerySynthesisOracle",
      "sqlancer.oceanbase.OceanBaseErrors",
      "sqlancer.Randomly$StringGenerationStrategy$4",
      "sqlancer.Randomly$StringGenerationStrategy",
      "sqlancer.Randomly",
      "sqlancer.common.schema.AbstractSchema",
      "sqlancer.oceanbase.OceanBaseSchema",
      "sqlancer.materialize.MaterializeSchema",
      "sqlancer.common.query.Query",
      "sqlancer.common.query.SQLQueryAdapter",
      "sqlancer.common.query.SQLQueryResultCheckAdapter",
      "sqlancer.sqlite3.SQLite3GlobalState",
      "sqlancer.sqlite3.oracle.SQLite3PivotedQuerySynthesisOracle",
      "sqlancer.common.query.ExpectedErrors$ExpectedErrorsBuilder",
      "sqlancer.postgres.PostgresSchema",
      "sqlancer.doris.DorisProvider$DorisGlobalState",
      "sqlancer.doris.oracle.DorisPivotedQuerySynthesisOracle",
      "sqlancer.doris.DorisErrors",
      "sqlancer.doris.DorisBugs",
      "sqlancer.databend.DatabendProvider$DatabendGlobalState",
      "sqlancer.mysql.MySQLSchema",
      "sqlancer.citus.CitusSchema",
      "sqlancer.presto.PrestoGlobalState",
      "sqlancer.databend.test.DatabendPivotedQuerySynthesisOracle",
      "sqlancer.databend.DatabendErrors",
      "sqlancer.databend.DatabendBugs",
      "sqlancer.common.schema.AbstractTableColumn",
      "sqlancer.oceanbase.OceanBaseSchema$OceanBaseColumn",
      "sqlancer.common.schema.AbstractRowValue",
      "sqlancer.materialize.MaterializeSchema$MaterializeRowValue"
    );
  }
}
