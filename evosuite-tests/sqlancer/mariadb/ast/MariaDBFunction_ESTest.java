/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 07 14:26:55 GMT 2025
 */

package sqlancer.mariadb.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.Randomly;
import sqlancer.mariadb.ast.MariaDBConstant;
import sqlancer.mariadb.ast.MariaDBExpression;
import sqlancer.mariadb.ast.MariaDBFunction;
import sqlancer.mariadb.ast.MariaDBFunctionName;
import sqlancer.mariadb.ast.MariaDBSelectStatement;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MariaDBFunction_ESTest extends MariaDBFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MariaDBFunctionName mariaDBFunctionName0 = MariaDBFunctionName.LOCATE2;
      LinkedList<MariaDBConstant.MariaDBIntConstant> linkedList0 = new LinkedList<MariaDBConstant.MariaDBIntConstant>();
      LinkedList<MariaDBExpression> linkedList1 = new LinkedList<MariaDBExpression>(linkedList0);
      MariaDBFunction mariaDBFunction0 = new MariaDBFunction(mariaDBFunctionName0, linkedList1);
      MariaDBFunctionName mariaDBFunctionName1 = mariaDBFunction0.getFunc();
      assertSame(mariaDBFunctionName1, mariaDBFunctionName0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MariaDBSelectStatement mariaDBSelectStatement0 = new MariaDBSelectStatement();
      List<MariaDBExpression> list0 = mariaDBSelectStatement0.getGroupBys();
      MariaDBFunction mariaDBFunction0 = new MariaDBFunction((MariaDBFunctionName) null, (List<MariaDBExpression>) null);
      MariaDBFunctionName mariaDBFunctionName0 = mariaDBFunction0.getFunc();
      MariaDBFunction mariaDBFunction1 = new MariaDBFunction(mariaDBFunctionName0, list0);
      List<MariaDBExpression> list1 = mariaDBFunction1.getArgs();
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MariaDBFunctionName mariaDBFunctionName0 = MariaDBFunctionName.LOCATE2;
      LinkedList<MariaDBConstant.MariaDBIntConstant> linkedList0 = new LinkedList<MariaDBConstant.MariaDBIntConstant>();
      LinkedList<MariaDBExpression> linkedList1 = new LinkedList<MariaDBExpression>(linkedList0);
      linkedList1.add((MariaDBExpression) null);
      List<MariaDBExpression> list0 = Randomly.nonEmptySubset((List<MariaDBExpression>) linkedList1);
      MariaDBFunction mariaDBFunction0 = new MariaDBFunction(mariaDBFunctionName0, list0);
      List<MariaDBExpression> list1 = mariaDBFunction0.getArgs();
      assertEquals(1, list1.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MariaDBFunction mariaDBFunction0 = new MariaDBFunction((MariaDBFunctionName) null, (List<MariaDBExpression>) null);
      List<MariaDBExpression> list0 = mariaDBFunction0.getArgs();
      assertNull(list0);
  }
}
