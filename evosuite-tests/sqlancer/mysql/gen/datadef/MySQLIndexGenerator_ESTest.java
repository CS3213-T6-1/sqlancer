/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 07 14:28:41 GMT 2025
 */

package sqlancer.mysql.gen.datadef;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.Randomly;
import sqlancer.mysql.MySQLGlobalState;
import sqlancer.mysql.MySQLSchema;
import sqlancer.mysql.gen.datadef.MySQLIndexGenerator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MySQLIndexGenerator_ESTest extends MySQLIndexGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
      // Undeclared exception!
      try { 
        MySQLIndexGenerator.create(mySQLGlobalState0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
      Randomly randomly0 = new Randomly();
      MySQLIndexGenerator mySQLIndexGenerator0 = new MySQLIndexGenerator((MySQLSchema) null, randomly0, mySQLGlobalState0);
      // Undeclared exception!
      try { 
        mySQLIndexGenerator0.create();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
      MySQLIndexGenerator mySQLIndexGenerator0 = new MySQLIndexGenerator((MySQLSchema) null, randomly0, mySQLGlobalState0);
      mySQLIndexGenerator0.setNewSchema((MySQLSchema) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Randomly randomly0 = new Randomly();
      MySQLIndexGenerator mySQLIndexGenerator0 = new MySQLIndexGenerator((MySQLSchema) null, randomly0, (MySQLGlobalState) null);
      // Undeclared exception!
      try { 
        mySQLIndexGenerator0.create();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.mysql.gen.datadef.MySQLIndexGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        MySQLIndexGenerator.create((MySQLGlobalState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.mysql.gen.datadef.MySQLIndexGenerator", e);
      }
  }
}
