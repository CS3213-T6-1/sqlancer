/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 07 14:30:51 GMT 2025
 */

package sqlancer.oceanbase.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.common.ast.JoinBase;
import sqlancer.oceanbase.OceanBaseSchema;
import sqlancer.oceanbase.ast.OceanBaseAggregate;
import sqlancer.oceanbase.ast.OceanBaseBinaryComparisonOperation;
import sqlancer.oceanbase.ast.OceanBaseCastOperation;
import sqlancer.oceanbase.ast.OceanBaseColumnReference;
import sqlancer.oceanbase.ast.OceanBaseComputableFunction;
import sqlancer.oceanbase.ast.OceanBaseConstant;
import sqlancer.oceanbase.ast.OceanBaseExpression;
import sqlancer.oceanbase.ast.OceanBaseJoin;
import sqlancer.oceanbase.ast.OceanBaseOrderByTerm;
import sqlancer.oceanbase.ast.OceanBaseUnaryPostfixOperation;
import sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OceanBaseComputableFunction_ESTest extends OceanBaseComputableFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createUnsignedIntConstant((-1735L));
      OceanBaseConstant oceanBaseConstant1 = OceanBaseConstant.createIntConstantNotAsBoolean(2235L);
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[9];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[6] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[7] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[8] = (OceanBaseExpression) oceanBaseConstant1;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant2 = oceanBaseComputableFunction0.getExpectedValue();
      assertSame(oceanBaseConstant2, oceanBaseConstant1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createDoubleConstant((-1602.75));
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[6];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseBinaryComparisonOperation.BinaryComparisonOperator oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0 = OceanBaseBinaryComparisonOperation.BinaryComparisonOperator.LESS_EQUALS;
      OceanBaseConstant oceanBaseConstant1 = oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0.getExpectedValue(oceanBaseConstant0, oceanBaseConstant0);
      oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseConstant1;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant2 = oceanBaseComputableFunction0.getExpectedValue();
      assertFalse(oceanBaseConstant2.isSigned());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(false);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseConstant oceanBaseConstant1 = OceanBaseConstant.createStringConstant("[9.)l*B`Aj}q3](8");
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant1;
      OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(3L, "[9.)l*B`Aj}q3](8");
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant2 = oceanBaseComputableFunction0.getExpectedValue();
      assertEquals("3", oceanBaseConstant2.getString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
      OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[0];
      OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
      assertFalse(oceanBaseConstant0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
      OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[7];
      oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseNullConstant0;
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-1L));
      OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant("");
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
      assertEquals("", oceanBaseConstant1.castAsString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseExpression[] oceanBaseExpressionArray1 = oceanBaseComputableFunction0.getArguments();
      assertEquals(0, oceanBaseExpressionArray1.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-1L));
      OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant("");
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseConstant oceanBaseConstant1 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseTextConstant0, oceanBaseExpressionArray0);
      assertFalse(oceanBaseConstant1.isSigned());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("");
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0 = OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator.MINUS;
      OceanBaseUnaryPrefixOperation oceanBaseUnaryPrefixOperation0 = new OceanBaseUnaryPrefixOperation(oceanBaseConstant0, oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0);
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseUnaryPrefixOperation0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation$OceanBaseUnaryPrefixOperator$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[5];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      JoinBase.JoinType joinBase_JoinType0 = JoinBase.JoinType.RIGHT_ANTI;
      OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin(oceanBaseConstant_OceanBaseNullConstant0, oceanBaseExpressionArray0[0], joinBase_JoinType0);
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseJoin0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("");
      OceanBaseAggregate.OceanBaseAggregateFunction oceanBaseAggregate_OceanBaseAggregateFunction0 = OceanBaseAggregate.OceanBaseAggregateFunction.COUNT;
      OceanBaseAggregate oceanBaseAggregate0 = new OceanBaseAggregate(oceanBaseConstant0, oceanBaseAggregate_OceanBaseAggregateFunction0);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseAggregate0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // PQS not supported for this operator
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[0];
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseConstantArray0);
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseComputableFunction0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("LEAST");
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction0.getExpectedValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseConstant$OceanBaseTextConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[4];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      JoinBase.JoinType joinBase_JoinType0 = JoinBase.JoinType.INNER;
      OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin(oceanBaseExpressionArray0[1], oceanBaseConstant_OceanBaseNullConstant0, joinBase_JoinType0);
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseJoin0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction0.getExpectedValue();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction0.getExpectedValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("COALESCE");
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction0.getExpectedValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // sqlancer.mysql.ast.MySQLConstant$MySQLIntConstant cannot be cast to sqlancer.oceanbase.ast.OceanBaseConstant
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseConstant$OceanBaseTextConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createFalse();
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseOrderByTerm.OceanBaseOrder oceanBaseOrderByTerm_OceanBaseOrder0 = OceanBaseOrderByTerm.OceanBaseOrder.ASC;
      OceanBaseOrderByTerm oceanBaseOrderByTerm0 = new OceanBaseOrderByTerm(oceanBaseConstant0, oceanBaseOrderByTerm_OceanBaseOrder0);
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseOrderByTerm0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction0.getExpectedValue();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // sqlancer.oceanbase.ast.OceanBaseOrderByTerm@2
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
      OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(0L, "");
      OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
      OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant_OceanBaseIntConstant0, oceanBaseCastOperation_CastType0);
      OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0 = OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator.MINUS;
      OceanBaseUnaryPrefixOperation oceanBaseUnaryPrefixOperation0 = new OceanBaseUnaryPrefixOperation(oceanBaseCastOperation0, oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseUnaryPrefixOperation0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseIntConstant0, oceanBaseExpressionArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation$OceanBaseUnaryPrefixOperator$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
      JoinBase.JoinType joinBase_JoinType0 = JoinBase.JoinType.RIGHT_ANTI;
      OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin((OceanBaseExpression) null, oceanBaseConstant_OceanBaseNullConstant0, joinBase_JoinType0);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseJoin0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseNullConstant0, oceanBaseExpressionArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createDoubleConstant((-1602.75));
      OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant("COALESCE");
      OceanBaseConstant oceanBaseConstant1 = oceanBaseConstant_OceanBaseTextConstant0.castAsDouble();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseTextConstant0, oceanBaseExpressionArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // sqlancer.mysql.ast.MySQLConstant$MySQLIntConstant cannot be cast to sqlancer.oceanbase.ast.OceanBaseConstant
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseConstant$OceanBaseTextConstant", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[4];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      OceanBaseOrderByTerm.OceanBaseOrder oceanBaseOrderByTerm_OceanBaseOrder0 = OceanBaseOrderByTerm.OceanBaseOrder.ASC;
      OceanBaseOrderByTerm oceanBaseOrderByTerm0 = new OceanBaseOrderByTerm(oceanBaseExpressionArray0[0], oceanBaseOrderByTerm_OceanBaseOrder0);
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseOrderByTerm0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseNullConstant0, oceanBaseExpressionArray0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // sqlancer.oceanbase.ast.OceanBaseOrderByTerm@2
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[0];
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseConstantArray0);
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createDoubleConstant((-96.23496));
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseComputableFunction0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0, oceanBaseExpressionArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = null;
      try {
        oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, (OceanBaseExpression[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[6];
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createFalse();
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0, oceanBaseCastOperation_CastType0);
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseCastOperation0;
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("k", oceanBaseSchema_OceanBaseDataType0, true, (-1557), false);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseColumnReference0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("LEAST");
      OceanBaseConstant oceanBaseConstant1 = OceanBaseConstant.createIntConstantNotAsBoolean(23L);
      OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_NULL;
      OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(oceanBaseConstant1, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseUnaryPostfixOperation0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
      assertEquals(OceanBaseSchema.OceanBaseDataType.VARCHAR, oceanBaseSchema_OceanBaseDataType0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("tnLX7F", oceanBaseSchema_OceanBaseDataType0, true, (-168), true);
      OceanBaseColumnReference oceanBaseColumnReference0 = OceanBaseColumnReference.create(oceanBaseSchema_OceanBaseColumn0, (OceanBaseConstant) null);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseColumnReference0;
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType1 = OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
      assertFalse(oceanBaseSchema_OceanBaseDataType1.equals((Object)oceanBaseSchema_OceanBaseDataType0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("qq_~d<')", oceanBaseSchema_OceanBaseDataType0, false, 2908, false);
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-2147L), false);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant0);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseColumnReference0;
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType1 = OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
      assertEquals(OceanBaseSchema.OceanBaseDataType.VARCHAR, oceanBaseSchema_OceanBaseDataType1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[0];
      OceanBaseComputableFunction.getMostGeneralType(oceanBaseConstantArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createFalse();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseConstant oceanBaseConstant1 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0, oceanBaseExpressionArray0);
      assertSame(oceanBaseConstant1, oceanBaseConstant0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
      OceanBaseConstant oceanBaseConstant0 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseNullConstant0, oceanBaseExpressionArray0);
      assertNull(oceanBaseConstant0.getType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      String string0 = oceanBaseComputableFunction_OceanBaseFunction0.toString();
      assertEquals("LEAST", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.INT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("", oceanBaseSchema_OceanBaseDataType0, true, 436, true);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
      OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant("");
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseColumnReference0;
      // Undeclared exception!
      try { 
        OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseTextConstant0, oceanBaseExpressionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant((-1.0));
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
      OceanBaseConstant oceanBaseConstant0 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseDoubleConstant0, oceanBaseExpressionArray0);
      assertFalse(oceanBaseConstant0.isSigned());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(0L, "NULL");
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("NULL", oceanBaseSchema_OceanBaseDataType0, false, 4, false);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseColumnReference0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
      OceanBaseConstant oceanBaseConstant0 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseNullConstant0, oceanBaseExpressionArray0);
      assertFalse(oceanBaseConstant0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant((-417.671955884731));
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("7Gs Dun0h;]");
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
      assertEquals(7.0, oceanBaseConstant1.getDouble(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createFalse();
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
      assertFalse(oceanBaseConstant1.asBooleanNotNull());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant(0L);
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.VARCHAR;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("NULL", oceanBaseSchema_OceanBaseDataType0, false, 4, false);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseColumnReference0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
      assertFalse(oceanBaseConstant1.isInt());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant(2854.9);
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
      OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(1168L, "");
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
      assertEquals("2854.9", oceanBaseConstant0.getTextRepresentation());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
      OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant((-1.7976931348623157E308));
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createTrue();
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
      assertEquals(OceanBaseSchema.OceanBaseDataType.DOUBLE, oceanBaseConstant1.getType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction0.getExpectedValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction$4", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createUnsignedIntConstant((-1735L));
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
      OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[2];
      oceanBaseConstantArray0[0] = oceanBaseConstant0;
      // Undeclared exception!
      try { 
        oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-5748L));
      OceanBaseConstant oceanBaseConstant1 = OceanBaseConstant.createDoubleConstant((-5748L));
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[9];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseConstant0;
      oceanBaseExpressionArray0[6] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[7] = (OceanBaseExpression) oceanBaseConstant1;
      oceanBaseExpressionArray0[8] = (OceanBaseExpression) oceanBaseConstant1;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant2 = oceanBaseComputableFunction0.getExpectedValue();
      assertSame(oceanBaseConstant2, oceanBaseConstant_OceanBaseNullConstant0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
      assertNotSame(oceanBaseConstant0, oceanBaseConstant_OceanBaseNullConstant0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.INT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("", oceanBaseSchema_OceanBaseDataType0, true, 436, true);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
      OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant("");
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseColumnReference0;
      oceanBaseExpressionArray0[6] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[7] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
      assertFalse(oceanBaseConstant0.equals((Object)oceanBaseConstant_OceanBaseNullConstant0));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createFalse();
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
      assertEquals(0L, oceanBaseConstant1.getInt());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(0L, "NULL");
      OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
      OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("NULL", oceanBaseSchema_OceanBaseDataType0, false, 4, false);
      OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseColumnReference0;
      oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
      assertFalse(oceanBaseConstant0.isSigned());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
      int int0 = oceanBaseComputableFunction_OceanBaseFunction0.getNrArgs();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      String string0 = oceanBaseComputableFunction_OceanBaseFunction0.getName();
      assertEquals("LEAST", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.getRandomFunction();
      boolean boolean0 = oceanBaseComputableFunction_OceanBaseFunction0.isVariadic();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction1 = oceanBaseComputableFunction0.getFunction();
      assertSame(oceanBaseComputableFunction_OceanBaseFunction1, oceanBaseComputableFunction_OceanBaseFunction0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[5];
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseExpression[] oceanBaseExpressionArray1 = oceanBaseComputableFunction0.getArguments();
      assertEquals(5, oceanBaseExpressionArray1.length);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
      OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
      oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
      OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
      OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
      assertFalse(oceanBaseConstant0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
      boolean boolean0 = oceanBaseComputableFunction_OceanBaseFunction0.isVariadic();
      assertTrue(boolean0);
  }
}
