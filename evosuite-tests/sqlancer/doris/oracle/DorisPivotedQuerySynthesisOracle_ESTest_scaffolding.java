/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 07 13:08:14 GMT 2025
 */

package sqlancer.doris.oracle;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DorisPivotedQuerySynthesisOracle_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "sqlancer.doris.oracle.DorisPivotedQuerySynthesisOracle"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\yewjo\\OneDrive\\Desktop\\NUS\\y4s2\\cs3213\\project\\sqlancer"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\yewjo\\AppData\\Local\\Temp\\"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DorisPivotedQuerySynthesisOracle_ESTest_scaffolding.class.getClassLoader() ,
      "sqlancer.doris.ast.DorisConstant$DorisDatetimeConstant",
      "sqlancer.doris.visitor.DorisExpectedValueVisitor",
      "sqlancer.AbstractAction",
      "sqlancer.common.ast.newast.NewOrderingTerm",
      "sqlancer.doris.ast.DorisConstant$DorisIntConstant",
      "sqlancer.doris.ast.DorisInOperation",
      "sqlancer.StatementExecutor",
      "sqlancer.doris.ast.DorisUnaryPostfixOperation",
      "sqlancer.doris.ast.DorisConstant$DorisNumericConstant",
      "sqlancer.common.ast.newast.NewPostfixTextNode",
      "sqlancer.SQLProviderAdapter",
      "sqlancer.common.ast.newast.NewFunctionNode",
      "sqlancer.doris.DorisProvider$DorisGlobalState",
      "sqlancer.doris.ast.DorisPostfixText",
      "sqlancer.doris.ast.DorisFunction",
      "sqlancer.doris.oracle.DorisPivotedQuerySynthesisOracle",
      "sqlancer.common.ast.newast.NewCaseOperatorNode",
      "sqlancer.doris.DorisProvider$Action",
      "sqlancer.common.ast.SelectBase$SelectType",
      "sqlancer.Main$StateLogger",
      "sqlancer.doris.ast.DorisConstant$DorisTextConstant",
      "sqlancer.doris.ast.DorisConstant$DorisFloatConstant",
      "sqlancer.common.ast.newast.NewTernaryNode",
      "sqlancer.common.schema.AbstractTable",
      "sqlancer.doris.DorisSchema$DorisTable",
      "sqlancer.common.query.ExpectedErrors",
      "sqlancer.doris.DorisProvider",
      "sqlancer.GlobalState",
      "sqlancer.common.ast.newast.Select",
      "sqlancer.doris.ast.DorisConstant$DorisBooleanConstant",
      "sqlancer.doris.ast.DorisExpression",
      "sqlancer.common.schema.AbstractSchema",
      "sqlancer.DatabaseProvider",
      "sqlancer.doris.ast.DorisConstant$DorisTemporalConstant",
      "sqlancer.doris.ast.DorisOrderByTerm",
      "sqlancer.common.schema.AbstractRelationalTable",
      "sqlancer.Main$QueryManager",
      "sqlancer.doris.visitor.DorisToStringVisitor",
      "sqlancer.ProviderAdapter",
      "sqlancer.common.query.Query",
      "sqlancer.common.oracle.PivotedQuerySynthesisBase",
      "sqlancer.doris.DorisSchema$DorisRowValue",
      "sqlancer.doris.DorisSchema",
      "sqlancer.doris.ast.DorisConstant$DorisNullConstant",
      "sqlancer.common.ast.newast.NewUnaryPostfixOperatorNode",
      "sqlancer.SQLancerDBConnection",
      "sqlancer.doris.ast.DorisSelect$DorisSelectDistinctType",
      "sqlancer.doris.ast.DorisBinaryOperation",
      "sqlancer.MainOptions",
      "sqlancer.common.ast.newast.ColumnReferenceNode",
      "sqlancer.doris.DorisSchema$DorisDataType",
      "sqlancer.Randomly",
      "sqlancer.DatabendDorisPrestoConstant",
      "sqlancer.common.oracle.TestOracle",
      "sqlancer.common.ast.newast.NewToStringVisitor",
      "sqlancer.common.schema.AbstractTableColumn",
      "sqlancer.common.query.SQLancerResultSet",
      "sqlancer.common.ast.newast.NewAliasNode",
      "sqlancer.common.query.SQLQueryAdapter",
      "sqlancer.common.ast.newast.Expression",
      "sqlancer.doris.ast.DorisUnaryPrefixOperation",
      "sqlancer.doris.DorisSchema$DorisColumn",
      "sqlancer.SQLGlobalState",
      "sqlancer.doris.ast.DorisAlias",
      "sqlancer.StateToReproduce",
      "sqlancer.common.ast.newast.NewBinaryOperatorNode",
      "sqlancer.doris.ast.DorisConstant$DorisDateConstant",
      "sqlancer.doris.ast.DorisColumnReference",
      "sqlancer.SQLConnection",
      "sqlancer.doris.ast.DorisColumnValue",
      "sqlancer.doris.DorisBugs",
      "sqlancer.common.ast.newast.NewBetweenOperatorNode",
      "sqlancer.DBMSSpecificOptions",
      "sqlancer.common.ast.newast.NewInOperatorNode",
      "sqlancer.doris.DorisErrors",
      "sqlancer.doris.ast.DorisSelect",
      "sqlancer.IgnoreMeException",
      "sqlancer.common.log.Loggable",
      "sqlancer.common.ast.newast.NewUnaryPrefixOperatorNode",
      "sqlancer.common.ast.SelectBase",
      "sqlancer.common.schema.AbstractRowValue",
      "sqlancer.doris.ast.DorisBetweenOperation",
      "sqlancer.doris.ast.DorisTableReference",
      "sqlancer.doris.ast.DorisConstant",
      "sqlancer.Reproducer",
      "sqlancer.common.ast.newast.TableReferenceNode"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DorisPivotedQuerySynthesisOracle_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "sqlancer.common.oracle.PivotedQuerySynthesisBase",
      "sqlancer.doris.oracle.DorisPivotedQuerySynthesisOracle",
      "sqlancer.doris.DorisBugs",
      "sqlancer.Randomly$StringGenerationStrategy$4",
      "sqlancer.Randomly$StringGenerationStrategy",
      "sqlancer.Randomly",
      "sqlancer.doris.DorisSchema$DorisDataType",
      "sqlancer.doris.ast.DorisUnaryPostfixOperation$DorisUnaryPostfixOperator",
      "sqlancer.doris.ast.DorisUnaryPrefixOperation$DorisUnaryPrefixOperator",
      "sqlancer.common.query.ExpectedErrors",
      "sqlancer.doris.DorisErrors",
      "sqlancer.GlobalState",
      "sqlancer.SQLGlobalState",
      "sqlancer.doris.DorisProvider$DorisGlobalState",
      "sqlancer.common.schema.AbstractSchema",
      "sqlancer.doris.DorisSchema",
      "sqlancer.common.query.Query",
      "sqlancer.common.query.SQLQueryAdapter",
      "sqlancer.tidb.TiDBProvider$TiDBGlobalState",
      "sqlancer.mariadb.MariaDBProvider$MariaDBGlobalState",
      "sqlancer.common.gen.TypedExpressionGenerator",
      "sqlancer.doris.gen.DorisNewExpressionGenerator",
      "sqlancer.DatabendDorisPrestoConstant",
      "sqlancer.doris.ast.DorisConstant",
      "sqlancer.doris.ast.DorisConstant$DorisTextConstant",
      "sqlancer.doris.visitor.DorisExpectedValueVisitor",
      "sqlancer.common.ast.newast.NewToStringVisitor",
      "sqlancer.doris.visitor.DorisToStringVisitor",
      "sqlancer.doris.ast.DorisConstant$DorisNumericConstant",
      "sqlancer.doris.ast.DorisConstant$DorisIntConstant",
      "sqlancer.common.query.ExpectedErrors$ExpectedErrorsBuilder",
      "sqlancer.doris.ast.DorisConstant$DorisNullConstant",
      "sqlancer.doris.ast.DorisConstant$DorisTemporalConstant",
      "sqlancer.doris.ast.DorisConstant$DorisDatetimeConstant",
      "sqlancer.common.ast.newast.NewBetweenOperatorNode",
      "sqlancer.doris.ast.DorisBetweenOperation",
      "sqlancer.doris.DorisSchema$DorisCompositeDataType",
      "sqlancer.common.schema.AbstractTableColumn",
      "sqlancer.doris.DorisSchema$DorisColumn",
      "sqlancer.common.ast.newast.ColumnReferenceNode",
      "sqlancer.doris.ast.DorisColumnReference",
      "sqlancer.doris.ast.DorisCastOperation",
      "sqlancer.common.ast.newast.NewBinaryOperatorNode",
      "sqlancer.doris.ast.DorisBinaryComparisonOperation",
      "sqlancer.doris.ast.DorisBinaryComparisonOperation$DorisBinaryComparisonOperator",
      "sqlancer.doris.ast.DorisBinaryLogicalOperation",
      "sqlancer.common.schema.AbstractTable",
      "sqlancer.common.schema.AbstractRelationalTable",
      "sqlancer.doris.DorisSchema$DorisTable",
      "sqlancer.common.ast.newast.TableReferenceNode",
      "sqlancer.doris.ast.DorisTableReference",
      "sqlancer.common.ast.JoinBase",
      "sqlancer.doris.ast.DorisJoin",
      "sqlancer.common.ast.JoinBase$JoinType",
      "sqlancer.common.query.SQLQueryResultCheckAdapter",
      "sqlancer.doris.ast.DorisConstant$DorisFloatConstant",
      "sqlancer.doris.ast.DorisConstant$DorisDateConstant",
      "sqlancer.doris.utils.DorisNumberUtils",
      "sqlancer.doris.ast.DorisConstant$DorisBooleanConstant",
      "sqlancer.ExpandedGlobalState",
      "sqlancer.materialize.MaterializeGlobalState",
      "sqlancer.common.ast.newast.NewUnaryPostfixOperatorNode",
      "sqlancer.doris.ast.DorisUnaryPostfixOperation",
      "sqlancer.common.ast.SelectBase",
      "sqlancer.oceanbase.ast.OceanBaseSelect",
      "sqlancer.common.ast.SelectBase$SelectType",
      "sqlancer.oceanbase.ast.OceanBaseSelect$SelectType",
      "sqlancer.doris.ast.DorisColumnValue",
      "sqlancer.common.ast.newast.NewInOperatorNode",
      "sqlancer.doris.ast.DorisInOperation",
      "sqlancer.LikeImplementationHelper",
      "sqlancer.doris.ast.DorisSelect",
      "sqlancer.doris.ast.DorisSelect$DorisSelectDistinctType",
      "sqlancer.oceanbase.OceanBaseGlobalState",
      "sqlancer.doris.ast.DorisCaseOperation",
      "sqlancer.common.ast.newast.NewPostfixTextNode",
      "sqlancer.doris.ast.DorisPostfixText",
      "sqlancer.mysql.ast.MySQLSelect",
      "sqlancer.mysql.ast.MySQLSelect$SelectType",
      "sqlancer.common.ast.newast.NewUnaryPrefixOperatorNode",
      "sqlancer.doris.ast.DorisUnaryPrefixOperation",
      "sqlancer.common.ast.newast.NewAliasNode",
      "sqlancer.doris.ast.DorisAlias",
      "sqlancer.tidb.ast.TiDBBinaryBitOperation$TiDBBinaryBitOperator",
      "sqlancer.doris.ast.DorisLikeOperation",
      "sqlancer.common.ast.newast.NewOrderingTerm",
      "sqlancer.doris.ast.DorisOrderByTerm",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator",
      "sqlancer.materialize.MaterializeSchema$MaterializeDataType",
      "sqlancer.doris.ast.DorisBinaryArithmeticOperation",
      "sqlancer.databend.ast.DatabendBinaryLogicalOperation$DatabendBinaryLogicalOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2BinaryComparisonOperator",
      "sqlancer.doris.ast.DorisBinaryOperation",
      "sqlancer.tidb.ast.TiDBBinaryComparisonOperation$TiDBComparisonOperator",
      "sqlancer.common.ast.newast.NewFunctionNode",
      "sqlancer.doris.ast.DorisFunction",
      "sqlancer.doris.ast.DorisAggregateOperation",
      "sqlancer.doris.ast.DorisFunctionOperation",
      "sqlancer.cockroachdb.ast.CockroachDBUnaryArithmeticOperation$CockroachDBUnaryAritmeticOperator",
      "sqlancer.databend.DatabendSchema$DatabendDataType",
      "sqlancer.databend.ast.DatabendUnaryPrefixOperation$DatabendUnaryPrefixOperator",
      "sqlancer.materialize.ast.MaterializeBinaryLogicalOperation$BinaryLogicalOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2BinaryArithmeticOperator",
      "sqlancer.cnosdb.ast.CnosDBBinaryLogicalOperation$BinaryLogicalOperator",
      "sqlancer.materialize.ast.MaterializeBinaryArithmeticOperation$MaterializeBinaryOperator",
      "sqlancer.postgres.ast.PostgresBinaryBitOperation$PostgresBinaryBitOperator",
      "sqlancer.cockroachdb.ast.CockroachDBBinaryComparisonOperator$CockroachDBComparisonOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2UnaryPrefixOperator",
      "sqlancer.presto.ast.PrestoUnaryPostfixOperation$PrestoUnaryPostfixOperator",
      "sqlancer.cnosdb.ast.CnosDBBinaryComparisonOperation$CnosDBBinaryComparisonOperator",
      "sqlancer.postgres.ast.PostgresBinaryComparisonOperation$PostgresBinaryComparisonOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2UnaryPostfixOperator",
      "sqlancer.hsqldb.HSQLDBSchema$HSQLDBDataType",
      "sqlancer.hsqldb.ast.HSQLDBUnaryPrefixOperation$HSQLDBUnaryPrefixOperator",
      "sqlancer.materialize.ast.MaterializePOSIXRegularExpression$POSIXRegex",
      "sqlancer.tidb.ast.TiDBBinaryLogicalOperation$TiDBBinaryLogicalOperator",
      "sqlancer.clickhouse.ast.ClickHouseUnaryFunctionOperation$ClickHouseUnaryFunctionOperator",
      "sqlancer.cockroachdb.ast.CockroachDBBinaryArithmeticOperation$CockroachDBBinaryArithmeticOperator",
      "sqlancer.databend.ast.DatabendBinaryComparisonOperation$DatabendBinaryComparisonOperator",
      "sqlancer.databend.ast.DatabendConstant",
      "sqlancer.databend.ast.DatabendConstant$DatabendTemporalConstant",
      "sqlancer.databend.ast.DatabendConstant$DatabendTimestampConstant",
      "sqlancer.cnosdb.ast.CnosDBBinaryArithmeticOperation$CnosDBBinaryOperator",
      "sqlancer.tidb.ast.TiDBRegexOperation$TiDBRegexOperator",
      "sqlancer.postgres.ast.PostgresBinaryLogicalOperation$BinaryLogicalOperator",
      "sqlancer.cockroachdb.ast.CockroachDBBinaryLogicalOperation$CockroachDBBinaryLogicalOperator",
      "sqlancer.materialize.ast.MaterializeBinaryBitOperation$MaterializeBinaryBitOperator",
      "sqlancer.mysql.ast.MySQLUnaryPrefixOperation$MySQLUnaryPrefixOperator",
      "sqlancer.postgres.ast.PostgresPOSIXRegularExpression$POSIXRegex",
      "sqlancer.materialize.ast.MaterializeBinaryRangeOperation$MaterializeBinaryRangeOperator",
      "sqlancer.tidb.ast.TiDBBinaryArithmeticOperation$TiDBBinaryArithmeticOperator",
      "sqlancer.postgres.ast.PostgresBinaryRangeOperation$PostgresBinaryRangeOperator"
    );
  }
}
