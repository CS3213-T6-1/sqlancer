/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 07 14:25:13 GMT 2025
 */

package sqlancer.questdb.test;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sqlancer.common.gen.ExpressionGenerator;
import sqlancer.questdb.QuestDBProvider;
import sqlancer.questdb.QuestDBSchema;
import sqlancer.questdb.ast.QuestDBExpression;
import sqlancer.questdb.gen.QuestDBExpressionGenerator;
import sqlancer.questdb.test.QuestDBQueryPartitioningBase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class QuestDBQueryPartitioningBase_ESTest extends QuestDBQueryPartitioningBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(questDBProvider_QuestDBGlobalState0);
      QuestDBExpressionGenerator questDBExpressionGenerator0 = new QuestDBExpressionGenerator(questDBProvider_QuestDBGlobalState0);
      questDBQueryPartitioningBase0.gen = questDBExpressionGenerator0;
      ExpressionGenerator<QuestDBExpression> expressionGenerator0 = questDBQueryPartitioningBase0.getGen();
      assertNotNull(expressionGenerator0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(questDBProvider_QuestDBGlobalState0);
      LinkedList<QuestDBSchema.QuestDBColumn> linkedList0 = new LinkedList<QuestDBSchema.QuestDBColumn>();
      QuestDBSchema.QuestDBTable questDBSchema_QuestDBTable0 = new QuestDBSchema.QuestDBTable("2qheP3vryi", linkedList0, false);
      QuestDBSchema.QuestDBColumn questDBSchema_QuestDBColumn0 = new QuestDBSchema.QuestDBColumn("@", (QuestDBSchema.QuestDBCompositeDataType) null, true);
      linkedList0.add(questDBSchema_QuestDBColumn0);
      questDBQueryPartitioningBase0.targetTable = questDBSchema_QuestDBTable0;
      List<QuestDBExpression> list0 = questDBQueryPartitioningBase0.generateFetchColumns();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(questDBProvider_QuestDBGlobalState0);
      LinkedList<QuestDBSchema.QuestDBColumn> linkedList0 = new LinkedList<QuestDBSchema.QuestDBColumn>();
      QuestDBSchema.QuestDBTable questDBSchema_QuestDBTable0 = new QuestDBSchema.QuestDBTable("b${4pzd", linkedList0, true);
      questDBQueryPartitioningBase0.targetTable = questDBSchema_QuestDBTable0;
      // Undeclared exception!
      try { 
        questDBQueryPartitioningBase0.generateFetchColumns();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // [] 1
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(questDBProvider_QuestDBGlobalState0);
      // Undeclared exception!
      try { 
        questDBQueryPartitioningBase0.check();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // null
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(questDBProvider_QuestDBGlobalState0);
      // Undeclared exception!
      try { 
        questDBQueryPartitioningBase0.generateFetchColumns();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.questdb.test.QuestDBQueryPartitioningBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase((QuestDBProvider.QuestDBGlobalState) null);
      // Undeclared exception!
      try { 
        questDBQueryPartitioningBase0.check();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sqlancer.questdb.test.QuestDBQueryPartitioningBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
      QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(questDBProvider_QuestDBGlobalState0);
      ExpressionGenerator<QuestDBExpression> expressionGenerator0 = questDBQueryPartitioningBase0.getGen();
      assertNull(expressionGenerator0);
  }
}
