/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Apr 07 12:58:49 GMT 2025
 */

package sqlancer.questdb.ast;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class QuestDBUnaryPostfixOperation_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "sqlancer.questdb.ast.QuestDBUnaryPostfixOperation"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\yewjo\\OneDrive\\Desktop\\NUS\\y4s2\\cs3213\\project\\sqlancer"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\yewjo\\AppData\\Local\\Temp\\"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(QuestDBUnaryPostfixOperation_ESTest_scaffolding.class.getClassLoader() ,
      "sqlancer.Randomly",
      "sqlancer.questdb.ast.QuestDBUnaryPostfixOperation",
      "sqlancer.materialize.MaterializeSchema$MaterializeDataType",
      "sqlancer.common.ast.BinaryNode",
      "sqlancer.common.ast.BinaryOperatorNode",
      "sqlancer.common.visitor.BinaryOperation",
      "sqlancer.materialize.ast.MaterializeConstant",
      "sqlancer.Randomly$StringGenerationStrategy",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBBooleanConstant",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator$6",
      "sqlancer.materialize.MaterializeSchema",
      "sqlancer.common.ast.newast.Expression",
      "sqlancer.questdb.ast.QuestDBConstant",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBDoubleConstant",
      "sqlancer.common.ast.BinaryOperatorNode$Operator",
      "sqlancer.Randomly$StringGenerationStrategy$4",
      "sqlancer.Randomly$StringGenerationStrategy$3",
      "sqlancer.Randomly$StringGenerationStrategy$2",
      "sqlancer.Randomly$StringGenerationStrategy$1",
      "sqlancer.common.schema.AbstractSchema",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBIntConstant",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator$3",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator$2",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator$5",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator$4",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator$1",
      "sqlancer.materialize.ast.MaterializePostfixOperation",
      "sqlancer.questdb.ast.QuestDBExpression",
      "sqlancer.IgnoreMeException",
      "sqlancer.materialize.ast.MaterializeExpression",
      "sqlancer.common.ast.newast.NewUnaryPostfixOperatorNode",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(QuestDBUnaryPostfixOperation_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "sqlancer.common.ast.newast.NewUnaryPostfixOperatorNode",
      "sqlancer.questdb.ast.QuestDBUnaryPostfixOperation",
      "sqlancer.questdb.ast.QuestDBConstant",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBDoubleConstant",
      "sqlancer.h2.H2ExpressionGenerator$H2UnaryPrefixOperator",
      "sqlancer.common.ast.newast.NewUnaryPrefixOperatorNode",
      "sqlancer.questdb.ast.QuestDBUnaryPrefixOperation",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBIntConstant",
      "sqlancer.common.ast.newast.NewInOperatorNode",
      "sqlancer.questdb.ast.QuestDBInOperation",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBBooleanConstant",
      "sqlancer.tidb.ast.TiDBBinaryArithmeticOperation$TiDBBinaryArithmeticOperator",
      "sqlancer.cnosdb.ast.CnosDBBinaryArithmeticOperation$CnosDBBinaryOperator",
      "sqlancer.doris.ast.DorisLikeOperation$DorisLikeOperator",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBSymbolConstant",
      "sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation$OceanBaseUnaryPrefixOperator",
      "sqlancer.Randomly$StringGenerationStrategy$4",
      "sqlancer.Randomly$StringGenerationStrategy",
      "sqlancer.Randomly",
      "sqlancer.common.ast.newast.NewBinaryOperatorNode",
      "sqlancer.questdb.ast.QuestDBBinaryOperation",
      "sqlancer.materialize.ast.MaterializeBinaryRangeOperation$MaterializeBinaryRangeOperator",
      "sqlancer.tidb.ast.TiDBBinaryComparisonOperation$TiDBComparisonOperator",
      "sqlancer.common.ast.SelectBase",
      "sqlancer.questdb.ast.QuestDBSelect",
      "sqlancer.common.ast.SelectBase$SelectType",
      "sqlancer.databend.ast.DatabendBinaryComparisonOperation$DatabendBinaryComparisonOperator",
      "sqlancer.DatabendDorisPrestoConstant",
      "sqlancer.databend.ast.DatabendConstant",
      "sqlancer.databend.ast.DatabendConstant$DatabendBooleanConstant",
      "sqlancer.databend.DatabendSchema$DatabendCompositeDataType",
      "sqlancer.databend.ast.DatabendCastOperation",
      "sqlancer.databend.ast.DatabendCastOperation$1",
      "sqlancer.databend.ast.DatabendUnaryPrefixOperation",
      "sqlancer.presto.ast.PrestoUnaryPostfixOperation$PrestoUnaryPostfixOperator",
      "sqlancer.cnosdb.ast.CnosDBPrefixOperation$PrefixOperator",
      "sqlancer.tidb.ast.TiDBBinaryBitOperation$TiDBBinaryBitOperator",
      "sqlancer.materialize.ast.MaterializeBinaryBitOperation$MaterializeBinaryBitOperator",
      "sqlancer.materialize.ast.MaterializePostfixOperation$PostfixOperator",
      "sqlancer.tidb.ast.TiDBRegexOperation$TiDBRegexOperator",
      "sqlancer.materialize.ast.MaterializeBinaryArithmeticOperation$MaterializeBinaryOperator",
      "sqlancer.questdb.ast.QuestDBConstant$QuestDBNullConstant",
      "sqlancer.clickhouse.ast.ClickHouseUnaryFunctionOperation$ClickHouseUnaryFunctionOperator",
      "sqlancer.postgres.ast.PostgresPostfixOperation$PostfixOperator",
      "sqlancer.postgres.ast.PostgresBinaryLogicalOperation$BinaryLogicalOperator",
      "sqlancer.postgres.ast.PostgresBinaryArithmeticOperation$PostgresBinaryOperator",
      "sqlancer.postgres.PostgresSchema$PostgresDataType",
      "sqlancer.cockroachdb.ast.CockroachDBBinaryArithmeticOperation$CockroachDBBinaryArithmeticOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2BinaryLogicalOperator",
      "sqlancer.mysql.ast.MySQLUnaryPrefixOperation$MySQLUnaryPrefixOperator",
      "sqlancer.tidb.ast.TiDBBinaryLogicalOperation$TiDBBinaryLogicalOperator",
      "sqlancer.mysql.ast.MySQLConstant",
      "sqlancer.mysql.ast.MySQLConstant$MySQLIntConstant",
      "sqlancer.databend.ast.DatabendConstant$DatabendStringConstant",
      "sqlancer.doris.ast.DorisBinaryComparisonOperation$DorisBinaryComparisonOperator",
      "sqlancer.databend.ast.DatabendBinaryArithmeticOperation",
      "sqlancer.hsqldb.ast.HSQLDBUnaryPostfixOperation$HSQLDBUnaryPostfixOperator",
      "sqlancer.cnosdb.ast.CnosDBPostfixOperation$PostfixOperator",
      "sqlancer.materialize.ast.MaterializeBinaryComparisonOperation$MaterializeBinaryComparisonOperator",
      "sqlancer.questdb.QuestDBSchema$QuestDBCompositeDataType",
      "sqlancer.common.schema.AbstractTableColumn",
      "sqlancer.questdb.QuestDBSchema$QuestDBColumn",
      "sqlancer.common.ast.newast.ColumnReferenceNode",
      "sqlancer.questdb.ast.QuestDBColumnReference",
      "sqlancer.clickhouse.ast.ClickHouseUnaryPostfixOperation$ClickHouseUnaryPostfixOperator",
      "sqlancer.cockroachdb.ast.CockroachDBBinaryComparisonOperator$CockroachDBComparisonOperator",
      "sqlancer.databend.ast.DatabendUnaryPostfixOperation$DatabendUnaryPostfixOperator",
      "sqlancer.cnosdb.ast.CnosDBBinaryComparisonOperation$CnosDBBinaryComparisonOperator",
      "sqlancer.cockroachdb.ast.CockroachDBUnaryArithmeticOperation$CockroachDBUnaryAritmeticOperator",
      "sqlancer.postgres.ast.PostgresBinaryBitOperation$PostgresBinaryBitOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2UnaryPostfixOperator",
      "sqlancer.materialize.ast.MaterializeConstant",
      "sqlancer.materialize.ast.MaterializeConstant$MaterializeConstantBase",
      "sqlancer.materialize.ast.MaterializeConstant$DoubleConstant",
      "sqlancer.materialize.ast.MaterializeInOperation",
      "sqlancer.postgres.ast.PostgresConstant",
      "sqlancer.postgres.ast.PostgresConstant$PostgresNullConstant",
      "sqlancer.postgres.ast.PostgresCollate",
      "sqlancer.h2.H2ExpressionGenerator$H2BinaryArithmeticOperator",
      "sqlancer.h2.H2ExpressionGenerator$H2BinaryComparisonOperator",
      "sqlancer.postgres.ast.PostgresBinaryComparisonOperation$PostgresBinaryComparisonOperator",
      "sqlancer.doris.ast.DorisConstant",
      "sqlancer.doris.ast.DorisConstant$DorisBooleanConstant",
      "sqlancer.doris.ast.DorisConstant$DorisNumericConstant",
      "sqlancer.doris.ast.DorisConstant$DorisIntConstant",
      "sqlancer.common.schema.AbstractTable",
      "sqlancer.common.schema.AbstractRelationalTable",
      "sqlancer.questdb.QuestDBSchema$QuestDBTable",
      "sqlancer.common.ast.newast.TableReferenceNode",
      "sqlancer.questdb.ast.QuestDBTableReference",
      "sqlancer.postgres.ast.PostgresBinaryRangeOperation$PostgresBinaryRangeOperator",
      "sqlancer.materialize.ast.MaterializeSelect",
      "sqlancer.materialize.ast.MaterializePrefixOperation"
    );
  }
}
