/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 03:05:52 GMT 2025
 */

package sqlancer.evosuite.mysql;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.mysql.MySQLGlobalState;
import sqlancer.mysql.MySQLProvider;

public class MySQLProvider_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        MySQLProvider.Action mySQLProvider_Action0 = MySQLProvider.Action.SHOW_TABLES;
        MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = mySQLProvider_Action0.getQuery(mySQLGlobalState0);
        assertEquals("SHOW TABLES;", sQLQueryAdapter0.getLogString());
    }

    @Test
    public void test1() throws Throwable {
        MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
        MySQLProvider.Action mySQLProvider_Action0 = MySQLProvider.Action.SELECT_INFO;
        SQLQueryAdapter sQLQueryAdapter0 = mySQLProvider_Action0.getQuery(mySQLGlobalState0);
        assertEquals("select TABLE_NAME, ENGINE from information_schema.TABLES where table_schema = 'null';",
                sQLQueryAdapter0.getQueryString());
    }

    @Test
    public void test2() throws Throwable {
        MySQLProvider mySQLProvider0 = new MySQLProvider();
        try {
            mySQLProvider0.generateDatabase((MySQLGlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.mysql.MySQLProvider", e);
        }
    }

    @Test
    public void test3() throws Throwable {
        MySQLProvider mySQLProvider0 = new MySQLProvider();
        MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
        // Undeclared exception!
        try {
            mySQLProvider0.generateDatabase(mySQLGlobalState0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test4() throws Throwable {
        MySQLProvider mySQLProvider0 = new MySQLProvider();
        MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
        // Undeclared exception!
        try {
            mySQLProvider0.createDatabase(mySQLGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.mysql.MySQLProvider", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        MySQLProvider mySQLProvider0 = new MySQLProvider();
        try {
            mySQLProvider0.addRowsToAllTables((MySQLGlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.mysql.MySQLProvider", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        MySQLProvider mySQLProvider0 = new MySQLProvider();
        MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
        // Undeclared exception!
        try {
            mySQLProvider0.addRowsToAllTables(mySQLGlobalState0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test7() throws Throwable {
        MySQLProvider mySQLProvider0 = new MySQLProvider();
        String string0 = mySQLProvider0.getDBMSName();
        assertEquals("mysql", string0);
    }
}
