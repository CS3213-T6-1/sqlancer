/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:55:49 GMT 2025
 */

package sqlancer.evosuite.mysql.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.mysql.ast.MySQLColumnReference;
import sqlancer.mysql.ast.MySQLConstant;
import sqlancer.mysql.MySQLSchema;

public class MySQLColumnReference_ESTest {

    @Test
    public void test00() throws Throwable {
        MySQLConstant mySQLConstant0 = MySQLConstant.createStringConstant("");
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference((MySQLSchema.MySQLColumn) null,
                mySQLConstant0);
        MySQLConstant mySQLConstant1 = mySQLColumnReference0.getValue();
        assertTrue(mySQLConstant1.isString());
    }

    @Test
    public void test01() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.INT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn("@", mySQLSchema_MySQLDataType0,
                false, 1165);
        MySQLConstant mySQLConstant0 = MySQLConstant.createTrue();
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference(mySQLSchema_MySQLColumn0, mySQLConstant0);
        MySQLConstant mySQLConstant1 = mySQLColumnReference0.getValue();
        assertFalse(mySQLConstant1.isString());
    }

    @Test
    public void test02() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.FLOAT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn((String) null,
                mySQLSchema_MySQLDataType0, false, 0);
        MySQLConstant mySQLConstant0 = MySQLConstant.createNullConstant();
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference(mySQLSchema_MySQLColumn0, mySQLConstant0);
        MySQLConstant mySQLConstant1 = mySQLColumnReference0.getValue();
        assertFalse(mySQLConstant1.isSigned());
    }

    @Test
    public void test03() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.FLOAT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn((String) null,
                mySQLSchema_MySQLDataType0, false, 0);
        MySQLConstant mySQLConstant0 = MySQLConstant.createStringConstant("null.null: FLOAT");
        MySQLColumnReference mySQLColumnReference0 = MySQLColumnReference.create(mySQLSchema_MySQLColumn0,
                mySQLConstant0);
        MySQLConstant mySQLConstant1 = mySQLColumnReference0.getExpectedValue();
        assertEquals("null.null: FLOAT", mySQLConstant1.castAsString());
    }

    @Test
    public void test04() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.INT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn("@", mySQLSchema_MySQLDataType0,
                false, 1165);
        MySQLConstant mySQLConstant0 = MySQLConstant.createTrue();
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference(mySQLSchema_MySQLColumn0, mySQLConstant0);
        MySQLConstant mySQLConstant1 = mySQLColumnReference0.getExpectedValue();
        assertTrue(mySQLConstant1.asBooleanNotNull());
    }

    @Test
    public void test05() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.FLOAT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn((String) null,
                mySQLSchema_MySQLDataType0, false, 0);
        MySQLConstant mySQLConstant0 = MySQLConstant.createNullConstant();
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference(mySQLSchema_MySQLColumn0, mySQLConstant0);
        MySQLConstant mySQLConstant1 = mySQLColumnReference0.getExpectedValue();
        assertSame(mySQLConstant1, mySQLConstant0);
    }

    @Test
    public void test06() throws Throwable {
        MySQLColumnReference mySQLColumnReference0 = MySQLColumnReference.create((MySQLSchema.MySQLColumn) null,
                (MySQLConstant) null);
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = mySQLColumnReference0.getColumn();
        assertNull(mySQLSchema_MySQLColumn0);
    }

    @Test
    public void test07() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.INT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn("@", mySQLSchema_MySQLDataType0,
                false, 1165);
        MySQLConstant mySQLConstant0 = MySQLConstant.createTrue();
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference(mySQLSchema_MySQLColumn0, mySQLConstant0);
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn1 = mySQLColumnReference0.getColumn();
        assertEquals(1165, mySQLSchema_MySQLColumn1.getPrecision());
    }

    @Test
    public void test08() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.INT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn(
                "sqlancer.mysql.ast.MySQLColumnReference", mySQLSchema_MySQLDataType0, true, (-2366));
        MySQLConstant mySQLConstant0 = MySQLConstant.createIntConstant((long) (-2366), true);
        MySQLColumnReference mySQLColumnReference0 = MySQLColumnReference.create(mySQLSchema_MySQLColumn0,
                mySQLConstant0);
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn1 = mySQLColumnReference0.getColumn();
        assertTrue(mySQLSchema_MySQLColumn1.isPrimaryKey());
    }

    @Test
    public void test09() throws Throwable {
        MySQLSchema.MySQLDataType mySQLSchema_MySQLDataType0 = MySQLSchema.MySQLDataType.FLOAT;
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn0 = new MySQLSchema.MySQLColumn((String) null,
                mySQLSchema_MySQLDataType0, false, 0);
        MySQLConstant mySQLConstant0 = MySQLConstant.createNullConstant();
        MySQLColumnReference mySQLColumnReference0 = new MySQLColumnReference(mySQLSchema_MySQLColumn0, mySQLConstant0);
        MySQLSchema.MySQLColumn mySQLSchema_MySQLColumn1 = mySQLColumnReference0.getColumn();
        assertEquals(0, mySQLSchema_MySQLColumn1.getPrecision());
    }

    @Test
    public void test10() throws Throwable {
        MySQLColumnReference mySQLColumnReference0 = MySQLColumnReference.create((MySQLSchema.MySQLColumn) null,
                (MySQLConstant) null);
        MySQLConstant mySQLConstant0 = mySQLColumnReference0.getExpectedValue();
        assertNull(mySQLConstant0);
    }

    @Test
    public void test11() throws Throwable {
        MySQLColumnReference mySQLColumnReference0 = MySQLColumnReference.create((MySQLSchema.MySQLColumn) null,
                (MySQLConstant) null);
        MySQLConstant mySQLConstant0 = mySQLColumnReference0.getValue();
        assertNull(mySQLConstant0);
    }
}
