/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 21:13:19 GMT 2025
 */

package sqlancer.evosuite.mysql.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.mysql.ast.MySQLConstant;
import sqlancer.mysql.ast.MySQLExpression;
import sqlancer.mysql.ast.MySQLOrderByTerm;
import sqlancer.mysql.MySQLSchema;

public class MySQLOrderByTerm_ESTest {

    @Test
    public void test0() throws Throwable {
        MySQLConstant.MySQLIntConstant mySQLConstant_MySQLIntConstant0 = new MySQLConstant.MySQLIntConstant(107L, true);
        MySQLOrderByTerm mySQLOrderByTerm0 = new MySQLOrderByTerm(mySQLConstant_MySQLIntConstant0,
                (MySQLOrderByTerm.MySQLOrder) null);
        mySQLOrderByTerm0.getOrder();
    }

    @Test
    public void test1() throws Throwable {
        MySQLOrderByTerm.MySQLOrder mySQLOrderByTerm_MySQLOrder0 = MySQLOrderByTerm.MySQLOrder.getRandomOrder();
        MySQLConstant mySQLConstant0 = MySQLConstant.createIntConstant((-337L), false);
        MySQLOrderByTerm mySQLOrderByTerm0 = new MySQLOrderByTerm(mySQLConstant0, mySQLOrderByTerm_MySQLOrder0);
        MySQLConstant.MySQLIntConstant mySQLConstant_MySQLIntConstant0 = (MySQLConstant.MySQLIntConstant) mySQLOrderByTerm0
                .getExpr();
        assertEquals(MySQLSchema.MySQLDataType.INT, mySQLConstant_MySQLIntConstant0.getType());
    }

    @Test
    public void test2() throws Throwable {
        MySQLConstant mySQLConstant0 = MySQLConstant.createFalse();
        MySQLOrderByTerm.MySQLOrder mySQLOrderByTerm_MySQLOrder0 = MySQLOrderByTerm.MySQLOrder.ASC;
        MySQLOrderByTerm mySQLOrderByTerm0 = new MySQLOrderByTerm(mySQLConstant0, mySQLOrderByTerm_MySQLOrder0);
        MySQLOrderByTerm.MySQLOrder mySQLOrderByTerm_MySQLOrder1 = mySQLOrderByTerm0.getOrder();
        assertSame(mySQLOrderByTerm_MySQLOrder0, mySQLOrderByTerm_MySQLOrder1);
    }

    @Test
    public void test3() throws Throwable {
        MySQLOrderByTerm.MySQLOrder mySQLOrderByTerm_MySQLOrder0 = MySQLOrderByTerm.MySQLOrder.DESC;
        MySQLOrderByTerm mySQLOrderByTerm0 = new MySQLOrderByTerm((MySQLExpression) null, mySQLOrderByTerm_MySQLOrder0);
        MySQLExpression mySQLExpression0 = mySQLOrderByTerm0.getExpr();
        assertNull(mySQLExpression0);
    }

    @Test
    public void test4() throws Throwable {
        MySQLOrderByTerm.MySQLOrder mySQLOrderByTerm_MySQLOrder0 = MySQLOrderByTerm.MySQLOrder.getRandomOrder();
        MySQLConstant.MySQLNullConstant mySQLConstant_MySQLNullConstant0 = new MySQLConstant.MySQLNullConstant();
        MySQLOrderByTerm mySQLOrderByTerm0 = new MySQLOrderByTerm(mySQLConstant_MySQLNullConstant0,
                mySQLOrderByTerm_MySQLOrder0);
        // Undeclared exception!
        try {
            mySQLOrderByTerm0.getExpectedValue();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.mysql.ast.MySQLOrderByTerm@2
            //
        }
    }
}
