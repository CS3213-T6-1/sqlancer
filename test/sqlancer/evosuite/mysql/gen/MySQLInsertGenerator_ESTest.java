/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 13:55:25 GMT 2025
 */

package sqlancer.evosuite.mysql.gen;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.mysql.gen.MySQLInsertGenerator;
import sqlancer.mysql.MySQLGlobalState;
import sqlancer.mysql.MySQLSchema;

public class MySQLInsertGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

/*
 * Test disabled because it contains mock() function calls that are not implemented
 *
 * @Test public void test0() throws Throwable { MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
 * LinkedList<MySQLSchema.MySQLColumn> linkedList0 = new LinkedList<MySQLSchema.MySQLColumn>();
 * MySQLSchema.MySQLTable.MySQLEngine mySQLSchema_MySQLTable_MySQLEngine0 = MySQLSchema.MySQLTable.MySQLEngine.ARCHIVE;
 * MySQLSchema.MySQLTable mySQLSchema_MySQLTable0 = new MySQLSchema.MySQLTable("~FwgVCZ Pxd3A,B\"{", linkedList0,
 * (List<MySQLSchema.MySQLIndex>) null, mySQLSchema_MySQLTable_MySQLEngine0); // Undeclared exception! try {
 * MySQLInsertGenerator.insertRow(mySQLGlobalState0, mySQLSchema_MySQLTable0);
 * fail("Expecting exception: AssertionError");
 *
 * } catch (AssertionError e) { // // [] 1 // } }
 *
 * @Test public void test1() throws Throwable { MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState(); //
 * Undeclared exception! try { MySQLInsertGenerator.insertRow(mySQLGlobalState0);
 * fail("Expecting exception: AssertionError");
 *
 * } catch (AssertionError e) { // // null // } }
 *
 * @Test public void test2() throws Throwable { MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
 * LinkedList<MySQLSchema.MySQLIndex> linkedList0 = new LinkedList<MySQLSchema.MySQLIndex>(); MySQLSchema.MySQLColumn
 * mySQLSchema_MySQLColumn0 = mock(MySQLSchema.MySQLColumn.class, new ViolatedAssumptionAnswer());
 * List<MySQLSchema.MySQLColumn> list0 = List.of(mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0,
 * mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0);
 * MySQLSchema.MySQLTable.MySQLEngine mySQLSchema_MySQLTable_MySQLEngine0 = MySQLSchema.MySQLTable.MySQLEngine.CSV;
 * MySQLSchema.MySQLTable mySQLSchema_MySQLTable0 = new MySQLSchema.MySQLTable("t^w:`4t(|05%u", list0, linkedList0,
 * mySQLSchema_MySQLTable_MySQLEngine0); MySQLInsertGenerator mySQLInsertGenerator0 = new
 * MySQLInsertGenerator(mySQLGlobalState0, mySQLSchema_MySQLTable0); }
 *
 * @Test public void test3() throws Throwable { // Undeclared exception! try {
 * MySQLInsertGenerator.insertRow((MySQLGlobalState) null); fail("Expecting exception: NullPointerException");
 *
 * } catch (NullPointerException e) { // // no message in exception (getMessage() returned null) //
 * verifyException("sqlancer.mysql.gen.MySQLInsertGenerator", e); } }
 *
 * @Test public void test4() throws Throwable { MySQLGlobalState mySQLGlobalState0 = new MySQLGlobalState();
 * LinkedList<MySQLSchema.MySQLIndex> linkedList0 = new LinkedList<MySQLSchema.MySQLIndex>(); MySQLSchema.MySQLColumn
 * mySQLSchema_MySQLColumn0 = mock(MySQLSchema.MySQLColumn.class, new ViolatedAssumptionAnswer());
 * doReturn("t^w:`4t(|05%u").when(mySQLSchema_MySQLColumn0).getName(); List<MySQLSchema.MySQLColumn> list0 =
 * List.of(mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0,
 * mySQLSchema_MySQLColumn0, mySQLSchema_MySQLColumn0); MySQLSchema.MySQLTable.MySQLEngine
 * mySQLSchema_MySQLTable_MySQLEngine0 = MySQLSchema.MySQLTable.MySQLEngine.HEAP; MySQLSchema.MySQLTable
 * mySQLSchema_MySQLTable0 = new MySQLSchema.MySQLTable("t^w:`4t(|05%u", list0, linkedList0,
 * mySQLSchema_MySQLTable_MySQLEngine0); // Undeclared exception! try {
 * MySQLInsertGenerator.insertRow(mySQLGlobalState0, mySQLSchema_MySQLTable0);
 * fail("Expecting exception: NullPointerException");
 *
 * } catch (NullPointerException e) { // // no message in exception (getMessage() returned null) //
 * verifyException("sqlancer.mysql.MySQLGlobalState", e); } } }
 */
