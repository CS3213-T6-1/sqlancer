/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 18:09:51 GMT 2025
 */

package sqlancer.evosuite;

import sqlancer.LikeImplementationHelper;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

public class LikeImplementationHelper_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("7E1HQz2YSyG", "7E1HQz2YSyG", 0, 0, false);
        assertTrue(boolean0);
    }

    @Test
    public void test01() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("jr=}", "p", 0, 0, false);
        assertFalse(boolean0);
    }

    @Test
    public void test02() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("F_H4$", " ", 0, 745, false);
        assertFalse(boolean0);
    }

    @Test
    public void test03() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("", "", 136, 0, false);
        assertFalse(boolean0);
    }

    @Test
    public void test04() throws Throwable {
        // Undeclared exception!
        try {
            LikeImplementationHelper.match((String) null, (String) null, (-1), (-1), false);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.LikeImplementationHelper", e);
        }
    }

    @Test
    public void test05() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("uq4!qB-+?#4ZxS.-N", "9o", 0, 0, true);
        assertFalse(boolean0);
    }

    @Test
    public void test06() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("jr=}", "$", 0, 0, false);
        assertFalse(boolean0);
    }

    @Test
    public void test07() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("V@td<QmS0", "V@td<QmS0", 0, 0, true);
        assertTrue(boolean0);
    }

    @Test
    public void test08() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("%-Az", "%-Az", 0, 0, true);
        assertTrue(boolean0);
    }

    @Test
    public void test09() throws Throwable {
        // Undeclared exception!
        try {
            LikeImplementationHelper.match("", "_k", 0, (-2568), true);
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test10() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("", "%9eW1z", 0, 814, false);
        assertFalse(boolean0);
    }

    @Test
    public void test11() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("", "", 0, 0, false);
        assertTrue(boolean0);
    }

    @Test
    public void test12() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("%-Az", "%-Az", 0, 1, true);
        assertTrue(boolean0);
    }

    @Test
    public void test13() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("!#n5@Q&GE++", "%-Az", 0, 0, true);
        assertFalse(boolean0);
    }

    @Test
    public void test14() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("#7D6{_rsE%;", "#7D6{_rsE%;", 0, 0, false);
        assertTrue(boolean0);
    }

    @Test
    public void test15() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("", "", 0, 1, false);
        assertFalse(boolean0);
    }

    @Test
    public void test16() throws Throwable {
        boolean boolean0 = LikeImplementationHelper.match("sqlanc[r.L%>eImplementationHelper",
                "sqlanc[r.L%>eImplementationHelper", 0, 0, false);
        assertTrue(boolean0);
    }
}
