/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:52:19 GMT 2025
 */

package sqlancer.evosuite.tidb.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;
import sqlancer.tidb.ast.TiDBBinaryBitOperation;
import sqlancer.tidb.ast.TiDBColumnReference;
import sqlancer.tidb.ast.TiDBConstant;
import sqlancer.tidb.ast.TiDBExpression;
import sqlancer.tidb.ast.TiDBJoin;
import sqlancer.tidb.ast.TiDBOrderingTerm;
import sqlancer.tidb.ast.TiDBSelect;
import sqlancer.tidb.ast.TiDBText;
import sqlancer.tidb.ast.TiDBUnaryPrefixOperation;
import sqlancer.tidb.TiDBProvider;
import sqlancer.tidb.TiDBSchema;

public class TiDBJoin_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        TiDBJoin tiDBJoin0 = TiDBJoin.createRightOuterJoin((TiDBExpression) null, (TiDBExpression) null,
                (TiDBExpression) null);
        TiDBJoin tiDBJoin1 = TiDBJoin.createStraightJoin(tiDBJoin0, (TiDBExpression) null, (TiDBExpression) null);
        assertNull(tiDBJoin1.getNaturalJoinType());
    }

    @Test
    public void test01() throws Throwable {
        TiDBText tiDBText0 = new TiDBText("");
        TiDBUnaryPrefixOperation.TiDBUnaryPrefixOperator tiDBUnaryPrefixOperation_TiDBUnaryPrefixOperator0 = TiDBUnaryPrefixOperation.TiDBUnaryPrefixOperator.PLUS;
        TiDBUnaryPrefixOperation tiDBUnaryPrefixOperation0 = new TiDBUnaryPrefixOperation(tiDBText0,
                tiDBUnaryPrefixOperation_TiDBUnaryPrefixOperator0);
        TiDBJoin tiDBJoin0 = TiDBJoin.createRightOuterJoin(tiDBUnaryPrefixOperation0, tiDBText0, tiDBText0);
        assertNull(tiDBJoin0.getNaturalJoinType());
    }

    @Test
    public void test02() throws Throwable {
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBOrderingTerm tiDBOrderingTerm0 = new TiDBOrderingTerm(tiDBConstant_TiDBNullConstant0, false);
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBJoin tiDBJoin0 = TiDBJoin.createRightOuterJoin(tiDBOrderingTerm0, tiDBOrderingTerm0, tiDBSelect0);
        assertNull(tiDBJoin0.getNaturalJoinType());
    }

    @Test
    public void test03() throws Throwable {
        TiDBJoin.JoinType tiDBJoin_JoinType0 = TiDBJoin.JoinType.getRandom();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin tiDBJoin0 = new TiDBJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_JoinType0, tiDBConstant_TiDBNullConstant0);
        TiDBJoin tiDBJoin1 = TiDBJoin.createInnerJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin0);
        assertEquals(TiDBJoin.JoinType.INNER, tiDBJoin1.getJoinType());
    }

    @Test
    public void test04() throws Throwable {
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin tiDBJoin0 = TiDBJoin.createInnerJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBConstant_TiDBNullConstant0);
        TiDBJoin tiDBJoin1 = TiDBJoin.createCrossJoin(tiDBJoin0, tiDBJoin0, tiDBConstant_TiDBNullConstant0);
        assertNull(tiDBJoin1.getNaturalJoinType());
    }

    @Test
    public void test05() throws Throwable {
        TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin((TiDBExpression) null, (TiDBExpression) null,
                (TiDBExpression) null);
        TiDBJoin tiDBJoin1 = TiDBJoin.createCrossJoin(tiDBJoin0, (TiDBExpression) null, (TiDBExpression) null);
        assertNotSame(tiDBJoin0, tiDBJoin1);
    }

    @Test
    public void test06() throws Throwable {
        TiDBJoin.JoinType tiDBJoin_JoinType0 = TiDBJoin.JoinType.CROSS;
        TiDBJoin tiDBJoin0 = new TiDBJoin((TiDBExpression) null, (TiDBExpression) null, tiDBJoin_JoinType0,
                (TiDBExpression) null);
        TiDBExpression tiDBExpression0 = tiDBJoin0.getRightTable();
        assertNull(tiDBExpression0);
    }

    @Test
    public void test07() throws Throwable {
        TiDBJoin tiDBJoin0 = TiDBJoin.createInnerJoin((TiDBExpression) null, (TiDBExpression) null,
                (TiDBExpression) null);
        TiDBExpression tiDBExpression0 = tiDBJoin0.getOnCondition();
        assertNull(tiDBExpression0);
    }

    @Test
    public void test08() throws Throwable {
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.RIGHT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin((TiDBExpression) null, tiDBSelect0, tiDBJoin_NaturalJoinType0);
        TiDBExpression tiDBExpression0 = tiDBJoin0.getLeftTable();
        assertNull(tiDBExpression0);
    }

    @Test
    public void test09() throws Throwable {
        // Undeclared exception!
        try {
            TiDBJoin.getJoinsWithoutNature((List<TiDBExpression>) null, (TiDBProvider.TiDBGlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.ast.TiDBJoin", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        TiDBProvider.TiDBGlobalState tiDBProvider_TiDBGlobalState0 = new TiDBProvider.TiDBGlobalState();
        // Undeclared exception!
        try {
            TiDBJoin.getJoins((List<TiDBExpression>) null, tiDBProvider_TiDBGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.ast.TiDBJoin", e);
        }
    }

    // @Test
    // public void test11() throws Throwable {
    // TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(true);
    // TiDBBinaryBitOperation.TiDBBinaryBitOperator tiDBBinaryBitOperation_TiDBBinaryBitOperator0 =
    // TiDBBinaryBitOperation.TiDBBinaryBitOperator.LEFT_SHIFT;
    // TiDBBinaryBitOperation tiDBBinaryBitOperation0 = new TiDBBinaryBitOperation(tiDBConstant_TiDBBooleanConstant0,
    // tiDBConstant_TiDBBooleanConstant0, tiDBBinaryBitOperation_TiDBBinaryBitOperator0);
    // TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin(tiDBBinaryBitOperation0, tiDBBinaryBitOperation0,
    // tiDBConstant_TiDBBooleanConstant0);
    // TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
    // List<TiDBExpression> list0 = List.of((TiDBExpression) tiDBJoin0,
    // (TiDBExpression) tiDBConstant_TiDBBooleanConstant0, (TiDBExpression) tiDBJoin0,
    // (TiDBExpression) tiDBJoin0, (TiDBExpression) tiDBBinaryBitOperation0,
    // (TiDBExpression) tiDBConstant_TiDBNullConstant0, (TiDBExpression) tiDBConstant_TiDBNullConstant0,
    // (TiDBExpression) tiDBConstant_TiDBNullConstant0, (TiDBExpression) tiDBConstant_TiDBNullConstant0,
    // (TiDBExpression) tiDBBinaryBitOperation0);
    // TiDBProvider.TiDBGlobalState tiDBProvider_TiDBGlobalState0 = new TiDBProvider.TiDBGlobalState();
    // List<TiDBExpression> list1 = TiDBJoin.getJoinsWithoutNature(list0, tiDBProvider_TiDBGlobalState0);
    // assertFalse(list1.equals((Object) list0));
    // }

    @Test
    public void test12() throws Throwable {
        LinkedList<TiDBExpression> linkedList0 = new LinkedList<TiDBExpression>();
        TiDBProvider.TiDBGlobalState tiDBProvider_TiDBGlobalState0 = new TiDBProvider.TiDBGlobalState();
        List<TiDBExpression> list0 = TiDBJoin.getJoinsWithoutNature(linkedList0, tiDBProvider_TiDBGlobalState0);
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test13() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(true);
        TiDBBinaryBitOperation.TiDBBinaryBitOperator tiDBBinaryBitOperation_TiDBBinaryBitOperator0 = TiDBBinaryBitOperation.TiDBBinaryBitOperator.LEFT_SHIFT;
        TiDBBinaryBitOperation tiDBBinaryBitOperation0 = new TiDBBinaryBitOperation(tiDBConstant_TiDBBooleanConstant0,
                tiDBConstant_TiDBBooleanConstant0, tiDBBinaryBitOperation_TiDBBinaryBitOperator0);
        TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin(tiDBBinaryBitOperation0, tiDBBinaryBitOperation0,
                tiDBConstant_TiDBBooleanConstant0);
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        List<TiDBExpression> list0 = List.of((TiDBExpression) tiDBJoin0,
                (TiDBExpression) tiDBConstant_TiDBBooleanConstant0, (TiDBExpression) tiDBJoin0,
                (TiDBExpression) tiDBJoin0, (TiDBExpression) tiDBBinaryBitOperation0,
                (TiDBExpression) tiDBConstant_TiDBNullConstant0, (TiDBExpression) tiDBConstant_TiDBNullConstant0,
                (TiDBExpression) tiDBConstant_TiDBNullConstant0, (TiDBExpression) tiDBConstant_TiDBNullConstant0,
                (TiDBExpression) tiDBBinaryBitOperation0);
        TiDBProvider.TiDBGlobalState tiDBProvider_TiDBGlobalState0 = new TiDBProvider.TiDBGlobalState();
        List<TiDBJoin> list1 = TiDBJoin.getJoins(list0, tiDBProvider_TiDBGlobalState0);
        assertFalse(list1.contains(tiDBJoin0));
    }

    @Test
    public void test14() throws Throwable {
        LinkedList<TiDBExpression> linkedList0 = new LinkedList<TiDBExpression>();
        TiDBProvider.TiDBGlobalState tiDBProvider_TiDBGlobalState0 = new TiDBProvider.TiDBGlobalState();
        List<TiDBJoin> list0 = TiDBJoin.getJoins(linkedList0, tiDBProvider_TiDBGlobalState0);
        assertEquals(0, list0.size());
    }

    // @Test
    // public void test16() throws Throwable {
    // TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.getRandom();
    // assertEquals(TiDBJoin.NaturalJoinType.INNER, tiDBJoin_NaturalJoinType0);
    // }

    @Test
    public void test17() throws Throwable {
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.JoinType tiDBJoin_JoinType0 = TiDBJoin.JoinType.NATURAL;
        TiDBJoin tiDBJoin0 = new TiDBJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_JoinType0, tiDBConstant_TiDBNullConstant0);
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant1 = (TiDBConstant.TiDBNullConstant) tiDBJoin0
                .getLeftTable();
        assertEquals("NULL", tiDBConstant_TiDBNullConstant1.toString());
    }

    @Test
    public void test18() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(true);
        TiDBBinaryBitOperation.TiDBBinaryBitOperator tiDBBinaryBitOperation_TiDBBinaryBitOperator0 = TiDBBinaryBitOperation.TiDBBinaryBitOperator.LEFT_SHIFT;
        TiDBBinaryBitOperation tiDBBinaryBitOperation0 = new TiDBBinaryBitOperation(tiDBConstant_TiDBBooleanConstant0,
                tiDBConstant_TiDBBooleanConstant0, tiDBBinaryBitOperation_TiDBBinaryBitOperator0);
        TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin(tiDBBinaryBitOperation0, tiDBBinaryBitOperation0,
                tiDBConstant_TiDBBooleanConstant0);
        TiDBExpression tiDBExpression0 = tiDBJoin0.getOnCondition();
        assertSame(tiDBExpression0, tiDBConstant_TiDBBooleanConstant0);
    }

    @Test
    public void test19() throws Throwable {
        TiDBSchema.TiDBColumn tiDBSchema_TiDBColumn0 = new TiDBSchema.TiDBColumn("",
                (TiDBSchema.TiDBCompositeDataType) null, false, true, true);
        TiDBColumnReference tiDBColumnReference0 = new TiDBColumnReference(tiDBSchema_TiDBColumn0);
        TiDBOrderingTerm tiDBOrderingTerm0 = new TiDBOrderingTerm(tiDBColumnReference0, true);
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.LEFT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBOrderingTerm0, tiDBColumnReference0,
                tiDBJoin_NaturalJoinType0);
        TiDBExpression tiDBExpression0 = tiDBJoin0.getRightTable();
        assertSame(tiDBExpression0, tiDBColumnReference0);
    }

    @Test
    public void test20() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(true);
        TiDBBinaryBitOperation.TiDBBinaryBitOperator tiDBBinaryBitOperation_TiDBBinaryBitOperator0 = TiDBBinaryBitOperation.TiDBBinaryBitOperator.LEFT_SHIFT;
        TiDBBinaryBitOperation tiDBBinaryBitOperation0 = new TiDBBinaryBitOperation(tiDBConstant_TiDBBooleanConstant0,
                tiDBConstant_TiDBBooleanConstant0, tiDBBinaryBitOperation_TiDBBinaryBitOperator0);
        TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin(tiDBBinaryBitOperation0, tiDBBinaryBitOperation0,
                tiDBConstant_TiDBBooleanConstant0);
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin tiDBJoin1 = TiDBJoin.createLeftOuterJoin(tiDBJoin0, tiDBConstant_TiDBNullConstant0,
                tiDBBinaryBitOperation0);
        assertNotSame(tiDBJoin0, tiDBJoin1);
    }

    @Test
    public void test21() throws Throwable {
        TiDBSchema.TiDBColumn tiDBSchema_TiDBColumn0 = new TiDBSchema.TiDBColumn("",
                (TiDBSchema.TiDBCompositeDataType) null, false, true, true);
        TiDBColumnReference tiDBColumnReference0 = new TiDBColumnReference(tiDBSchema_TiDBColumn0);
        TiDBOrderingTerm tiDBOrderingTerm0 = new TiDBOrderingTerm(tiDBColumnReference0, true);
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.LEFT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBOrderingTerm0, tiDBColumnReference0,
                tiDBJoin_NaturalJoinType0);
        TiDBJoin.JoinType tiDBJoin_JoinType0 = TiDBJoin.JoinType.RIGHT;
        tiDBJoin0.setJoinType(tiDBJoin_JoinType0);
        assertEquals(TiDBJoin.JoinType.RIGHT, tiDBJoin0.getJoinType());
    }

    @Test
    public void test22() throws Throwable {
        TiDBSchema.TiDBColumn tiDBSchema_TiDBColumn0 = new TiDBSchema.TiDBColumn("",
                (TiDBSchema.TiDBCompositeDataType) null, false, true, true);
        TiDBColumnReference tiDBColumnReference0 = new TiDBColumnReference(tiDBSchema_TiDBColumn0);
        TiDBOrderingTerm tiDBOrderingTerm0 = new TiDBOrderingTerm(tiDBColumnReference0, true);
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.LEFT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBOrderingTerm0, tiDBColumnReference0,
                tiDBJoin_NaturalJoinType0);
        tiDBJoin0.setOnCondition(tiDBJoin0);
        assertEquals(TiDBJoin.JoinType.NATURAL, tiDBJoin0.getJoinType());
    }

    @Test
    public void test23() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(true);
        TiDBBinaryBitOperation.TiDBBinaryBitOperator tiDBBinaryBitOperation_TiDBBinaryBitOperator0 = TiDBBinaryBitOperation.TiDBBinaryBitOperator.LEFT_SHIFT;
        TiDBBinaryBitOperation tiDBBinaryBitOperation0 = new TiDBBinaryBitOperation(tiDBConstant_TiDBBooleanConstant0,
                tiDBConstant_TiDBBooleanConstant0, tiDBBinaryBitOperation_TiDBBinaryBitOperator0);
        TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin(tiDBBinaryBitOperation0, tiDBBinaryBitOperation0,
                tiDBConstant_TiDBBooleanConstant0);
        TiDBJoin.JoinType tiDBJoin_JoinType0 = tiDBJoin0.getJoinType();
        assertEquals(TiDBJoin.JoinType.STRAIGHT, tiDBJoin_JoinType0);
    }

    @Test
    public void test24() throws Throwable {
        TiDBJoin tiDBJoin0 = TiDBJoin.createRightOuterJoin((TiDBExpression) null, (TiDBExpression) null,
                (TiDBExpression) null);
        tiDBJoin0.setOnClause((TiDBExpression) tiDBJoin0);
        assertEquals(TiDBJoin.JoinType.RIGHT, tiDBJoin0.getJoinType());
    }

    @Test
    public void test25() throws Throwable {
        TiDBJoin tiDBJoin0 = TiDBJoin.createRightOuterJoin((TiDBExpression) null, (TiDBExpression) null,
                (TiDBExpression) null);
        tiDBJoin0.getNaturalJoinType();
    }

    @Test
    public void test26() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(true);
        TiDBBinaryBitOperation.TiDBBinaryBitOperator tiDBBinaryBitOperation_TiDBBinaryBitOperator0 = TiDBBinaryBitOperation.TiDBBinaryBitOperator.LEFT_SHIFT;
        TiDBBinaryBitOperation tiDBBinaryBitOperation0 = new TiDBBinaryBitOperation(tiDBConstant_TiDBBooleanConstant0,
                tiDBConstant_TiDBBooleanConstant0, tiDBBinaryBitOperation_TiDBBinaryBitOperator0);
        TiDBJoin tiDBJoin0 = TiDBJoin.createStraightJoin(tiDBBinaryBitOperation0, tiDBBinaryBitOperation0,
                tiDBConstant_TiDBBooleanConstant0);
        TiDBJoin tiDBJoin1 = TiDBJoin.createInnerJoin(tiDBJoin0, tiDBBinaryBitOperation0, tiDBJoin0);
        assertNotSame(tiDBJoin0, tiDBJoin1);
    }

    @Test
    public void test27() throws Throwable {
        TiDBJoin.JoinType tiDBJoin_JoinType0 = TiDBJoin.JoinType.getRandom();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin tiDBJoin0 = new TiDBJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_JoinType0, tiDBConstant_TiDBNullConstant0);
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.INNER;
        TiDBJoin tiDBJoin1 = TiDBJoin.createNaturalJoin(tiDBJoin0, (TiDBExpression) null, tiDBJoin_NaturalJoinType0);
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType1 = tiDBJoin1.getNaturalJoinType();
        assertSame(tiDBJoin_NaturalJoinType1, tiDBJoin_NaturalJoinType0);
    }
}
