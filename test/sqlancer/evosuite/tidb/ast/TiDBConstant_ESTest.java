/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 20:38:02 GMT 2025
 */

package sqlancer.evosuite.tidb.ast;

import sqlancer.tidb.ast.TiDBConstant;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class TiDBConstant_ESTest {

    @Test
    public void test00() throws Throwable {
        TiDBConstant.TiDBIntConstant tiDBConstant_TiDBIntConstant0 = TiDBConstant.createIntConstant(848L);
        assertEquals(848L, tiDBConstant_TiDBIntConstant0.getValue());
    }

    @Test
    public void test01() throws Throwable {
        TiDBConstant.TiDBIntConstant tiDBConstant_TiDBIntConstant0 = TiDBConstant.createIntConstant((-97L));
        assertEquals("-97", tiDBConstant_TiDBIntConstant0.toString());
    }

    @Test
    public void test02() throws Throwable {
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = new TiDBConstant.TiDBDoubleConstant(0.0);
        assertEquals(0.0, tiDBConstant_TiDBDoubleConstant0.getValue(), 0.01);
    }

    @Test
    public void test03() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(
                false);
        assertFalse(tiDBConstant_TiDBBooleanConstant0.getValue());
    }

    @Test
    public void test04() throws Throwable {
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = TiDBConstant
                .createFloatConstant(Double.POSITIVE_INFINITY);
        String string0 = tiDBConstant_TiDBDoubleConstant0.toString();
        assertEquals("'+Inf'", string0);
    }

    @Test
    public void test05() throws Throwable {
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = TiDBConstant.createFloatConstant(0L);
        String string0 = tiDBConstant_TiDBDoubleConstant0.toString();
        assertEquals("0.0", string0);
    }

    @Test
    public void test06() throws Throwable {
        TiDBConstant.TiDBIntConstant tiDBConstant_TiDBIntConstant0 = new TiDBConstant.TiDBIntConstant(0L);
        String string0 = tiDBConstant_TiDBIntConstant0.toString();
        assertEquals("0", string0);
    }

    @Test
    public void test07() throws Throwable {
        TiDBConstant.TiDBIntConstant tiDBConstant_TiDBIntConstant0 = new TiDBConstant.TiDBIntConstant(0L);
        long long0 = tiDBConstant_TiDBIntConstant0.getValue();
        assertEquals(0L, long0);
    }

    @Test
    public void test08() throws Throwable {
        TiDBConstant.TiDBTextConstant tiDBConstant_TiDBTextConstant0 = new TiDBConstant.TiDBTextConstant("");
        String string0 = tiDBConstant_TiDBTextConstant0.toString();
        assertEquals("''", string0);
    }

    @Test
    public void test09() throws Throwable {
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = (TiDBConstant.TiDBBooleanConstant) TiDBConstant
                .createBooleanConstant(false);
        boolean boolean0 = tiDBConstant_TiDBBooleanConstant0.getValue();
        assertFalse(boolean0);
    }

    @Test
    public void test10() throws Throwable {
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        String string0 = tiDBConstant_TiDBNullConstant0.toString();
        assertEquals("NULL", string0);
    }

    @Test
    public void test11() throws Throwable {
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        assertEquals("NULL", tiDBConstant_TiDBNullConstant0.toString());
    }

    @Test
    public void test12() throws Throwable {
        TiDBConstant tiDBConstant0 = TiDBConstant.createBooleanConstant(false);
        String string0 = ((TiDBConstant.TiDBBooleanConstant) tiDBConstant0).toString();
        assertEquals("false", string0);
    }

    @Test
    public void test13() throws Throwable {
        TiDBConstant.TiDBTextConstant tiDBConstant_TiDBTextConstant0 = TiDBConstant.createStringConstant("");
        String string0 = tiDBConstant_TiDBTextConstant0.getValue();
        assertEquals("", string0);
    }

    @Test
    public void test14() throws Throwable {
        TiDBConstant.TiDBIntConstant tiDBConstant_TiDBIntConstant0 = TiDBConstant.createIntConstant(0L);
        assertEquals(0L, tiDBConstant_TiDBIntConstant0.getValue());
    }

    @Test
    public void test15() throws Throwable {
        TiDBConstant.TiDBBitConstant tiDBConstant_TiDBBitConstant0 = new TiDBConstant.TiDBBitConstant((-97L));
        String string0 = tiDBConstant_TiDBBitConstant0.toString();
        assertEquals("B'1111111111111111111111111111111111111111111111111111111110011111'", string0);
    }

    @Test
    public void test16() throws Throwable {
        TiDBConstant.TiDBBitConstant tiDBConstant_TiDBBitConstant0 = new TiDBConstant.TiDBBitConstant((-1680L));
        String string0 = tiDBConstant_TiDBBitConstant0.getValue();
        assertEquals("1111111111111111111111111111111111111111111111111111100101110000", string0);
    }

    @Test
    public void test17() throws Throwable {
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = TiDBConstant.createFloatConstant(0L);
        double double0 = tiDBConstant_TiDBDoubleConstant0.getValue();
        assertEquals(0.0, double0, 0.01);
    }

    @Test
    public void test18() throws Throwable {
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = TiDBConstant
                .createFloatConstant(Double.NEGATIVE_INFINITY);
        String string0 = tiDBConstant_TiDBDoubleConstant0.toString();
        assertEquals("'-Inf'", string0);
    }
}
