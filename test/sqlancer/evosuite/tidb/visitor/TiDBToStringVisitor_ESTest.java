/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:15:39 GMT 2025
 */

package sqlancer.evosuite.tidb.visitor;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;
import sqlancer.common.schema.TableIndex;
import sqlancer.Randomly;
import sqlancer.tidb.ast.TiDBAggregate;
import sqlancer.tidb.ast.TiDBBinaryLogicalOperation;
import sqlancer.tidb.ast.TiDBCase;
import sqlancer.tidb.ast.TiDBCastOperation;
import sqlancer.tidb.ast.TiDBCollate;
import sqlancer.tidb.ast.TiDBColumnReference;
import sqlancer.tidb.ast.TiDBConstant;
import sqlancer.tidb.ast.TiDBExpression;
import sqlancer.tidb.ast.TiDBFunctionCall;
import sqlancer.tidb.ast.TiDBJoin;
import sqlancer.tidb.ast.TiDBSelect;
import sqlancer.tidb.ast.TiDBTableReference;
import sqlancer.tidb.ast.TiDBText;
import sqlancer.tidb.TiDBSchema;
import sqlancer.tidb.visitor.TiDBToStringVisitor;

public class TiDBToStringVisitor_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant tiDBConstant0 = TiDBConstant.createBooleanConstant(true);
        TiDBCastOperation tiDBCastOperation0 = new TiDBCastOperation(tiDBConstant0, "");
        tiDBToStringVisitor0.visitSpecific((TiDBExpression) tiDBCastOperation0);
        assertEquals("", tiDBCastOperation0.getType());
    }

    @Test
    public void test01() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBFunctionCall.TiDBFunction tiDBFunctionCall_TiDBFunction0 = TiDBFunctionCall.TiDBFunction.VERSION;
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        List<TiDBExpression> list0 = tiDBSelect0.getOrderByClauses();
        TiDBFunctionCall tiDBFunctionCall0 = new TiDBFunctionCall(tiDBFunctionCall_TiDBFunction0, list0);
        tiDBToStringVisitor0.visit(tiDBFunctionCall0);
        assertEquals("VERSION()", tiDBToStringVisitor0.get());
    }

    @Test
    public void test02() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBExpression[] tiDBExpressionArray0 = new TiDBExpression[2];
        TiDBConstant.TiDBTextConstant tiDBConstant_TiDBTextConstant0 = new TiDBConstant.TiDBTextConstant("ne 9~EC");
        TiDBJoin tiDBJoin0 = TiDBJoin.createLeftOuterJoin(tiDBConstant_TiDBTextConstant0,
                tiDBConstant_TiDBTextConstant0, tiDBConstant_TiDBTextConstant0);
        tiDBExpressionArray0[1] = (TiDBExpression) tiDBJoin0;
        List<TiDBExpression> list0 = Randomly.nonEmptySubset(tiDBExpressionArray0);
        TiDBAggregate.TiDBAggregateFunction tiDBAggregate_TiDBAggregateFunction0 = TiDBAggregate.TiDBAggregateFunction.MAX;
        TiDBAggregate tiDBAggregate0 = new TiDBAggregate(list0, tiDBAggregate_TiDBAggregateFunction0);
        tiDBToStringVisitor0.visit(tiDBAggregate0);
    }

    @Test
    public void test03() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBExpression[] tiDBExpressionArray0 = new TiDBExpression[2];
        List<TiDBExpression> list0 = Randomly.nonEmptySubset(tiDBExpressionArray0);
        TiDBAggregate.TiDBAggregateFunction tiDBAggregate_TiDBAggregateFunction0 = TiDBAggregate.TiDBAggregateFunction.MAX;
        TiDBAggregate tiDBAggregate0 = new TiDBAggregate(list0, tiDBAggregate_TiDBAggregateFunction0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBAggregate0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBVisitor", e);
        }
    }

    @Test
    public void test04() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.INNER;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        tiDBToStringVisitor0.visit(tiDBJoin0);
        String string0 = tiDBToStringVisitor0.getString();
        assertNotNull(string0);
    }

    @Test
    public void test05() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visitSpecific((TiDBExpression) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBVisitor", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBBinaryLogicalOperation.TiDBBinaryLogicalOperator tiDBBinaryLogicalOperation_TiDBBinaryLogicalOperator0 = TiDBBinaryLogicalOperation.TiDBBinaryLogicalOperator.AND;
        TiDBBinaryLogicalOperation tiDBBinaryLogicalOperation0 = new TiDBBinaryLogicalOperation(
                tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBBinaryLogicalOperation_TiDBBinaryLogicalOperator0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visitSpecific((TiDBExpression) tiDBBinaryLogicalOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // class sqlancer.tidb.ast.TiDBBinaryLogicalOperation
            //
        }
    }

    @Test
    public void test07() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBText) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBTableReference) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test09() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBCollate tiDBCollate0 = new TiDBCollate(tiDBSelect0, "");
        tiDBSelect0.setHint(tiDBCollate0);
        tiDBToStringVisitor0.visit(tiDBSelect0);
    }

    @Test
    public void test10() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test11() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBJoin) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test12() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBJoin tiDBJoin0 = TiDBJoin.createLeftOuterJoin(tiDBSelect0, tiDBSelect0, tiDBSelect0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBJoin0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test13() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBFunctionCall) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test14() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBConstant) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("org.evosuite.runtime.System", e);
        }
    }

    @Test
    public void test15() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBColumnReference) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test16() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit((TiDBCastOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBToStringVisitor", e);
        }
    }

    @Test
    public void test17() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBCastOperation tiDBCastOperation0 = new TiDBCastOperation(tiDBSelect0, "true");
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBCastOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test18() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        List<TiDBExpression> list0 = tiDBSelect0.getOrderByClauses();
        TiDBCase tiDBCase0 = new TiDBCase(tiDBSelect0, list0, list0, tiDBSelect0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBCase0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test19() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.RIGHT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        tiDBToStringVisitor0.visit(tiDBJoin0);
        assertEquals(TiDBJoin.NaturalJoinType.RIGHT, tiDBJoin0.getNaturalJoinType());
    }

    @Test
    public void test20() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        tiDBSelect0.setHint(tiDBConstant_TiDBNullConstant0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test21() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test22() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBBooleanConstant tiDBConstant_TiDBBooleanConstant0 = new TiDBConstant.TiDBBooleanConstant(
                false);
        tiDBToStringVisitor0.visit((TiDBConstant) tiDBConstant_TiDBBooleanConstant0);
        assertFalse(tiDBConstant_TiDBBooleanConstant0.getValue());
    }

    @Test
    public void test23() throws Throwable {
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visitSpecific((TiDBExpression) tiDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test24() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        List<TiDBExpression> list0 = tiDBSelect0.getOrderByClauses();
        TiDBCase tiDBCase0 = new TiDBCase(tiDBConstant_TiDBNullConstant0, list0, list0, (TiDBExpression) null);
        tiDBToStringVisitor0.visit(tiDBCase0);
    }

    @Test
    public void test25() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = new TiDBConstant.TiDBDoubleConstant(0.0);
        TiDBExpression[] tiDBExpressionArray0 = new TiDBExpression[4];
        tiDBExpressionArray0[0] = (TiDBExpression) tiDBConstant_TiDBDoubleConstant0;
        TiDBConstant.TiDBBitConstant tiDBConstant_TiDBBitConstant0 = new TiDBConstant.TiDBBitConstant((-1803L));
        List<TiDBExpression> list0 = Randomly.subset(1, tiDBExpressionArray0);
        TiDBCase tiDBCase0 = new TiDBCase(tiDBConstant_TiDBDoubleConstant0, list0, list0,
                tiDBConstant_TiDBBitConstant0);
        tiDBToStringVisitor0.visit(tiDBCase0);
    }

    @Test
    public void test26() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBDoubleConstant tiDBConstant_TiDBDoubleConstant0 = new TiDBConstant.TiDBDoubleConstant(0.0);
        TiDBExpression[] tiDBExpressionArray0 = new TiDBExpression[4];
        TiDBConstant.TiDBBitConstant tiDBConstant_TiDBBitConstant0 = new TiDBConstant.TiDBBitConstant((-1803L));
        List<TiDBExpression> list0 = Randomly.subset(1, tiDBExpressionArray0);
        TiDBCase tiDBCase0 = new TiDBCase(tiDBConstant_TiDBDoubleConstant0, list0, list0,
                tiDBConstant_TiDBBitConstant0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBCase0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.tidb.visitor.TiDBVisitor", e);
        }
    }

    @Test
    public void test27() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.INNER;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        tiDBJoin0.setOnClause((TiDBExpression) tiDBConstant_TiDBNullConstant0);
        tiDBToStringVisitor0.visit(tiDBJoin0);
        assertEquals(TiDBJoin.JoinType.NATURAL, tiDBJoin0.getJoinType());
    }

    @Test
    public void test28() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.LEFT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        tiDBToStringVisitor0.visit(tiDBJoin0);
        assertEquals(TiDBJoin.NaturalJoinType.LEFT, tiDBJoin0.getNaturalJoinType());
    }

    @Test
    public void test29() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.RIGHT;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        TiDBConstant.TiDBIntConstant tiDBConstant_TiDBIntConstant0 = TiDBConstant.createIntConstant(0L);
        TiDBJoin tiDBJoin1 = TiDBJoin.createCrossJoin(tiDBJoin0, tiDBConstant_TiDBNullConstant0,
                tiDBConstant_TiDBIntConstant0);
        tiDBToStringVisitor0.visit(tiDBJoin1);
        assertEquals(TiDBJoin.JoinType.CROSS, tiDBJoin1.getJoinType());
    }

    @Test
    public void test30() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin tiDBJoin0 = TiDBJoin.createLeftOuterJoin(tiDBConstant_TiDBNullConstant0,
                tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0);
        tiDBToStringVisitor0.visit(tiDBJoin0);
        assertNull(tiDBJoin0.getNaturalJoinType());
    }

    @Test
    public void test31() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.INNER;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        TiDBJoin tiDBJoin1 = TiDBJoin.createStraightJoin(tiDBJoin0, tiDBJoin0, tiDBJoin0);
        tiDBToStringVisitor0.visit(tiDBJoin1);
        assertNotSame(tiDBJoin0, tiDBJoin1);
    }

    @Test
    public void test32() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = new TiDBConstant.TiDBNullConstant();
        TiDBJoin tiDBJoin0 = TiDBJoin.createInnerJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBConstant_TiDBNullConstant0);
        tiDBToStringVisitor0.visit(tiDBJoin0);
        assertEquals(TiDBJoin.JoinType.INNER, tiDBJoin0.getJoinType());
    }

    @Test
    public void test33() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.INNER;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        TiDBJoin tiDBJoin1 = TiDBJoin.createRightOuterJoin(tiDBJoin0, tiDBConstant_TiDBNullConstant0,
                tiDBConstant_TiDBNullConstant0);
        tiDBToStringVisitor0.visit(tiDBJoin1);
        assertNull(tiDBJoin1.getNaturalJoinType());
    }

    @Test
    public void test34() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSchema.TiDBCompositeDataType tiDBSchema_TiDBCompositeDataType0 = TiDBSchema.TiDBCompositeDataType
                .getInt(54);
        TiDBSchema.TiDBColumn tiDBSchema_TiDBColumn0 = new TiDBSchema.TiDBColumn("/}(Ut|;Q0@E",
                tiDBSchema_TiDBCompositeDataType0, false, true, false);
        TiDBColumnReference tiDBColumnReference0 = new TiDBColumnReference(tiDBSchema_TiDBColumn0);
        tiDBToStringVisitor0.visit(tiDBColumnReference0);
        assertEquals("/}(Ut|;Q0@E", tiDBToStringVisitor0.getString());
    }

    @Test
    public void test35() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSchema.TiDBCompositeDataType tiDBSchema_TiDBCompositeDataType0 = TiDBSchema.TiDBCompositeDataType
                .getRandom();
        TiDBSchema.TiDBColumn tiDBSchema_TiDBColumn0 = new TiDBSchema.TiDBColumn("F?0TuXd`RaKRDZ/!_>",
                tiDBSchema_TiDBCompositeDataType0, true, true, true);
        TiDBSchema.TiDBColumn[] tiDBSchema_TiDBColumnArray0 = new TiDBSchema.TiDBColumn[2];
        List<TiDBSchema.TiDBColumn> list0 = Randomly.nonEmptySubset(tiDBSchema_TiDBColumnArray0);
        LinkedList<TableIndex> linkedList0 = new LinkedList<TableIndex>();
        TiDBSchema.TiDBTable tiDBSchema_TiDBTable0 = new TiDBSchema.TiDBTable("", list0, linkedList0, true);
        tiDBSchema_TiDBColumn0.setTable(tiDBSchema_TiDBTable0);
        TiDBColumnReference tiDBColumnReference0 = new TiDBColumnReference(tiDBSchema_TiDBColumn0);
        tiDBToStringVisitor0.visit(tiDBColumnReference0);
        assertEquals(".F?0TuXd`RaKRDZ/!_>", tiDBToStringVisitor0.get());
    }

    @Test
    public void test36() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        String string0 = tiDBToStringVisitor0.getString();
        assertEquals("", string0);
    }

    @Test
    public void test37() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBText tiDBText0 = new TiDBText(
                " sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 NATURAL JOIN sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002  sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 NATURAL JOIN sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 STRAIGHT_JOIN  sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 NATURAL JOIN sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 ON  sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 NATURAL JOIN sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002CAST( sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 NATURAL JOIN sqlancer.tidb.ast.TiDBConstant$TiDBNullConstant@0000000002 AS )");
        tiDBToStringVisitor0.visit(tiDBText0);
    }

    @Test
    public void test38() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBConstant.TiDBNullConstant tiDBConstant_TiDBNullConstant0 = TiDBConstant.createNullConstant();
        TiDBJoin.NaturalJoinType tiDBJoin_NaturalJoinType0 = TiDBJoin.NaturalJoinType.INNER;
        TiDBJoin tiDBJoin0 = TiDBJoin.createNaturalJoin(tiDBConstant_TiDBNullConstant0, tiDBConstant_TiDBNullConstant0,
                tiDBJoin_NaturalJoinType0);
        TiDBCastOperation tiDBCastOperation0 = new TiDBCastOperation(tiDBJoin0, "");
        tiDBToStringVisitor0.visit(tiDBCastOperation0);
        assertEquals("", tiDBCastOperation0.getType());
    }

    @Test
    public void test39() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSelect tiDBSelect0 = new TiDBSelect();
        TiDBFunctionCall.TiDBFunction tiDBFunctionCall_TiDBFunction0 = TiDBFunctionCall.TiDBFunction.BIT_COUNT;
        TiDBText tiDBText0 = new TiDBText("5^JKoe}yIu3m'XP)");
        List<TiDBExpression> list0 = List.of((TiDBExpression) tiDBSelect0, (TiDBExpression) tiDBSelect0,
                (TiDBExpression) tiDBText0, (TiDBExpression) tiDBText0, (TiDBExpression) tiDBText0,
                (TiDBExpression) tiDBSelect0);
        TiDBFunctionCall tiDBFunctionCall0 = new TiDBFunctionCall(tiDBFunctionCall_TiDBFunction0, list0);
        // Undeclared exception!
        try {
            tiDBToStringVisitor0.visit(tiDBFunctionCall0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test40() throws Throwable {
        TiDBToStringVisitor tiDBToStringVisitor0 = new TiDBToStringVisitor();
        TiDBSchema.TiDBColumn[] tiDBSchema_TiDBColumnArray0 = new TiDBSchema.TiDBColumn[9];
        List<TiDBSchema.TiDBColumn> list0 = Randomly.nonEmptySubset(tiDBSchema_TiDBColumnArray0);
        LinkedList<TableIndex> linkedList0 = new LinkedList<TableIndex>();
        TiDBSchema.TiDBTable tiDBSchema_TiDBTable0 = new TiDBSchema.TiDBTable("hdX:1@q8n.}", list0, linkedList0, true);
        TiDBTableReference tiDBTableReference0 = new TiDBTableReference(tiDBSchema_TiDBTable0);
        tiDBToStringVisitor0.visit(tiDBTableReference0);
        assertEquals("hdX:1@q8n.}", tiDBToStringVisitor0.get());
    }
}
