/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 00:03:09 GMT 2025
 */

package sqlancer.evosuite.common.log;

import static org.junit.jupiter.api.Assertions.*;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.jupiter.api.Test;
import sqlancer.common.log.Loggable;
import sqlancer.common.log.SQLLoggableFactory;
import sqlancer.common.query.Query;
import sqlancer.common.query.SQLQueryAdapter;

public class LoggableFactory_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        Query<?> query0 = sQLLoggableFactory0.getQueryForStateToReproduce("1*mH5_]}7)Zvz8wN#");
        assertEquals("1*mH5_]}7)Zvz8wN#;", query0.getLogString());
    }

    @Test
    public void test1() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        Loggable loggable0 = sQLLoggableFactory0.createLoggableWithNoLinebreak("M1dIK<CpTH0EFu@</");
        assertEquals("M1dIK<CpTH0EFu@</;", loggable0.getLogString());
    }

    @Test
    public void test2() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        MockException mockException0 = new MockException((String) null);
        Loggable loggable0 = sQLLoggableFactory0.convertStacktraceToLoggable(mockException0);
        // // Unstable assertion:
        // assertEquals("--jdk.internal.reflect.GeneratedConstructorAccessor42.newInstance(Unknown
        // Source)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--",
        // loggable0.getLogString());
    }

    @Test
    public void test3() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        SQLQueryAdapter sQLQueryAdapter0 = sQLLoggableFactory0.getQueryForStateToReproduce("M1dIK<CpTH0EFu@</");
        Query<?> query0 = sQLLoggableFactory0.commentOutQuery(sQLQueryAdapter0);
        assertEquals("-- M1dIK<CpTH0EFu@</;", query0.getLogString());
    }

    @Test
    public void test4() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        // Undeclared exception!
        try {
            sQLLoggableFactory0.getQueryForStateToReproduce((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.query.SQLQueryAdapter", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        // Undeclared exception!
        try {
            sQLLoggableFactory0.createLoggable((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.log.SQLLoggableFactory", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        MockThrowable mockThrowable0 = new MockThrowable("record_image_ops");
        mockThrowable0.setOriginForDelegate((StackTraceElement) null);
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        // Undeclared exception!
        try {
            sQLLoggableFactory0.convertStacktraceToLoggable(mockThrowable0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test7() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        Loggable loggable0 = sQLLoggableFactory0.getInfo("j@ise3l)P", "1*mH5_]}7)Zvz8wN#", 0L);
        assertEquals(
                "-- Time: 2014/02/14 20:21:21\n-- Database: j@ise3l)P\n-- Database version: 1*mH5_]}7)Zvz8wN#\n-- seed value: 0\n",
                loggable0.getLogString());
    }

    @Test
    public void test8() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        Loggable loggable0 = sQLLoggableFactory0.createLoggable("1*mH5_]}7)Zvz8wN#");
        assertEquals("1*mH5_]}7)Zvz8wN#;\n", loggable0.getLogString());
    }

    @Test
    public void test9() throws Throwable {
        SQLLoggableFactory sQLLoggableFactory0 = new SQLLoggableFactory();
        // Undeclared exception!
        try {
            sQLLoggableFactory0.createLoggableWithNoLinebreak((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.log.SQLLoggableFactory", e);
        }
    }
}
