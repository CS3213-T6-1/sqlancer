/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 18:31:35 GMT 2025
 */

package sqlancer.evosuite.common.gen;

import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;
import sqlancer.datafusion.ast.DataFusionExpression;
import sqlancer.datafusion.DataFusionProvider;
import sqlancer.datafusion.DataFusionSchema;
import sqlancer.datafusion.gen.DataFusionExpressionGenerator;
import sqlancer.hsqldb.gen.HSQLDBExpressionGenerator;
import sqlancer.hsqldb.HSQLDBProvider;
import sqlancer.hsqldb.HSQLDBSchema;
import sqlancer.Randomly;

public class TypedExpressionGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateExpressions(0);
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test01() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0
                .generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, (-1416), 2143);
        assertEquals(0, list0.size());
    }

    @Test
    public void test02() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getVarBit((-2874));
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0
                .generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, (-2874));
        assertEquals(0, list0.size());
    }

    @Test
    public void test03() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(1794650205);
        // Undeclared exception!
        cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
    }

    @Test
    public void test04() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit((-1));
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // BIT(-1)
            //
        }
    }

    @Test
    public void test05() throws Throwable {
        HSQLDBProvider.HSQLDBGlobalState hSQLDBProvider_HSQLDBGlobalState0 = new HSQLDBProvider.HSQLDBGlobalState();
        HSQLDBExpressionGenerator hSQLDBExpressionGenerator0 = new HSQLDBExpressionGenerator(
                hSQLDBProvider_HSQLDBGlobalState0);
        HSQLDBSchema.HSQLDBDataType hSQLDBSchema_HSQLDBDataType0 = HSQLDBSchema.HSQLDBDataType.INTEGER;
        HSQLDBSchema.HSQLDBCompositeDataType hSQLDBSchema_HSQLDBCompositeDataType0 = HSQLDBSchema.HSQLDBCompositeDataType
                .getRandomWithType(hSQLDBSchema_HSQLDBDataType0);
        // Undeclared exception!
        try {
            hSQLDBExpressionGenerator0.generateExpression(hSQLDBSchema_HSQLDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.hsqldb.gen.HSQLDBExpressionGenerator", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExpressions(1283);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test07() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateExpressions((-599));
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test08() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0
                .generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, 0, 0);
        assertEquals(0, list0.size());
    }

    @Test
    public void test09() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.STRING;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, 19,
                    (-1));
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getVarBit(0);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0
                .generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, 0);
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test11() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getVarBit(1283);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExpressions(cockroachDBSchema_CockroachDBCompositeDataType0, 1283);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test12() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test13() throws Throwable {
        DataFusionProvider.DataFusionGlobalState dataFusionProvider_DataFusionGlobalState0 = new DataFusionProvider.DataFusionGlobalState();
        DataFusionExpressionGenerator dataFusionExpressionGenerator0 = new DataFusionExpressionGenerator(
                dataFusionProvider_DataFusionGlobalState0);
        DataFusionSchema.DataFusionDataType dataFusionSchema_DataFusionDataType0 = DataFusionSchema.DataFusionDataType.BOOLEAN;
        DataFusionExpression dataFusionExpression0 = dataFusionExpressionGenerator0
                .generateLeafNode(dataFusionSchema_DataFusionDataType0);
        assertEquals("false", dataFusionExpression0.toString());
    }

    @Test
    public void test14() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBColumn[] cockroachDBSchema_CockroachDBColumnArray0 = new CockroachDBSchema.CockroachDBColumn[4];
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.STRING;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0);
        Randomly.subset(cockroachDBSchema_CockroachDBColumnArray0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0
                .generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
        assertEquals("NULL", cockroachDBExpression0.toString());
    }

    @Test
    public void test15() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBColumn[] cockroachDBSchema_CockroachDBColumnArray0 = new CockroachDBSchema.CockroachDBColumn[4];
        List<CockroachDBSchema.CockroachDBColumn> list0 = Randomly.subset(cockroachDBSchema_CockroachDBColumnArray0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setColumns(list0);
        assertSame(cockroachDBExpressionGenerator1, cockroachDBExpressionGenerator0);
    }

    @Test
    public void test16() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateOrderBys();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }
}
