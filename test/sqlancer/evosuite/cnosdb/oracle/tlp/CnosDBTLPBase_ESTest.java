/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 13:52:46 GMT 2025
 */

package sqlancer.evosuite.cnosdb.oracle.tlp;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.Random;
import org.junit.jupiter.api.Test;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.ast.CnosDBJoin;
import sqlancer.cnosdb.CnosDBGlobalState;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.oracle.tlp.CnosDBTLPBase;
import sqlancer.common.gen.ExpressionGenerator;

public class CnosDBTLPBase_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        // Undeclared exception!
        try {
            CnosDBTLPBase.createSubquery((CnosDBGlobalState) null, "", (CnosDBSchema.CnosDBTables) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
        // Undeclared exception!
        try {
            cnosDBTLPBase0.check();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test2() throws Throwable {
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase((CnosDBGlobalState) null);
        LinkedList<CnosDBSchema.CnosDBTable> linkedList0 = new LinkedList<CnosDBSchema.CnosDBTable>();
        CnosDBSchema.CnosDBTables cnosDBSchema_CnosDBTables0 = new CnosDBSchema.CnosDBTables(linkedList0);
        cnosDBTLPBase0.targetTables = cnosDBSchema_CnosDBTables0;
        List<CnosDBExpression> list0 = cnosDBTLPBase0.generateFetchColumns();
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test3() throws Throwable {
        Random.setNextRandom(1);
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
        List<CnosDBExpression> list0 = cnosDBTLPBase0.generateFetchColumns();
        assertFalse(list0.isEmpty());
    }

    @Test
    public void test4() throws Throwable {
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase((CnosDBGlobalState) null);
        // Undeclared exception!
        try {
            cnosDBTLPBase0.generateFetchColumns();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.oracle.tlp.CnosDBTLPBase", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase((CnosDBGlobalState) null);
        try {
            cnosDBTLPBase0.check();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.oracle.tlp.CnosDBTLPBase", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        LinkedList<CnosDBSchema.CnosDBTable> linkedList0 = new LinkedList<CnosDBSchema.CnosDBTable>();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
        // Undeclared exception!
        try {
            cnosDBTLPBase0.getJoinStatements((List<CnosDBSchema.CnosDBColumn>) null, linkedList0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }

    @Test
    public void test7() throws Throwable {
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase((CnosDBGlobalState) null);
        ExpressionGenerator<CnosDBExpression> expressionGenerator0 = cnosDBTLPBase0.getGen();
        assertNull(expressionGenerator0);
    }

    @Test
    public void test8() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        LinkedList<CnosDBSchema.CnosDBTable> linkedList0 = new LinkedList<CnosDBSchema.CnosDBTable>();
        CnosDBTLPBase cnosDBTLPBase0 = new CnosDBTLPBase(cnosDBGlobalState0);
        // Undeclared exception!
        try {
            cnosDBTLPBase0.generateSelectBase(linkedList0, (List<CnosDBJoin>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }
}
