/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:30:50 GMT 2025
 */

package sqlancer.evosuite.cnosdb.gen;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.cnosdb.ast.CnosDBConstant;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.CnosDBGlobalState;
import sqlancer.cnosdb.CnosDBSchema;
import sqlancer.cnosdb.gen.CnosDBExpressionGenerator;
import sqlancer.Randomly;

public class CnosDBExpressionGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
        // Undeclared exception!
        try {
            CnosDBExpressionGenerator.generateConstant((Randomly) null, cnosDBSchema_CnosDBDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }

    @Test
    public void test01() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBExpressionGenerator cnosDBExpressionGenerator0 = null;
        try {
            cnosDBExpressionGenerator0 = new CnosDBExpressionGenerator(cnosDBGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }

    @Test
    public void test02() throws Throwable {
        Randomly randomly0 = new Randomly();
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.TIMESTAMP;
        CnosDBConstant.TimeStampConstant cnosDBConstant_TimeStampConstant0 = (CnosDBConstant.TimeStampConstant) CnosDBExpressionGenerator
                .generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
        assertFalse(cnosDBConstant_TimeStampConstant0.isInt());
    }

    @Test
    public void test03() throws Throwable {
        Randomly randomly0 = new Randomly();
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
        CnosDBExpression cnosDBExpression0 = CnosDBExpressionGenerator.generateConstant(randomly0,
                cnosDBSchema_CnosDBDataType0);
        assertEquals(CnosDBSchema.CnosDBDataType.UINT, cnosDBExpression0.getExpressionType());
    }

    @Test
    public void test04() throws Throwable {
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.BOOLEAN;
        Randomly randomly0 = new Randomly();
        CnosDBExpression cnosDBExpression0 = CnosDBExpressionGenerator.generateConstant(randomly0,
                cnosDBSchema_CnosDBDataType0);
        assertEquals(CnosDBSchema.CnosDBDataType.BOOLEAN, cnosDBExpression0.getExpressionType());
    }

    @Test
    public void test05() throws Throwable {
        Randomly randomly0 = new Randomly();
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.INT;
        CnosDBConstant.IntConstant cnosDBConstant_IntConstant0 = (CnosDBConstant.IntConstant) CnosDBExpressionGenerator
                .generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
        assertFalse(cnosDBConstant_IntConstant0.isString());
    }

    @Test
    public void test06() throws Throwable {
        Randomly randomly0 = new Randomly();
        Randomly.getPositiveOrZeroNonCachedInteger();
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
        CnosDBConstant.CnosDBNullConstant cnosDBConstant_CnosDBNullConstant0 = (CnosDBConstant.CnosDBNullConstant) CnosDBExpressionGenerator
                .generateConstant(randomly0, cnosDBSchema_CnosDBDataType0);
        assertTrue(cnosDBConstant_CnosDBNullConstant0.isNull());
    }

    @Test
    public void test07() throws Throwable {
        Randomly randomly0 = new Randomly(3L);
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.DOUBLE;
        CnosDBExpression cnosDBExpression0 = CnosDBExpressionGenerator.generateConstant(randomly0,
                cnosDBSchema_CnosDBDataType0);
        assertEquals(CnosDBSchema.CnosDBDataType.DOUBLE, cnosDBExpression0.getExpressionType());
    }

    @Test
    public void test08() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.DOUBLE;
        // Undeclared exception!
        try {
            CnosDBExpressionGenerator.generateExpression(cnosDBGlobalState0, cnosDBSchema_CnosDBDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }

    @Test
    public void test09() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.STRING;
        LinkedList<CnosDBSchema.CnosDBColumn> linkedList0 = new LinkedList<CnosDBSchema.CnosDBColumn>();
        // Undeclared exception!
        try {
            CnosDBExpressionGenerator.generateExpression(cnosDBGlobalState0,
                    (List<CnosDBSchema.CnosDBColumn>) linkedList0, cnosDBSchema_CnosDBDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        // Undeclared exception!
        try {
            CnosDBExpressionGenerator.generateExpression(cnosDBGlobalState0, (List<CnosDBSchema.CnosDBColumn>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.gen.CnosDBExpressionGenerator", e);
        }
    }
}
