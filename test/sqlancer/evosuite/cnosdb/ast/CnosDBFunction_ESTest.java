/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 20:20:41 GMT 2025
 */

package sqlancer.evosuite.cnosdb.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.cnosdb.ast.CnosDBExpression;
import sqlancer.cnosdb.ast.CnosDBFunction;
import sqlancer.cnosdb.ast.CnosDBFunctionWithUnknownResult;
import sqlancer.cnosdb.CnosDBSchema;

public class CnosDBFunction_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[0];
        CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.OCTET_LENGTH;
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.TIMESTAMP;
        CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0,
                cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
        CnosDBExpression[] cnosDBExpressionArray1 = cnosDBFunction0.getArguments();
        assertEquals(0, cnosDBExpressionArray1.length);
    }

    @Test
    public void test1() throws Throwable {
        CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.ROUND;
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
        CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[5];
        CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0,
                cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
        CnosDBExpression[] cnosDBExpressionArray1 = cnosDBFunction0.getArguments();
        assertNotSame(cnosDBExpressionArray0, cnosDBExpressionArray1);
    }

    @Test
    public void test2() throws Throwable {
        CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[0];
        CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.TRUNC;
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.BOOLEAN;
        CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0,
                cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType1 = cnosDBFunction0.getExpressionType();
        assertSame(cnosDBSchema_CnosDBDataType0, cnosDBSchema_CnosDBDataType1);
    }

    @Test
    public void test3() throws Throwable {
        CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.UPPER;
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
        CnosDBExpression[] cnosDBExpressionArray0 = new CnosDBExpression[0];
        CnosDBFunction cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0,
                cnosDBSchema_CnosDBDataType0, cnosDBExpressionArray0);
        String string0 = cnosDBFunction0.getFunctionName();
        assertEquals("upper", string0);
    }

    @Test
    public void test4() throws Throwable {
        CnosDBFunctionWithUnknownResult cnosDBFunctionWithUnknownResult0 = CnosDBFunctionWithUnknownResult.COS;
        CnosDBSchema.CnosDBDataType cnosDBSchema_CnosDBDataType0 = CnosDBSchema.CnosDBDataType.UINT;
        CnosDBFunction cnosDBFunction0 = null;
        try {
            cnosDBFunction0 = new CnosDBFunction(cnosDBFunctionWithUnknownResult0, cnosDBSchema_CnosDBDataType0,
                    (CnosDBExpression[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.ast.CnosDBFunction", e);
        }
    }
}
