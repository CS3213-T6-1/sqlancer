/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 02:49:24 GMT 2025
 */

package sqlancer.evosuite.cnosdb;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

import sqlancer.cnosdb.CnosDBLoggableFactory;
import sqlancer.cnosdb.query.CnosDBQueryAdapter;
import sqlancer.common.log.Loggable;
import sqlancer.common.query.Query;

public class CnosDBLoggableFactory_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        Loggable loggable0 = cnosDBLoggableFactory0.getInfo("--", ";", 965L);
        assertEquals("-- Time: 2014/02/14 20:21:21\n-- Database: --\n-- Database version: ;\n-- seed value: 965\n",
                loggable0.getLogString());
    }

    @Test
    public void test1() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        // Undeclared exception!
        try {
            cnosDBLoggableFactory0.createLoggable((String) null, (String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    // @Test
    // public void test2() throws Throwable {
    // CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
    // MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
    // mockThrowable0.setOriginForDelegate((StackTraceElement) null);
    // // Undeclared exception!
    // try {
    // cnosDBLoggableFactory0.convertStacktraceToLoggable(mockThrowable0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // }
    // }

    @Test
    public void test3() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        // Undeclared exception!
        try {
            cnosDBLoggableFactory0.commentOutQuery((Query<?>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBLoggableFactory", e);
        }
    }

    @Test
    public void test4() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        Loggable loggable0 = cnosDBLoggableFactory0.createLoggable("1^No8)!$w`n", (String) null);
        assertEquals("1^No8)!$w`n;", loggable0.getLogString());
    }

    @Test
    public void test5() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        Loggable loggable0 = cnosDBLoggableFactory0.createLoggable("x!8x74Y)xqXJ\"tS(5", ";");
        assertEquals("x!8x74Y)xqXJ\"tS(5;;", loggable0.getLogString());
    }

    @Test
    public void test6() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        Loggable loggable0 = cnosDBLoggableFactory0.createLoggable(";", "");
        assertEquals(";", loggable0.getLogString());
    }

    @Test
    public void test7() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        Loggable loggable0 = cnosDBLoggableFactory0.convertStacktraceToLoggable((Throwable) null);
        assertEquals(
                "--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--<evosuite>.<evosuite>(<evosuite>)\n--",
                loggable0.getLogString());
    }

    @Test
    public void test8() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        CnosDBQueryAdapter cnosDBQueryAdapter0 = cnosDBLoggableFactory0
                .getQueryForStateToReproduce("x!8x74Y)xqXJ\"tS(5");
        CnosDBQueryAdapter cnosDBQueryAdapter1 = cnosDBLoggableFactory0.commentOutQuery(cnosDBQueryAdapter0);
        assertEquals("-- x!8x74Y)xqXJ\"tS(5", cnosDBQueryAdapter1.getLogString());
    }

    @Test
    public void test9() throws Throwable {
        CnosDBLoggableFactory cnosDBLoggableFactory0 = new CnosDBLoggableFactory();
        Loggable loggable0 = cnosDBLoggableFactory0.infoToLoggable("--", "--", "--", 3055L);
        assertEquals("-- Time: --\n-- Database: --\n-- Database version: --\n-- seed value: 3055\n",
                loggable0.getLogString());
    }
}
