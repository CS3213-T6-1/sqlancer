/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 02:33:31 GMT 2025
 */

package sqlancer.evosuite.cnosdb;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Collection;
import java.util.function.UnaryOperator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.regex.Pattern;

import org.junit.jupiter.api.Test;

import sqlancer.citus.CitusGlobalState;
import sqlancer.cnosdb.CnosDBComparatorHelper;
import sqlancer.cnosdb.CnosDBGlobalState;
import sqlancer.common.query.ExpectedErrors;
import sqlancer.materialize.MaterializeGlobalState;

public class CnosDBComparatorHelper_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        MaterializeGlobalState materializeGlobalState0 = new MaterializeGlobalState();
        List<String> list0 = materializeGlobalState0.getCollates();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        ExpectedErrors expectedErrors0 = new ExpectedErrors();
        try {
            CnosDBComparatorHelper.getCombinedResultSetNoDuplicates((String) null, "sqlancer.mysql.MySQLOptions", "~",
                    list0, false, cnosDBGlobalState0, expectedErrors0);
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.AbstractList", e);
        }
    }

    @Test
    public void test01() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        List<String> list0 = citusGlobalState0.getCollates();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        String[] stringArray0 = new String[5];
        ExpectedErrors expectedErrors0 = ExpectedErrors.from(stringArray0);
        try {
            CnosDBComparatorHelper.getCombinedResultSetNoDuplicates(" lS,5?[[K4Zi", "=WhdQ@Yrri-c", "Y-##K\"K3OKW|9",
                    list0, true, cnosDBGlobalState0, expectedErrors0);
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.AbstractList", e);
        }
    }

    @Test
    public void test02() throws Throwable {
        MaterializeGlobalState materializeGlobalState0 = new MaterializeGlobalState();
        List<String> list0 = materializeGlobalState0.getCollates();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        ExpectedErrors expectedErrors0 = new ExpectedErrors();
        try {
            CnosDBComparatorHelper.getCombinedResultSet("+!", "", "Fuq%Z>~=JA", list0, false, cnosDBGlobalState0,
                    expectedErrors0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test03() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        try {
            CnosDBComparatorHelper.getCombinedResultSet((String) null, ")SE=-0mec", "", (List<String>) null, true,
                    cnosDBGlobalState0, (ExpectedErrors) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test04() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
        LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
        List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1,
                (Collection<String>) linkedList0);
        CnosDBComparatorHelper.assumeResultSetsAreEqual((List<String>) linkedList0, (List<String>) linkedList0, "",
                list0, cnosDBGlobalState0, unaryOperator0);
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test05() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        linkedList0.add("jMycG[3`7)WD");
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        MaterializeGlobalState materializeGlobalState0 = new MaterializeGlobalState();
        List<String> list0 = materializeGlobalState0.getCollates();
        // Undeclared exception!
        try {
            CnosDBComparatorHelper.assumeResultSetsAreEqual(list0, (List<String>) linkedList0, "'&}m]KS`ei&]", list0,
                    cnosDBGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        ExpectedErrors expectedErrors0 = new ExpectedErrors();
        try {
            CnosDBComparatorHelper.getCombinedResultSet(
                    "SQLancer failed creating a test database, indicating that SQLancer might have failed connecting to the DBMS. In order to change the username, password, host and port, you can use the --username, --password, --host and --port options.\n\n",
                    "SQLancer failed creating a test database, indicating that SQLancer might have failed connecting to the DBMS. In order to change the username, password, host and port, you can use the --username, --password, --host and --port options.\n\n",
                    "SQLancer failed creating a test database, indicating that SQLancer might have failed connecting to the DBMS. In order to change the username, password, host and port, you can use the --username, --password, --host and --port options.\n\n",
                    linkedList0, true, cnosDBGlobalState0, expectedErrors0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test07() throws Throwable {
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        try {
            CnosDBComparatorHelper.getResultSetFirstColumnAsString("gk}3@V/.MR65,`&", (ExpectedErrors) null,
                    cnosDBGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        CnosDBComparatorHelper.assumeResultSetsAreEqual((List<String>) linkedList0, (List<String>) linkedList0,
                "jdbc:clickhouse://%s:%d/%s?socket_timeout=300000%s", (List<String>) linkedList0, cnosDBGlobalState0);
        assertEquals(0, linkedList0.size());
    }

    @Test
    public void test09() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("t~;f?O y)~");
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        // Undeclared exception!
        try {
            CnosDBComparatorHelper.assumeResultSetsAreEqual((List<String>) linkedList1, (List<String>) linkedList0,
                    "t~;f?O y)~", (List<String>) linkedList0, cnosDBGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        ExpectedErrors expectedErrors0 = new ExpectedErrors();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        try {
            CnosDBComparatorHelper.getCombinedResultSetNoDuplicates((String) null, (String) null, (String) null,
                    linkedList0, true, cnosDBGlobalState0, expectedErrors0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test11() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        List<String> list0 = citusGlobalState0.getCollates();
        LinkedList<Pattern> linkedList0 = new LinkedList<Pattern>();
        ExpectedErrors expectedErrors0 = new ExpectedErrors(list0, linkedList0);
        try {
            CnosDBComparatorHelper.getCombinedResultSet(".g9R92CO8c~RR-9~p.u", ".g9R92CO8c~RR-9~p.u", "", list0, true,
                    (CnosDBGlobalState) null, expectedErrors0);
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.AbstractList", e);
        }
    }

    @Test
    public void test12() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        linkedList0.add(":");
        LinkedList<String> linkedList1 = new LinkedList<String>();
        linkedList1.add("sqlancer.cnosdb.CnosDBComparatorHelper");
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        // Undeclared exception!
        try {
            CnosDBComparatorHelper.assumeResultSetsAreEqual((List<String>) linkedList0, (List<String>) linkedList1,
                    "sqlancer.cnosdb.CnosDBComparatorHelper", (List<String>) linkedList0, cnosDBGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }

    @Test
    public void test13() throws Throwable {
        LinkedList<String> linkedList0 = new LinkedList<String>();
        linkedList0.add("jMycG[3`7)WD");
        MaterializeGlobalState materializeGlobalState0 = new MaterializeGlobalState();
        List<String> list0 = materializeGlobalState0.getCollates();
        CnosDBGlobalState cnosDBGlobalState0 = new CnosDBGlobalState();
        UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
        // Undeclared exception!
        try {
            CnosDBComparatorHelper.assumeResultSetsAreEqual((List<String>) linkedList0, list0, "", list0,
                    cnosDBGlobalState0, unaryOperator0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cnosdb.CnosDBComparatorHelper", e);
        }
    }
}
