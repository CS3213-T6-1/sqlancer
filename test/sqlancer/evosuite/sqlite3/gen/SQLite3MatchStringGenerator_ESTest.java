/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 02:28:33 GMT 2025
 */

package sqlancer.evosuite.sqlite3.gen;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.Randomly;
import sqlancer.sqlite3.gen.SQLite3MatchStringGenerator;

public class SQLite3MatchStringGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        // Undeclared exception!
        try {
            SQLite3MatchStringGenerator.generateMatchString((Randomly) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.gen.SQLite3MatchStringGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        SQLite3MatchStringGenerator sQLite3MatchStringGenerator0 = null;
        try {
            sQLite3MatchStringGenerator0 = new SQLite3MatchStringGenerator((Randomly) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.gen.SQLite3MatchStringGenerator", e);
        }
    }

    @Test
    public void test2() throws Throwable {
        Randomly randomly0 = new Randomly();
        randomly0.getChar();
        randomly0.getChar();
        String string0 = SQLite3MatchStringGenerator.generateMatchString(randomly0);
        assertEquals("NOT  AND  OR NEAR/24NEAR/24", string0);
    }

    @Test
    public void test3() throws Throwable {
        Randomly randomly0 = new Randomly();
        randomly0.getChar();
        randomly0.getPositiveIntegerInt();
        String string0 = SQLite3MatchStringGenerator.generateMatchString(randomly0);
        assertEquals("778899 ", string0);
    }

    @Test
    public void test4() throws Throwable {
        Randomly randomly0 = new Randomly((-904L));
        SQLite3MatchStringGenerator.generateMatchString(randomly0);
        String string0 = SQLite3MatchStringGenerator.generateMatchString(randomly0);
        assertEquals(" + ", string0);

        SQLite3MatchStringGenerator.generateMatchString(randomly0);
        String string1 = SQLite3MatchStringGenerator.generateMatchString(randomly0);
        assertEquals("NOT c0 OR c0 AND NEAR/28", string1);

        SQLite3MatchStringGenerator.generateMatchString(randomly0);
        String string2 = SQLite3MatchStringGenerator.generateMatchString(randomly0);
        assertEquals("IJJK*LMM ", string2);
    }

    @Test
    public void test5() throws Throwable {
        Randomly randomly0 = new Randomly((-904L));
        SQLite3MatchStringGenerator sQLite3MatchStringGenerator0 = new SQLite3MatchStringGenerator(randomly0);
    }
}
