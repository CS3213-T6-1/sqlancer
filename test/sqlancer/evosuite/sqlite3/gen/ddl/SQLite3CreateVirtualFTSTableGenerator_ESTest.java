/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 20:54:43 GMT 2025
 */

package sqlancer.evosuite.sqlite3.gen.ddl;

import static org.junit.jupiter.api.Assertions.*;
import java.util.function.Supplier;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.Randomly;
import sqlancer.sqlite3.gen.ddl.SQLite3CreateVirtualFTSTableGenerator;
import sqlancer.sqlite3.SQLite3GlobalState;

public class SQLite3CreateVirtualFTSTableGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        // Undeclared exception!
        try {
            SQLite3CreateVirtualFTSTableGenerator.createRandomTableStatement((SQLite3GlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.gen.ddl.SQLite3CreateVirtualFTSTableGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        // Undeclared exception!
        try {
            SQLite3CreateVirtualFTSTableGenerator.createRandomTableStatement(sQLite3GlobalState0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    /*
     * Test disabled because it contains mock() function calls that are not implemented
     *
     * @Test public void test2() throws Throwable { Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class,
     * new ViolatedAssumptionAnswer()); Randomly randomly0 = new Randomly(supplier0);
     * SQLite3CreateVirtualFTSTableGenerator sQLite3CreateVirtualFTSTableGenerator0 = new
     * SQLite3CreateVirtualFTSTableGenerator( "7^?lRC|NWnTrsnu", randomly0); SQLQueryAdapter sQLQueryAdapter0 =
     * sQLite3CreateVirtualFTSTableGenerator0.create(); assertTrue(sQLQueryAdapter0.couldAffectSchema());
     * assertEquals("CREATE VIRTUAL TABLE 7^?lRC|NWnTrsnu USING fts5(c0);", sQLQueryAdapter0.getQueryString()); }
     */

    @Test
    public void test3() throws Throwable {
        Randomly randomly0 = new Randomly();
        SQLQueryAdapter sQLQueryAdapter0 = SQLite3CreateVirtualFTSTableGenerator
                .createTableStatement("k5_xZHqfg9<IjYzHL_h", randomly0);
        assertEquals("CREATE VIRTUAL TABLE k5_xZHqfg9<IjYzHL_h USING fts5(c0);", sQLQueryAdapter0.getQueryString());
        assertTrue(sQLQueryAdapter0.couldAffectSchema());
    }
}
