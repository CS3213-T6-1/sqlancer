/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:57:23 GMT 2025
 */

package sqlancer.evosuite.sqlite3.gen.dml;

import static org.junit.jupiter.api.Assertions.*;
import java.util.function.Supplier;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.Random;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.Randomly;
import sqlancer.sqlite3.gen.dml.SQLite3InsertGenerator;
import sqlancer.sqlite3.schema.SQLite3Schema;
import sqlancer.sqlite3.SQLite3GlobalState;

public class SQLite3InsertGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        SQLite3Schema.SQLite3Table.TableKind sQLite3Schema_SQLite3Table_TableKind0 = SQLite3Schema.SQLite3Table.TableKind.TEMP;
        LinkedList<SQLite3Schema.SQLite3Column> linkedList0 = new LinkedList<SQLite3Schema.SQLite3Column>();
        SQLite3Schema.SQLite3Table sQLite3Schema_SQLite3Table0 = new SQLite3Schema.SQLite3Table(":lM_|6Okgm@EH`Ss(",
                linkedList0, sQLite3Schema_SQLite3Table_TableKind0, false, false, false, false);
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        // Undeclared exception!
        try {
            SQLite3InsertGenerator.insertRow(sQLite3GlobalState0, sQLite3Schema_SQLite3Table0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // [] 1
            //
        }
    }

    @Test
    public void test1() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        // Undeclared exception!
        try {
            SQLite3InsertGenerator.insertRow(sQLite3GlobalState0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    /*
     * Test disabled because it contains mock() function calls that are not implemented
     *
     * @Test public void test2() throws Throwable { SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
     * Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer()); Randomly
     * randomly0 = new Randomly(supplier0); SQLite3InsertGenerator sQLite3InsertGenerator0 = new
     * SQLite3InsertGenerator(sQLite3GlobalState0, randomly0); }
     */

    @Test
    public void test3() throws Throwable {
        SQLite3Schema.SQLite3Column sQLite3Schema_SQLite3Column0 = SQLite3Schema.SQLite3Column.createDummy("CHECKSUM");
        List<SQLite3Schema.SQLite3Column> list0 = List.of(sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0,
                sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0);
        SQLite3Schema.SQLite3Table.TableKind sQLite3Schema_SQLite3Table_TableKind0 = SQLite3Schema.SQLite3Table.TableKind.MAIN;
        SQLite3Schema.SQLite3Table sQLite3Schema_SQLite3Table0 = new SQLite3Schema.SQLite3Table("CHECKSUM", list0,
                sQLite3Schema_SQLite3Table_TableKind0, true, true, true, true);
        sQLite3Schema_SQLite3Table0.getRandomColumn();
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        // Undeclared exception!
        try {
            SQLite3InsertGenerator.insertRow(sQLite3GlobalState0, sQLite3Schema_SQLite3Table0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.ast.SQLite3Constant", e);
        }
    }

    @Test
    public void test4() throws Throwable {
        SQLite3Schema.SQLite3Column sQLite3Schema_SQLite3Column0 = SQLite3Schema.SQLite3Column
                .createDummy("M&fel7PzG1I$Tm");
        List<SQLite3Schema.SQLite3Column> list0 = List.of(sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0);
        SQLite3Schema.SQLite3Table.TableKind sQLite3Schema_SQLite3Table_TableKind0 = SQLite3Schema.SQLite3Table.TableKind.MAIN;
        SQLite3Schema.SQLite3Table sQLite3Schema_SQLite3Table0 = new SQLite3Schema.SQLite3Table("M&fel7PzG1I$Tm", list0,
                sQLite3Schema_SQLite3Table_TableKind0, true, true, true, true);
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        Random.setNextRandom(1956181297);
        // Undeclared exception!
        try {
            SQLite3InsertGenerator.insertRow(sQLite3GlobalState0, sQLite3Schema_SQLite3Table0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.gen.SQLite3ExpressionGenerator", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        SQLite3Schema.SQLite3Column sQLite3Schema_SQLite3Column0 = SQLite3Schema.SQLite3Column
                .createDummy(" }$BoIEaOY^`?4oq`,");
        List<SQLite3Schema.SQLite3Column> list0 = List.of(sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0);
        SQLite3Schema.SQLite3Table.TableKind sQLite3Schema_SQLite3Table_TableKind0 = SQLite3Schema.SQLite3Table.TableKind.MAIN;
        SQLite3Schema.SQLite3Table sQLite3Schema_SQLite3Table0 = new SQLite3Schema.SQLite3Table(" }$BoIEaOY^`?4oq`,",
                list0, sQLite3Schema_SQLite3Table_TableKind0, true, true, true, true);
        sQLite3Schema_SQLite3Table0.getRandomNonEmptyColumnSubset();
        sQLite3Schema_SQLite3Table0.getRandomNonEmptyColumnSubset();
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        // Undeclared exception!
        try {
            SQLite3InsertGenerator.insertRow(sQLite3GlobalState0, sQLite3Schema_SQLite3Table0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.gen.SQLite3ExpressionGenerator", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        SQLite3Schema.SQLite3Column sQLite3Schema_SQLite3Column0 = SQLite3Schema.SQLite3Column.createDummy("CHECKSUM");
        List<SQLite3Schema.SQLite3Column> list0 = List.of(sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0,
                sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0, sQLite3Schema_SQLite3Column0);
        Randomly.nonEmptySubset(list0);
        List<SQLite3Schema.SQLite3Column> list1 = Randomly.nonEmptySubset(list0);
        SQLite3Schema.SQLite3Table.TableKind sQLite3Schema_SQLite3Table_TableKind0 = SQLite3Schema.SQLite3Table.TableKind.MAIN;
        SQLite3Schema.SQLite3Table sQLite3Schema_SQLite3Table0 = new SQLite3Schema.SQLite3Table("CHECKSUM", list1,
                sQLite3Schema_SQLite3Table_TableKind0, true, true, true, true);
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = SQLite3InsertGenerator.insertRow(sQLite3GlobalState0,
                sQLite3Schema_SQLite3Table0);
        assertEquals("INSERT OR ABORT INTO CHECKSUM(CHECKSUM) VALUES (NULL);", sQLQueryAdapter0.getLogString());
        assertTrue(sQLQueryAdapter0.couldAffectSchema());
    }

    @Test
    public void test7() throws Throwable {
        // Undeclared exception!
        try {
            SQLite3InsertGenerator.insertRow((SQLite3GlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.gen.dml.SQLite3InsertGenerator", e);
        }
    }
}
