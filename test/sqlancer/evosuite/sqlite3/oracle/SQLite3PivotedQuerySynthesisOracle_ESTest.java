/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:05:50 GMT 2025
 */

package sqlancer.evosuite.sqlite3.oracle;

import static org.junit.jupiter.api.Assertions.*;
import java.sql.ResultSet;
import java.util.function.Consumer;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryResultCheckAdapter;
import sqlancer.sqlite3.ast.SQLite3Constant;
import sqlancer.sqlite3.ast.SQLite3Expression;
import sqlancer.sqlite3.ast.SQLite3Function;
import sqlancer.sqlite3.ast.SQLite3Select;
import sqlancer.sqlite3.ast.SQLite3UnaryOperation;
import sqlancer.sqlite3.ast.SQLite3WindowFunctionExpression;
import sqlancer.sqlite3.oracle.SQLite3PivotedQuerySynthesisOracle;
import sqlancer.sqlite3.SQLite3GlobalState;

public class SQLite3PivotedQuerySynthesisOracle_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                sQLite3GlobalState0);
        SQLite3Constant.SQLite3NullConstant sQLite3Constant_SQLite3NullConstant0 = new SQLite3Constant.SQLite3NullConstant();
        String string0 = sQLite3PivotedQuerySynthesisOracle0.getExpectedValues(sQLite3Constant_SQLite3NullConstant0);
        assertEquals("\tNULL -- (NULL) NULL explicit collate: null implicit collate: null\n", string0);
    }

    @Test
    public void test01() throws Throwable {
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                (SQLite3GlobalState) null);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getRectifiedQuery();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.oracle.SQLite3PivotedQuerySynthesisOracle", e);
        }
    }

    @Test
    public void test02() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                sQLite3GlobalState0);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getQuery();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test03() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                sQLite3GlobalState0);
        SQLite3UnaryOperation.UnaryOperator sQLite3UnaryOperation_UnaryOperator0 = SQLite3UnaryOperation.UnaryOperator.NEGATE;
        SQLite3Select sQLite3Select0 = new SQLite3Select();
        SQLite3UnaryOperation sQLite3UnaryOperation0 = new SQLite3UnaryOperation(sQLite3UnaryOperation_UnaryOperator0,
                sQLite3Select0);
        sQLite3Select0.setLimitClause((SQLite3Expression) sQLite3UnaryOperation0);
        SQLite3Expression.MatchOperation sQLite3Expression_MatchOperation0 = new SQLite3Expression.MatchOperation(
                sQLite3UnaryOperation0, sQLite3Select0);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getExpectedValues(sQLite3Expression_MatchOperation0);
            fail("Expecting exception: StackOverflowError");

        } catch (StackOverflowError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test04() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                sQLite3GlobalState0);
        SQLite3Constant.SQLite3TextConstant sQLite3Constant_SQLite3TextConstant0 = new SQLite3Constant.SQLite3TextConstant(
                (String) null);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getExpectedValues(sQLite3Constant_SQLite3TextConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.SQLite3ToStringVisitor", e);
        }
    }

    @Test
    public void test05() throws Throwable {
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                (SQLite3GlobalState) null);
        SQLite3Select sQLite3Select0 = new SQLite3Select();
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getExpectedValues(sQLite3Select0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test06() throws Throwable {
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                (SQLite3GlobalState) null);
        SQLite3Function.ComputableFunction sQLite3Function_ComputableFunction0 = SQLite3Function.ComputableFunction.NULLIF;
        SQLite3Expression[] sQLite3ExpressionArray0 = new SQLite3Expression[0];
        SQLite3Function sQLite3Function0 = new SQLite3Function(sQLite3Function_ComputableFunction0,
                sQLite3ExpressionArray0);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getExpectedValues(sQLite3Function0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 0 out of bounds for length 0
            //
            verifyException("sqlancer.sqlite3.ast.SQLite3Function$ComputableFunction$9", e);
        }
    }

    @Test
    public void test07() throws Throwable {
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                (SQLite3GlobalState) null);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getQuery();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.oracle.SQLite3PivotedQuerySynthesisOracle", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                sQLite3GlobalState0);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getRectifiedQuery();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test09() throws Throwable {
        SQLite3GlobalState sQLite3GlobalState0 = new SQLite3GlobalState();
        SQLQueryResultCheckAdapter sQLQueryResultCheckAdapter0 = new SQLQueryResultCheckAdapter("3k'm",
                (Consumer<ResultSet>) null);
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                sQLite3GlobalState0);
        // Undeclared exception!
        try {
            sQLite3PivotedQuerySynthesisOracle0.getContainmentCheckQuery(sQLQueryResultCheckAdapter0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.sqlite3.oracle.SQLite3PivotedQuerySynthesisOracle", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        SQLite3PivotedQuerySynthesisOracle sQLite3PivotedQuerySynthesisOracle0 = new SQLite3PivotedQuerySynthesisOracle(
                (SQLite3GlobalState) null);
        SQLite3Constant.SQLite3NullConstant sQLite3Constant_SQLite3NullConstant0 = new SQLite3Constant.SQLite3NullConstant();
        SQLite3WindowFunctionExpression.SQLite3WindowFunctionFrameSpecTerm.SQLite3WindowFunctionFrameSpecTermKind sQLite3WindowFunctionExpression_SQLite3WindowFunctionFrameSpecTerm_SQLite3WindowFunctionFrameSpecTermKind0 = SQLite3WindowFunctionExpression.SQLite3WindowFunctionFrameSpecTerm.SQLite3WindowFunctionFrameSpecTermKind.CURRENT_ROW;
        SQLite3WindowFunctionExpression.SQLite3WindowFunctionFrameSpecTerm sQLite3WindowFunctionExpression_SQLite3WindowFunctionFrameSpecTerm0 = new SQLite3WindowFunctionExpression.SQLite3WindowFunctionFrameSpecTerm(
                sQLite3Constant_SQLite3NullConstant0,
                sQLite3WindowFunctionExpression_SQLite3WindowFunctionFrameSpecTerm_SQLite3WindowFunctionFrameSpecTermKind0);
        String string0 = sQLite3PivotedQuerySynthesisOracle0
                .getExpectedValues(sQLite3WindowFunctionExpression_SQLite3WindowFunctionFrameSpecTerm0);
        assertEquals("", string0);
    }
}
