/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 17:10:54 GMT 2025
 */

package sqlancer.evosuite.mariadb.gen;

import static org.junit.jupiter.api.Assertions.*;
import java.util.function.Supplier;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.mariadb.gen.MariaDBTableGenerator;
import sqlancer.mariadb.MariaDBSchema;
import sqlancer.Randomly;

public class MariaDBTableGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    /*
     * Test disabled because it contains mock() function calls that are not implemented
     *
     * @Test public void test0() throws Throwable { Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class,
     * new ViolatedAssumptionAnswer()); Randomly randomly0 = new Randomly(supplier0); MariaDBSchema.MariaDBColumn[]
     * mariaDBSchema_MariaDBColumnArray0 = new MariaDBSchema.MariaDBColumn[4]; List<MariaDBSchema.MariaDBColumn> list0 =
     * Randomly.subset(mariaDBSchema_MariaDBColumnArray0); MariaDBSchema.MariaDBTable[] mariaDBSchema_MariaDBTableArray0
     * = new MariaDBSchema.MariaDBTable[1]; MariaDBSchema.MariaDBIndex[] mariaDBSchema_MariaDBIndexArray0 = new
     * MariaDBSchema.MariaDBIndex[9]; List<MariaDBSchema.MariaDBIndex> list1 =
     * Randomly.nonEmptySubset(mariaDBSchema_MariaDBIndexArray0); MariaDBSchema.MariaDBTable.MariaDBEngine
     * mariaDBSchema_MariaDBTable_MariaDBEngine0 = MariaDBSchema.MariaDBTable.MariaDBEngine.MY_ISAM;
     * MariaDBSchema.MariaDBTable mariaDBSchema_MariaDBTable0 = new MariaDBSchema.MariaDBTable("mhO_n", list0, list1,
     * mariaDBSchema_MariaDBTable_MariaDBEngine0); mariaDBSchema_MariaDBTableArray0[0] = mariaDBSchema_MariaDBTable0;
     * List<MariaDBSchema.MariaDBTable> list2 = Randomly.subset(mariaDBSchema_MariaDBTableArray0); MariaDBSchema
     * mariaDBSchema0 = new MariaDBSchema(list2); SQLQueryAdapter sQLQueryAdapter0 = MariaDBTableGenerator.generate("",
     * randomly0, mariaDBSchema0); assertEquals("CREATE TABLE  LIKE mhO_n;", sQLQueryAdapter0.getQueryString()); }
     */

    @Test
    public void test1() throws Throwable {
        Randomly randomly0 = new Randomly();
        List<MariaDBSchema.MariaDBTable> list0 = List.of();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(list0);
        MariaDBTableGenerator mariaDBTableGenerator0 = new MariaDBTableGenerator("TABLE ", randomly0, mariaDBSchema0);
    }

    @Test
    public void test2() throws Throwable {
        Randomly randomly0 = new Randomly();
        LinkedList<MariaDBSchema.MariaDBTable> linkedList0 = new LinkedList<MariaDBSchema.MariaDBTable>();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(linkedList0);
        MariaDBTableGenerator.generate("", randomly0, mariaDBSchema0);
        SQLQueryAdapter sQLQueryAdapter0 = MariaDBTableGenerator.generate("", randomly0, mariaDBSchema0);
        assertEquals("CREATE TABLE (c0 REAL , PRIMARY KEY(c0));", sQLQueryAdapter0.getLogString());
    }

    @Test
    public void test3() throws Throwable {
        Randomly randomly0 = new Randomly();
        randomly0.getBytes();
        LinkedList<MariaDBSchema.MariaDBTable> linkedList0 = new LinkedList<MariaDBSchema.MariaDBTable>();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(linkedList0);
        SQLQueryAdapter sQLQueryAdapter0 = MariaDBTableGenerator.generate("E8wLBMw1@AbIvy", randomly0, mariaDBSchema0);
        assertEquals("CREATE TABLE E8wLBMw1@AbIvy(c0 BOOLEAN );", sQLQueryAdapter0.getLogString());
    }

    @Test
    public void test4() throws Throwable {
        Randomly randomly0 = new Randomly();
        randomly0.getPositiveIntegerInt();
        LinkedList<MariaDBSchema.MariaDBTable> linkedList0 = new LinkedList<MariaDBSchema.MariaDBTable>();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(linkedList0);
        SQLQueryAdapter sQLQueryAdapter0 = MariaDBTableGenerator.generate("NSINED", randomly0, mariaDBSchema0);
        assertEquals("CREATE TABLE NSINED(c0 MEDIUMINT );", sQLQueryAdapter0.getLogString());

        SQLQueryAdapter sQLQueryAdapter1 = MariaDBTableGenerator.generate("NSINED", randomly0, mariaDBSchema0);
        assertEquals("CREATE TABLE NSINED(c0 VARCHAR(100) );", sQLQueryAdapter1.getLogString());
    }

    @Test
    public void test5() throws Throwable {
        Randomly randomly0 = new Randomly();
        MariaDBSchema.MariaDBTable[] mariaDBSchema_MariaDBTableArray0 = new MariaDBSchema.MariaDBTable[3];
        List<MariaDBSchema.MariaDBTable> list0 = Randomly.nonEmptySubset(mariaDBSchema_MariaDBTableArray0);
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(list0);
        // Undeclared exception!
        try {
            MariaDBTableGenerator.generate("UNSIGNED", randomly0, mariaDBSchema0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.mariadb.gen.MariaDBTableGenerator", e);
        }
    }
}
