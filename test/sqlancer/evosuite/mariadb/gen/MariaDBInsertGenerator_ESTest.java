/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 00:04:20 GMT 2025
 */

package sqlancer.evosuite.mariadb.gen;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.mariadb.gen.MariaDBInsertGenerator;
import sqlancer.mariadb.MariaDBSchema;
import sqlancer.Randomly;

public class MariaDBInsertGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        // Undeclared exception!
        try {
            MariaDBInsertGenerator.insert((MariaDBSchema) null, (Randomly) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.mariadb.gen.MariaDBInsertGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        MariaDBSchema.MariaDBTable[] mariaDBSchema_MariaDBTableArray0 = new MariaDBSchema.MariaDBTable[0];
        List<MariaDBSchema.MariaDBTable> list0 = List.of(mariaDBSchema_MariaDBTableArray0);
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(list0);
        // Undeclared exception!
        try {
            MariaDBInsertGenerator.insert(mariaDBSchema0, (Randomly) null);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test2() throws Throwable {
        LinkedList<MariaDBSchema.MariaDBTable> linkedList0 = new LinkedList<MariaDBSchema.MariaDBTable>();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(linkedList0);
        MariaDBSchema.MariaDBColumn mariaDBSchema_MariaDBColumn0 = MariaDBSchema.MariaDBColumn.createDummy("ru rM");
        List<MariaDBSchema.MariaDBColumn> list0 = List.of(mariaDBSchema_MariaDBColumn0, mariaDBSchema_MariaDBColumn0,
                mariaDBSchema_MariaDBColumn0, mariaDBSchema_MariaDBColumn0);
        MariaDBSchema.MariaDBTable.MariaDBEngine mariaDBSchema_MariaDBTable_MariaDBEngine0 = MariaDBSchema.MariaDBTable.MariaDBEngine.MY_ISAM;
        MariaDBSchema.MariaDBTable mariaDBSchema_MariaDBTable0 = new MariaDBSchema.MariaDBTable("ru rM", list0,
                (List<MariaDBSchema.MariaDBIndex>) null, mariaDBSchema_MariaDBTable_MariaDBEngine0);
        linkedList0.add(mariaDBSchema_MariaDBTable0);
        Randomly randomly0 = new Randomly();
        SQLQueryAdapter sQLQueryAdapter0 = MariaDBInsertGenerator.insert(mariaDBSchema0, randomly0);
        assertFalse(sQLQueryAdapter0.couldAffectSchema());
    }
}
