/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 20:33:07 GMT 2025
 */

package sqlancer.evosuite.mariadb.gen;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.mariadb.gen.MariaDBIndexGenerator;
import sqlancer.mariadb.MariaDBSchema;

public class MariaDBIndexGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        // Undeclared exception!
        try {
            MariaDBIndexGenerator.generate((MariaDBSchema) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.mariadb.gen.MariaDBIndexGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        LinkedList<MariaDBSchema.MariaDBTable> linkedList0 = new LinkedList<MariaDBSchema.MariaDBTable>();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(linkedList0);
        // Undeclared exception!
        try {
            MariaDBIndexGenerator.generate(mariaDBSchema0);
            fail("Expecting exception: IndexOutOfBoundsException");

        } catch (IndexOutOfBoundsException e) {
            //
            // Index: 0, Size: 0
            //
            verifyException("java.util.LinkedList", e);
        }
    }

    @Test
    public void test2() throws Throwable {
        LinkedList<MariaDBSchema.MariaDBColumn> linkedList0 = new LinkedList<MariaDBSchema.MariaDBColumn>();
        LinkedList<MariaDBSchema.MariaDBIndex> linkedList1 = new LinkedList<MariaDBSchema.MariaDBIndex>();
        MariaDBSchema.MariaDBTable.MariaDBEngine mariaDBSchema_MariaDBTable_MariaDBEngine0 = MariaDBSchema.MariaDBTable.MariaDBEngine.ARIA;
        MariaDBSchema.MariaDBTable mariaDBSchema_MariaDBTable0 = new MariaDBSchema.MariaDBTable("SET", linkedList0,
                linkedList1, mariaDBSchema_MariaDBTable_MariaDBEngine0);
        List<MariaDBSchema.MariaDBTable> list0 = List.of(mariaDBSchema_MariaDBTable0);
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(list0);
        // Undeclared exception!
        try {
            MariaDBIndexGenerator.generate(mariaDBSchema0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // [] 1
            //
        }
    }

    @Test
    public void test3() throws Throwable {
        List<MariaDBSchema.MariaDBTable> list0 = List.of();
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(list0);
        // Undeclared exception!
        try {
            MariaDBIndexGenerator.generate(mariaDBSchema0);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test4() throws Throwable {
        MariaDBSchema.MariaDBColumn mariaDBSchema_MariaDBColumn0 = MariaDBSchema.MariaDBColumn.createDummy("SET");
        MariaDBSchema.MariaDBTable.MariaDBEngine mariaDBSchema_MariaDBTable_MariaDBEngine0 = MariaDBSchema.MariaDBTable.MariaDBEngine.MY_ISAM;
        LinkedList<MariaDBSchema.MariaDBIndex> linkedList0 = new LinkedList<MariaDBSchema.MariaDBIndex>();
        List<MariaDBSchema.MariaDBColumn> list0 = List.of(mariaDBSchema_MariaDBColumn0, mariaDBSchema_MariaDBColumn0,
                mariaDBSchema_MariaDBColumn0, mariaDBSchema_MariaDBColumn0, mariaDBSchema_MariaDBColumn0,
                mariaDBSchema_MariaDBColumn0);
        MariaDBSchema.MariaDBTable mariaDBSchema_MariaDBTable0 = new MariaDBSchema.MariaDBTable("SET", list0,
                linkedList0, mariaDBSchema_MariaDBTable_MariaDBEngine0);
        List<MariaDBSchema.MariaDBTable> list1 = List.of(mariaDBSchema_MariaDBTable0, mariaDBSchema_MariaDBTable0,
                mariaDBSchema_MariaDBTable0, mariaDBSchema_MariaDBTable0, mariaDBSchema_MariaDBTable0,
                mariaDBSchema_MariaDBTable0, mariaDBSchema_MariaDBTable0, mariaDBSchema_MariaDBTable0);
        MariaDBSchema mariaDBSchema0 = new MariaDBSchema(list1);
        SQLQueryAdapter sQLQueryAdapter0 = MariaDBIndexGenerator.generate(mariaDBSchema0);
        assertEquals("CREATE INDEX ic0 ON SET(SET, SET);", sQLQueryAdapter0.getQueryString());
    }
}
