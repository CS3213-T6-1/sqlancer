/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:20:47 GMT 2025
 */

package sqlancer.evosuite.mariadb.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.mariadb.ast.MariaDBConstant;
import sqlancer.mariadb.ast.MariaDBExpression;
import sqlancer.mariadb.ast.MariaDBInOperation;
import sqlancer.mariadb.ast.MariaDBSelectStatement;
import sqlancer.Randomly;

public class MariaDBInOperation_ESTest {

    @Test
    public void test0() throws Throwable {
        MariaDBSelectStatement mariaDBSelectStatement0 = new MariaDBSelectStatement();
        List<MariaDBExpression> list0 = mariaDBSelectStatement0.getGroupBys();
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation((MariaDBExpression) null, list0, false);
        boolean boolean0 = mariaDBInOperation0.isNegated();
        assertFalse(boolean0);
    }

    @Test
    public void test1() throws Throwable {
        MariaDBConstant.MariaDBDoubleConstant mariaDBConstant_MariaDBDoubleConstant0 = new MariaDBConstant.MariaDBDoubleConstant(
                (-779.464819702785));
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation(mariaDBConstant_MariaDBDoubleConstant0,
                (List<MariaDBExpression>) null, false);
        mariaDBInOperation0.getList();
        assertFalse(mariaDBInOperation0.isNegated());
    }

    @Test
    public void test2() throws Throwable {
        MariaDBSelectStatement mariaDBSelectStatement0 = new MariaDBSelectStatement();
        List<MariaDBExpression> list0 = mariaDBSelectStatement0.getGroupBys();
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation((MariaDBExpression) null, list0, false);
        mariaDBInOperation0.getList();
        assertFalse(mariaDBInOperation0.isNegated());
    }

    @Test
    public void test3() throws Throwable {
        MariaDBConstant mariaDBConstant0 = MariaDBConstant.createBooleanConstant(true);
        MariaDBExpression[] mariaDBExpressionArray0 = new MariaDBExpression[8];
        List<MariaDBExpression> list0 = Randomly.nonEmptySubset(mariaDBExpressionArray0);
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation(mariaDBConstant0, list0, true);
        mariaDBInOperation0.getList();
        assertTrue(mariaDBInOperation0.isNegated());
    }

    @Test
    public void test4() throws Throwable {
        MariaDBSelectStatement mariaDBSelectStatement0 = new MariaDBSelectStatement();
        List<MariaDBExpression> list0 = mariaDBSelectStatement0.getGroupBys();
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation((MariaDBExpression) null, list0, false);
        mariaDBInOperation0.getExpr();
        assertFalse(mariaDBInOperation0.isNegated());
    }

    @Test
    public void test5() throws Throwable {
        MariaDBConstant.MariaDBDoubleConstant mariaDBConstant_MariaDBDoubleConstant0 = new MariaDBConstant.MariaDBDoubleConstant(
                0.0);
        LinkedList<MariaDBExpression> linkedList0 = new LinkedList<MariaDBExpression>();
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation(mariaDBConstant_MariaDBDoubleConstant0,
                linkedList0, true);
        boolean boolean0 = mariaDBInOperation0.isNegated();
        assertTrue(boolean0);
    }

    @Test
    public void test6() throws Throwable {
        MariaDBSelectStatement mariaDBSelectStatement0 = new MariaDBSelectStatement();
        List<MariaDBExpression> list0 = mariaDBSelectStatement0.getGroupByExpressions();
        MariaDBInOperation mariaDBInOperation0 = new MariaDBInOperation(mariaDBSelectStatement0, list0, false);
        mariaDBInOperation0.getExpr();
        assertFalse(mariaDBInOperation0.isNegated());
    }
}
