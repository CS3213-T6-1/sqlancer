/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 02:53:29 GMT 2025
 */

package sqlancer.evosuite.mariadb.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.mariadb.ast.MariaDBConstant;
import sqlancer.mariadb.ast.MariaDBExpression;
import sqlancer.mariadb.ast.MariaDBPostfixUnaryOperation;

public class MariaDBPostfixUnaryOperation_ESTest {

    @Test
    public void test0() throws Throwable {
        MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0 = MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator.IS_FALSE;
        MariaDBPostfixUnaryOperation mariaDBPostfixUnaryOperation0 = new MariaDBPostfixUnaryOperation(
                mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0, (MariaDBExpression) null);
        MariaDBExpression mariaDBExpression0 = mariaDBPostfixUnaryOperation0.getRandomWhereCondition();
        assertNull(mariaDBExpression0);
    }

    @Test
    public void test1() throws Throwable {
        MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0 = MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator.IS_NOT_NULL;
        MariaDBConstant.MariaDBNullConstant mariaDBConstant_MariaDBNullConstant0 = MariaDBConstant.createNullConstant();
        MariaDBPostfixUnaryOperation mariaDBPostfixUnaryOperation0 = new MariaDBPostfixUnaryOperation(
                mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0, mariaDBConstant_MariaDBNullConstant0);
        MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator1 = mariaDBPostfixUnaryOperation0
                .getOperator();
        assertEquals("IS NOT NULL", mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator1.getTextRepresentation());
    }

    @Test
    public void test2() throws Throwable {
        MariaDBConstant.MariaDBTextConstant mariaDBConstant_MariaDBTextConstant0 = new MariaDBConstant.MariaDBTextConstant(
                "IS_FALSE");
        MariaDBPostfixUnaryOperation mariaDBPostfixUnaryOperation0 = new MariaDBPostfixUnaryOperation(
                (MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator) null, mariaDBConstant_MariaDBTextConstant0);
        mariaDBPostfixUnaryOperation0.getOperator();
    }

    @Test
    public void test3() throws Throwable {
        MariaDBConstant.MariaDBTextConstant mariaDBConstant_MariaDBTextConstant0 = new MariaDBConstant.MariaDBTextConstant(
                "IS_FALSE");
        MariaDBPostfixUnaryOperation mariaDBPostfixUnaryOperation0 = new MariaDBPostfixUnaryOperation(
                (MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator) null, mariaDBConstant_MariaDBTextConstant0);
        MariaDBConstant.MariaDBTextConstant mariaDBConstant_MariaDBTextConstant1 = (MariaDBConstant.MariaDBTextConstant) mariaDBPostfixUnaryOperation0
                .getRandomWhereCondition();
        assertEquals("IS_FALSE", mariaDBConstant_MariaDBTextConstant1.getValue());
    }

    @Test
    public void test4() throws Throwable {
        MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0 = MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator.IS_TRUE;
        String string0 = mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0.getTextRepresentation();
        assertEquals("IS TRUE", string0);
    }

    @Test
    public void test5() throws Throwable {
        MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0 = MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator
                .getRandom();
        assertEquals(MariaDBPostfixUnaryOperation.MariaDBPostfixUnaryOperator.IS_TRUE,
                mariaDBPostfixUnaryOperation_MariaDBPostfixUnaryOperator0);
    }
}
