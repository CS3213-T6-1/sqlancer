/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 23:45:58 GMT 2025
 */

package sqlancer.evosuite.h2;

import static org.junit.jupiter.api.Assertions.*;
import org.evosuite.runtime.Random;
import org.junit.jupiter.api.Test;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.h2.H2Provider;
import sqlancer.h2.H2SetGenerator;

public class H2SetGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        Random.setNextRandom((-3431));
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET QUERY_STATISTICS_MAX_ENTRIES 1716;", sQLQueryAdapter0.getLogString());

        SQLQueryAdapter sQLQueryAdapter1 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET REFERENTIAL_INTEGRITY TRUE;", sQLQueryAdapter1.getLogString());
    }

    @Test
    public void test1() throws Throwable {
        Random.setNextRandom(3258);
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET QUERY_STATISTICS FALSE;", sQLQueryAdapter0.getQueryString());
    }

    @Test
    public void test2() throws Throwable {
        Random.setNextRandom((-1930));
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET OPTIMIZE_REUSE_RESULTS 1;", sQLQueryAdapter0.getLogString());
    }

    @Test
    public void test3() throws Throwable {
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        Random.setNextRandom((-1759));
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET MAX_OPERATION_MEMORY 880;", sQLQueryAdapter0.getLogString());
    }

    @Test
    public void test4() throws Throwable {
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        Random.setNextRandom((-1587));
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET MAX_MEMORY_UNDO 794;", sQLQueryAdapter0.getLogString());
    }

    @Test
    public void test5() throws Throwable {
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        Random.setNextRandom(461);
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET LAZY_QUERY_EXECUTION 0;", sQLQueryAdapter0.getQueryString());

        SQLQueryAdapter sQLQueryAdapter1 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET MAX_MEMORY_ROWS 232;", sQLQueryAdapter1.getQueryString());
    }

    @Test
    public void test6() throws Throwable {
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET ALLOW_LITERALS ALL;", sQLQueryAdapter0.getQueryString());

        SQLQueryAdapter sQLQueryAdapter1 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET CACHE_SIZE 1;", sQLQueryAdapter1.getQueryString());

        SQLQueryAdapter sQLQueryAdapter2 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET BINARY_COLLATION UNSIGNED;", sQLQueryAdapter2.getQueryString());

        SQLQueryAdapter sQLQueryAdapter3 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET UUID_COLLATION UNSIGNED;", sQLQueryAdapter3.getQueryString());

        SQLQueryAdapter sQLQueryAdapter4 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET BUILTIN_ALIAS_OVERRIDE FALSE;", sQLQueryAdapter4.getQueryString());

        SQLQueryAdapter sQLQueryAdapter5 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET COLLATION ENGLISH STRENGTH IDENTICAL;", sQLQueryAdapter5.getQueryString());

        SQLQueryAdapter sQLQueryAdapter6 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET DEFAULT_NULL_ORDERING HIGH;", sQLQueryAdapter6.getLogString());

        SQLQueryAdapter sQLQueryAdapter7 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET DEFAULT_TABLE_TYPE CACHED;", sQLQueryAdapter7.getQueryString());

        SQLQueryAdapter sQLQueryAdapter8 = H2SetGenerator.getQuery(h2Provider_H2GlobalState0);
        assertEquals("SET IGNORECASE FALSE;", sQLQueryAdapter8.getQueryString());
    }

    @Test
    public void test7() throws Throwable {
        // Undeclared exception!
        try {
            H2SetGenerator.getQuery((H2Provider.H2GlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.h2.H2SetGenerator", e);
        }
    }
}
