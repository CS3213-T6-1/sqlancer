/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:03:14 GMT 2025
 */

package sqlancer.evosuite.h2.ast;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.h2.ast.H2Expression;
import sqlancer.h2.ast.H2Join;
import sqlancer.h2.ast.H2TableReference;
import sqlancer.h2.H2Provider;
import sqlancer.h2.H2Schema;

public class H2Join_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
        H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("sqlancer.h2.ast.H2Join$JoinType", linkedList0);
        H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
        H2Join h2Join0 = H2Join.createNaturalJoin((H2TableReference) null, h2TableReference0);
        assertEquals(H2Join.JoinType.NATURAL, h2Join0.getJoinType());
    }

    @Test
    public void test01() throws Throwable {
        LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
        H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("sqlancer.h2.ast.H2Join$JoinType", linkedList0);
        H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
        H2Join h2Join0 = H2Join.createInnerJoin((H2TableReference) null, h2TableReference0, h2TableReference0);
        assertEquals(H2Join.JoinType.INNER, h2Join0.getJoinType());
    }

    @Test
    public void test02() throws Throwable {
        H2Join.JoinType h2Join_JoinType0 = H2Join.JoinType.NATURAL;
        H2Join h2Join0 = new H2Join((H2TableReference) null, (H2TableReference) null, h2Join_JoinType0,
                (H2Expression) null);
        LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
        H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("sqlancer.h2.ast.H2Join$JoinType", linkedList0);
        H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
        H2Join h2Join1 = H2Join.createRightOuterJoin((H2TableReference) null, h2TableReference0, h2Join0);
        assertEquals(H2Join.JoinType.RIGHT, h2Join1.getJoinType());
    }

    // @Test
    // public void test03() throws Throwable {
    // LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
    // H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("b$Wf#z6XVX@)Uy<", linkedList0);
    // H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
    // H2Join.JoinType.getRandom();
    // H2TableReference h2TableReference1 = new H2TableReference(h2Schema_H2Table0);
    // List<H2TableReference> list0 = List.of(h2TableReference0, h2TableReference1, h2TableReference1,
    // h2TableReference1, h2TableReference0, h2TableReference0, h2TableReference1, h2TableReference1,
    // h2TableReference1);
    // H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
    // LinkedList<H2TableReference> linkedList1 = new LinkedList<H2TableReference>(list0);
    // // Undeclared exception!
    // try {
    // H2Join.getJoins(linkedList1, h2Provider_H2GlobalState0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.h2.H2ExpressionGenerator", e);
    // }
    // }

    @Test
    public void test04() throws Throwable {
        H2TableReference h2TableReference0 = new H2TableReference((H2Schema.H2Table) null);
        H2Join h2Join0 = H2Join.createLeftOuterJoin(h2TableReference0, (H2TableReference) null, h2TableReference0);
        assertEquals(H2Join.JoinType.LEFT, h2Join0.getJoinType());
    }

    @Test
    public void test05() throws Throwable {
        H2Join h2Join0 = H2Join.createNaturalJoin((H2TableReference) null, (H2TableReference) null);
        H2TableReference h2TableReference0 = h2Join0.getRightTable();
        assertNull(h2TableReference0);
    }

    @Test
    public void test06() throws Throwable {
        H2Join h2Join0 = H2Join.createNaturalJoin((H2TableReference) null, (H2TableReference) null);
        H2Expression h2Expression0 = h2Join0.getOnCondition();
        assertNull(h2Expression0);
    }

    @Test
    public void test07() throws Throwable {
        H2Join h2Join0 = H2Join.createLeftOuterJoin((H2TableReference) null, (H2TableReference) null,
                (H2Expression) null);
        H2TableReference h2TableReference0 = h2Join0.getLeftTable();
        assertNull(h2TableReference0);
    }

    @Test
    public void test08() throws Throwable {
        LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
        H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("b$Wf#z6XVX@)Uy<", linkedList0);
        H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
        List<H2TableReference> list0 = List.of(h2TableReference0, h2TableReference0, h2TableReference0,
                h2TableReference0, h2TableReference0, h2TableReference0, h2TableReference0, h2TableReference0,
                h2TableReference0);
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        LinkedList<H2TableReference> linkedList1 = new LinkedList<H2TableReference>(list0);
        List<H2Join> list1 = H2Join.getJoins(linkedList1, h2Provider_H2GlobalState0);
        assertTrue(list1.isEmpty());
    }

    @Test
    public void test09() throws Throwable {
        LinkedList<H2TableReference> linkedList0 = new LinkedList<H2TableReference>();
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        List<H2Join> list0 = H2Join.getJoins(linkedList0, h2Provider_H2GlobalState0);
        assertEquals(0, list0.size());
    }

    @Test
    public void test10() throws Throwable {
        H2Join.JoinType.getRandom();
        H2TableReference h2TableReference0 = new H2TableReference((H2Schema.H2Table) null);
        List<H2TableReference> list0 = List.of(h2TableReference0, h2TableReference0, h2TableReference0,
                h2TableReference0, h2TableReference0, h2TableReference0, h2TableReference0, h2TableReference0,
                h2TableReference0);
        H2Provider.H2GlobalState h2Provider_H2GlobalState0 = new H2Provider.H2GlobalState();
        // Undeclared exception!
        try {
            H2Join.getJoins(list0, h2Provider_H2GlobalState0);
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("java.util.ImmutableCollections", e);
        }
    }

    @Test
    public void test11() throws Throwable {
        LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
        H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("DECFLOAT", linkedList0);
        H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
        H2Join.JoinType h2Join_JoinType0 = H2Join.JoinType.NATURAL;
        H2Join h2Join0 = new H2Join(h2TableReference0, h2TableReference0, h2Join_JoinType0, h2TableReference0);
        h2Join0.setOnClause((H2Expression) h2TableReference0);
        assertEquals(H2Join.JoinType.NATURAL, h2Join0.getJoinType());
    }

    @Test
    public void test12() throws Throwable {
        H2TableReference h2TableReference0 = new H2TableReference((H2Schema.H2Table) null);
        H2Join h2Join0 = H2Join.createRightOuterJoin(h2TableReference0, h2TableReference0, h2TableReference0);
        H2TableReference h2TableReference1 = h2Join0.getLeftTable();
        assertSame(h2TableReference0, h2TableReference1);
    }

    @Test
    public void test13() throws Throwable {
        H2TableReference h2TableReference0 = new H2TableReference((H2Schema.H2Table) null);
        H2Join h2Join0 = H2Join.createRightOuterJoin(h2TableReference0, h2TableReference0, h2TableReference0);
        H2Expression h2Expression0 = h2Join0.getOnCondition();
        assertSame(h2Expression0, h2TableReference0);
    }

    @Test
    public void test14() throws Throwable {
        LinkedList<H2Schema.H2Column> linkedList0 = new LinkedList<H2Schema.H2Column>();
        H2Schema.H2Table h2Schema_H2Table0 = new H2Schema.H2Table("DECFLOAT", linkedList0);
        H2TableReference h2TableReference0 = new H2TableReference(h2Schema_H2Table0);
        H2Join.JoinType h2Join_JoinType0 = H2Join.JoinType.NATURAL;
        H2Join h2Join0 = new H2Join(h2TableReference0, h2TableReference0, h2Join_JoinType0, h2TableReference0);
        H2TableReference h2TableReference1 = h2Join0.getRightTable();
        assertSame(h2TableReference1, h2TableReference0);
    }

    @Test
    public void test15() throws Throwable {
        H2Join.JoinType h2Join_JoinType0 = H2Join.JoinType.NATURAL;
        H2Join h2Join0 = new H2Join((H2TableReference) null, (H2TableReference) null, h2Join_JoinType0,
                (H2Expression) null);
        H2Join.JoinType h2Join_JoinType1 = h2Join0.getJoinType();
        assertSame(h2Join_JoinType1, h2Join_JoinType0);
    }
}
