/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:45:29 GMT 2025
 */

package sqlancer.evosuite.h2.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.h2.ast.H2Constant;
import sqlancer.h2.ast.H2Expression;

public class H2Constant_ESTest {

    @Test
    public void test00() throws Throwable {
        H2Constant.H2IntConstant h2Constant_H2IntConstant0 = new H2Constant.H2IntConstant(0L);
        assertEquals("0", h2Constant_H2IntConstant0.toString());
    }

    @Test
    public void test01() throws Throwable {
        H2Constant.H2BoolConstant h2Constant_H2BoolConstant0 = new H2Constant.H2BoolConstant(true);
        assertEquals("true", h2Constant_H2BoolConstant0.toString());
    }

    @Test
    public void test02() throws Throwable {
        H2Constant.H2NullConstant h2Constant_H2NullConstant0 = new H2Constant.H2NullConstant();
        assertEquals("NULL", h2Constant_H2NullConstant0.toString());
    }

    @Test
    public void test03() throws Throwable {
        H2Constant.H2BinaryConstant h2Constant_H2BinaryConstant0 = new H2Constant.H2BinaryConstant((-1L));
        assertEquals("ffffffffffffffff", h2Constant_H2BinaryConstant0.getValue());
    }

    @Test
    public void test04() throws Throwable {
        H2Constant.H2DoubleConstant h2Constant_H2DoubleConstant0 = new H2Constant.H2DoubleConstant(-0.0);
        String string0 = h2Constant_H2DoubleConstant0.toString();
        assertEquals("(-CAST(0 AS DOUBLE))", string0);
    }

    @Test
    public void test05() throws Throwable {
        H2Constant.H2DoubleConstant h2Constant_H2DoubleConstant0 = (H2Constant.H2DoubleConstant) H2Constant
                .createDoubleConstant(Double.NEGATIVE_INFINITY);
        String string0 = h2Constant_H2DoubleConstant0.toString();
        assertEquals("(-POWER(0, -1))", string0);
    }

    @Test
    public void test06() throws Throwable {
        H2Constant.H2DoubleConstant h2Constant_H2DoubleConstant0 = new H2Constant.H2DoubleConstant(
                Double.POSITIVE_INFINITY);
        String string0 = h2Constant_H2DoubleConstant0.toString();
        assertEquals("POWER(0, -1)", string0);
    }

    @Test
    public void test07() throws Throwable {
        H2Constant.H2StringConstant h2Constant_H2StringConstant0 = new H2Constant.H2StringConstant("6x#?rwF.F:0!FN^K");
        String string0 = h2Constant_H2StringConstant0.toString();
        assertEquals("'6x#?rwF.F:0!FN^K'", string0);
    }

    @Test
    public void test08() throws Throwable {
        H2Expression h2Expression0 = H2Constant.createStringConstant("");
        assertNotNull(h2Expression0);
    }

    @Test
    public void test09() throws Throwable {
        H2Constant.H2IntConstant h2Constant_H2IntConstant0 = (H2Constant.H2IntConstant) H2Constant
                .createIntConstant(2145L);
        String string0 = h2Constant_H2IntConstant0.toString();
        assertEquals("2145", string0);
    }

    @Test
    public void test10() throws Throwable {
        H2Constant.H2DoubleConstant h2Constant_H2DoubleConstant0 = (H2Constant.H2DoubleConstant) H2Constant
                .createDoubleConstant(2594.4489039);
        String string0 = h2Constant_H2DoubleConstant0.toString();
        assertEquals("2594.4489039", string0);
    }

    @Test
    public void test11() throws Throwable {
        H2Constant.H2BoolConstant h2Constant_H2BoolConstant0 = (H2Constant.H2BoolConstant) H2Constant
                .createBoolConstant(true);
        String string0 = h2Constant_H2BoolConstant0.toString();
        assertEquals("true", string0);
    }

    @Test
    public void test12() throws Throwable {
        H2Constant.H2NullConstant h2Constant_H2NullConstant0 = (H2Constant.H2NullConstant) H2Constant
                .createNullConstant();
        String string0 = h2Constant_H2NullConstant0.toString();
        assertEquals("NULL", string0);
    }

    @Test
    public void test13() throws Throwable {
        H2Constant.H2DoubleConstant h2Constant_H2DoubleConstant0 = new H2Constant.H2DoubleConstant((-5141.4833801));
        String string0 = h2Constant_H2DoubleConstant0.toString();
        assertEquals("-5141.4833801", string0);
    }

    @Test
    public void test14() throws Throwable {
        H2Constant.H2BinaryConstant h2Constant_H2BinaryConstant0 = new H2Constant.H2BinaryConstant(0L);
        String string0 = h2Constant_H2BinaryConstant0.toString();
        assertEquals("X'00'", string0);
    }

    @Test
    public void test15() throws Throwable {
        H2Constant.H2BinaryConstant h2Constant_H2BinaryConstant0 = (H2Constant.H2BinaryConstant) H2Constant
                .createBinaryConstant(3942L);
        String string0 = h2Constant_H2BinaryConstant0.getValue();
        assertEquals("0f66", string0);
    }
}
