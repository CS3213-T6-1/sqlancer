/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 17:56:49 GMT 2025
 */

package sqlancer.evosuite.h2.ast;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;
import org.junit.jupiter.api.Test;

import sqlancer.common.ast.JoinBase;
import sqlancer.h2.ast.H2Expression;
import sqlancer.h2.ast.H2Join;
import sqlancer.h2.ast.H2Select;
import sqlancer.Randomly;

public class H2Select_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        H2Select h2Select0 = new H2Select();
        // Undeclared exception!
        try {
            h2Select0.setJoinClauses((List<JoinBase<H2Expression>>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.h2.ast.H2Select", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        H2Select h2Select0 = new H2Select();
        h2Select0.setJoinList((List<H2Expression>) null);
        // Undeclared exception!
        try {
            h2Select0.getJoinClauses();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.h2.ast.H2Select", e);
        }
    }

    @Test
    public void test2() throws Throwable {
        H2Select h2Select0 = new H2Select();
        List<H2Expression> list0 = List.of((H2Expression) h2Select0, (H2Expression) h2Select0,
                (H2Expression) h2Select0);
        h2Select0.setJoinList(list0);
        // Undeclared exception!
        try {
            h2Select0.getJoinClauses();
            fail("Expecting exception: ClassCastException");

        } catch (ClassCastException e) {
            //
            // class sqlancer.h2.ast.H2Select cannot be cast to class sqlancer.h2.ast.H2Join (sqlancer.h2.ast.H2Select
            // and sqlancer.h2.ast.H2Join are in unnamed module of loader
            // org.evosuite.instrumentation.InstrumentingClassLoader @320e80cf)
            //
            verifyException("sqlancer.h2.ast.H2Select", e);
        }
    }

    @Test
    public void test3() throws Throwable {
        H2Select h2Select0 = new H2Select();
        List<H2Expression> list0 = List.of((H2Expression) h2Select0, (H2Expression) h2Select0, (H2Expression) h2Select0,
                (H2Expression) h2Select0, (H2Expression) h2Select0, (H2Expression) h2Select0, (H2Expression) h2Select0);
        h2Select0.setFetchColumns(list0);
        // Undeclared exception!
        try {
            h2Select0.asString();
            fail("Expecting exception: StackOverflowError");

        } catch (StackOverflowError e) {
        }
    }

    @Test
    public void test4() throws Throwable {
        H2Select h2Select0 = new H2Select();
        H2Expression[] h2ExpressionArray0 = new H2Expression[21];
        List<H2Expression> list0 = Randomly.nonEmptySubset(h2ExpressionArray0);
        h2Select0.setFetchColumns(list0);
        // Undeclared exception!
        try {
            h2Select0.asString();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.h2.H2ToStringVisitor", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        H2Select h2Select0 = new H2Select();
        H2Join[] h2JoinArray0 = new H2Join[6];
        List<JoinBase<H2Expression>> list0 = Randomly.nonEmptySubset(h2JoinArray0);
        h2Select0.setJoinClauses(list0);
        List<JoinBase<H2Expression>> list1 = h2Select0.getJoinClauses();
        assertFalse(list1.isEmpty());
    }

    @Test
    public void test6() throws Throwable {
        H2Select h2Select0 = new H2Select();
        // Undeclared exception!
        try {
            h2Select0.asString();
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test7() throws Throwable {
        H2Select h2Select0 = new H2Select();
        List<JoinBase<H2Expression>> list0 = h2Select0.getJoinClauses();
        assertEquals(0, list0.size());
    }
}
