/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 18:37:35 GMT 2025
 */

package sqlancer.evosuite.presto.ast;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.presto.ast.PrestoConstant;
import sqlancer.presto.ast.PrestoExpression;
import sqlancer.presto.PrestoSchema;

public class PrestoConstant_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test000() throws Throwable {
        PrestoConstant.createJsonConstant();
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        // Undeclared exception!
        try {
            PrestoConstant.createMapConstant(prestoSchema_PrestoCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test001() throws Throwable {
        PrestoConstant.PrestoNullConstant prestoConstant_PrestoNullConstant0 = new PrestoConstant.PrestoNullConstant();
        boolean boolean0 = prestoConstant_PrestoNullConstant0.isNull();
        assertTrue(boolean0);
    }

    @Test
    public void test002() throws Throwable {
        PrestoConstant.PrestoIntConstant prestoConstant_PrestoIntConstant0 = (PrestoConstant.PrestoIntConstant) PrestoConstant
                .createIntConstant((long) 677);
        boolean boolean0 = prestoConstant_PrestoIntConstant0.isInt();
        assertTrue(boolean0);
        assertEquals("677", prestoConstant_PrestoIntConstant0.toString());
    }

    @Test
    public void test003() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                0.0);
        boolean boolean0 = prestoConstant_PrestoFloatConstant0.isFloat();
        assertTrue(boolean0);
        assertEquals("0.0", prestoConstant_PrestoFloatConstant0.toString());
    }

    @Test
    public void test004() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                false);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.isBoolean();
        assertFalse(prestoConstant_PrestoBooleanConstant0.getValue());
        assertTrue(boolean0);
    }

    @Test
    public void test005() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                false);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.asBoolean();
        assertFalse(boolean0);
    }

    @Test
    public void test006() throws Throwable {
        LinkedList<PrestoExpression> linkedList0 = new LinkedList<PrestoExpression>();
        PrestoConstant.PrestoArrayConstant prestoConstant_PrestoArrayConstant0 = new PrestoConstant.PrestoArrayConstant(
                linkedList0);
        boolean boolean0 = prestoConstant_PrestoArrayConstant0.isArray();
        assertTrue(boolean0);
    }

    @Test
    public void test007() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.ARRAY;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType1 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, prestoSchema_PrestoCompositeDataType0);
        PrestoConstant.PrestoArrayConstant prestoConstant_PrestoArrayConstant0 = (PrestoConstant.PrestoArrayConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType1, true);
        assertFalse(prestoConstant_PrestoArrayConstant0.isString());
    }

    @Test
    public void test008() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIMESTAMP_WITH_TIME_ZONE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, 0, 0);
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = (PrestoConstant.PrestoDecimalConstant) PrestoConstant
                .createDecimalConstant(prestoSchema_PrestoCompositeDataType0, (-1968.4898330538958));
        assertEquals(0.0, prestoConstant_PrestoDecimalConstant0.asFloat(), 0.01);
    }

    @Test
    public void test009() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                0.0);
        double double0 = prestoConstant_PrestoDecimalConstant0.asFloat();
        assertEquals(0.0, double0, 0.01);
    }

    @Test
    public void test010() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                246.12);
        double double0 = prestoConstant_PrestoDecimalConstant0.asFloat();
        assertEquals(246.12, double0, 0.01);
    }

    @Test
    public void test011() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                (-2.0694009417211614));
        double double0 = prestoConstant_PrestoDecimalConstant0.asFloat();
        assertEquals((-2.0694009417211614), double0, 0.01);
    }

    @Test
    public void test012() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.generateConstant((PrestoSchema.PrestoCompositeDataType) null, false);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test013() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.INTERVAL_DAY_TO_SECOND;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, (-1027), 16);
        // Undeclared exception!
        try {
            PrestoConstant.generateConstant(prestoSchema_PrestoCompositeDataType0, false);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // 0 -1
            //
            verifyException("sqlancer.Randomly", e);
        }
    }

    @Test
    public void test014() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createVarbinaryConstant((String) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant$PrestoVarbinaryConstant", e);
        }
    }

    @Test
    public void test015() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createStringConstant("", (-1));
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test016() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createStringConstant((String) null, 4588);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant$PrestoTextConstant", e);
        }
    }

    @Test
    public void test017() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createIntervalYearToMonth(2L);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // 0 -1131
            //
            verifyException("sqlancer.Randomly", e);
        }
    }

    @Test
    public void test018() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createIntervalDayToSecond(8L);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {
            //
            // 0 -638
            //
            verifyException("sqlancer.Randomly", e);
        }
    }

    @Test
    public void test019() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createIntConstant((PrestoSchema.PrestoCompositeDataType) null, (-788L), false);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test020() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createFloatConstant((PrestoSchema.PrestoCompositeDataType) null, (double) (-788L));
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test021() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.DECIMAL;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        // Undeclared exception!
        try {
            PrestoConstant.createDecimalConstant(prestoSchema_PrestoCompositeDataType0, 708.0);
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test022() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.DECIMAL;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        // Undeclared exception!
        try {
            PrestoConstant.createDecimalConstant(prestoSchema_PrestoCompositeDataType0, Double.NEGATIVE_INFINITY);
            fail("Expecting exception: NumberFormatException");

        } catch (NumberFormatException e) {
            //
            // Infinite or NaN
            //
            verifyException("java.math.BigDecimal", e);
        }
    }

    @Test
    public void test023() throws Throwable {
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        // Undeclared exception!
        try {
            PrestoConstant.createDecimalConstant(prestoSchema_PrestoCompositeDataType0, (-2066.548801));
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // BOOLEAN
            //
        }
    }

    @Test
    public void test024() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.JSON;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, (-1879048191), (-1879048191));
        // Undeclared exception!
        try {
            PrestoConstant.createDecimalConstant(prestoSchema_PrestoCompositeDataType0, 1872.421);
            fail("Expecting exception: ArithmeticException");

        } catch (ArithmeticException e) {
            //
            // BigInteger would overflow supported range
            //
            verifyException("java.math.BigInteger", e);
        }
    }

    @Test
    public void test025() throws Throwable {
        PrestoConstant.createJsonConstant();
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        assertEquals("01", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());
    }

    @Test
    public void test026() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.CHAR;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.generateConstant(prestoSchema_PrestoCompositeDataType0, false);
        PrestoConstant.createTimezoneConstant();
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = new PrestoConstant.PrestoIntervalDayToSecondConstant();
        assertEquals("00", prestoConstant_PrestoIntervalDayToSecondConstant0.getValue());
    }

    @Test
    public void test027() throws Throwable {
        PrestoConstant.createJsonConstant();
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = new PrestoConstant.PrestoIntervalDayToSecondConstant();
        assertEquals("00", prestoConstant_PrestoIntervalDayToSecondConstant0.getValue());
    }

    @Test
    public void test028() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        assertEquals("1970", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());

        PrestoConstant.createTimezoneConstant();
        PrestoConstant.PrestoTimestampWithTimezoneConstant prestoConstant_PrestoTimestampWithTimezoneConstant0 = (PrestoConstant.PrestoTimestampWithTimezoneConstant) PrestoConstant
                .createTimestampWithTimeZoneConstant(0L);
        assertEquals("1970-01-01 00:00:00", prestoConstant_PrestoTimestampWithTimezoneConstant0.getValue());

        PrestoSchema.PrestoCompositeDataType.getRandomWithoutNull();
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = new PrestoConstant.PrestoIntervalDayToSecondConstant();
        assertEquals("00", prestoConstant_PrestoIntervalDayToSecondConstant0.getValue());

        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
        assertEquals("{\"val\":true}", prestoConstant_PrestoJsonConstant0.getValue());
    }

    @Test
    public void test029() throws Throwable {
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
        assertEquals("{\"val\":false}", prestoConstant_PrestoJsonConstant0.getValue());
    }

    @Test
    public void test030() throws Throwable {
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = (PrestoConstant.PrestoIntervalDayToSecondConstant) PrestoConstant
                .createIntervalDayToSecond((-1L));
        assertEquals("01", prestoConstant_PrestoIntervalDayToSecondConstant0.getValue());

        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        assertEquals("1970", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());

        PrestoSchema.PrestoCompositeDataType.getRandomWithoutNull();
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
        assertEquals("{\"val\": \"456\"}", prestoConstant_PrestoJsonConstant0.getValue());
    }

    @Test
    public void test031() throws Throwable {
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = (PrestoConstant.PrestoBooleanConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, false);
        assertFalse(prestoConstant_PrestoBooleanConstant0.getValue());
    }

    // @Test
    // public void test032() throws Throwable {
    // PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new
    // PrestoConstant.PrestoIntervalYearToMonthConstant();
    // PrestoConstant.createTimezoneConstant();
    // PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
    // .getRandomWithoutNull();
    // PrestoExpression prestoExpression0 = PrestoConstant.createIntConstant(prestoSchema_PrestoCompositeDataType0, 0L,
    // true);
    // assertNotNull(prestoExpression0);
    // }

    @Test
    public void test033() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = (PrestoConstant.PrestoIntervalYearToMonthConstant) PrestoConstant
                .createIntervalYearToMonth((-1790L));
        assertEquals("1970", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());

        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        PrestoConstant.PrestoIntConstant prestoConstant_PrestoIntConstant0 = (PrestoConstant.PrestoIntConstant) PrestoConstant
                .createIntConstant(prestoSchema_PrestoCompositeDataType0, (-1146L), false);
        assertEquals("-1146", prestoConstant_PrestoIntConstant0.toString());
    }

    @Test
    public void test034() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.NULL;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, 2, (-2013265918));
        PrestoConstant.PrestoIntConstant prestoConstant_PrestoIntConstant0 = (PrestoConstant.PrestoIntConstant) PrestoConstant
                .createIntConstant(prestoSchema_PrestoCompositeDataType0, (long) 2, false);
        assertEquals(2L, prestoConstant_PrestoIntConstant0.getValue());
    }

    @Test
    public void test035() throws Throwable {
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        // Undeclared exception!
        try {
            PrestoConstant.createIntConstant(prestoSchema_PrestoCompositeDataType0, (-21L), false);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test036() throws Throwable {
        PrestoConstant.PrestoTimeWithTimeZoneConstant prestoConstant_PrestoTimeWithTimeZoneConstant0 = (PrestoConstant.PrestoTimeWithTimeZoneConstant) PrestoConstant
                .createTimeWithTimeZoneConstant(5L);
        assertEquals("00:00:00.005", prestoConstant_PrestoTimeWithTimeZoneConstant0.getValue());
    }

    @Test
    public void test037() throws Throwable {
        PrestoConstant.PrestoTimestampConstant prestoConstant_PrestoTimestampConstant0 = (PrestoConstant.PrestoTimestampConstant) PrestoConstant
                .createTimestampConstant((-760L));
        assertEquals("1969-12-31 23:59:59", prestoConstant_PrestoTimestampConstant0.getValue());
    }

    @Test
    public void test038() throws Throwable {
        PrestoConstant.PrestoTimeConstant prestoConstant_PrestoTimeConstant0 = (PrestoConstant.PrestoTimeConstant) PrestoConstant
                .createTimeConstant((-1970L));
        assertEquals("23:59:58.030", prestoConstant_PrestoTimeConstant0.getValue());
    }

    @Test
    public void test039() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = (PrestoConstant.PrestoFloatConstant) PrestoConstant
                .createFloatConstant((-2555.0437));
        assertEquals("-2555.0437", prestoConstant_PrestoFloatConstant0.toString());
    }

    @Test
    public void test040() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = (PrestoConstant.PrestoBooleanConstant) PrestoConstant
                .createBooleanConstant(false);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.asBoolean();
        assertFalse(boolean0);
    }

    @Test
    public void test041() throws Throwable {
        // Undeclared exception!
        try {
            PrestoConstant.createDecimalConstant((PrestoSchema.PrestoCompositeDataType) null, 1820.394378351939);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test042() throws Throwable {
        PrestoConstant.PrestoDateConstant prestoConstant_PrestoDateConstant0 = (PrestoConstant.PrestoDateConstant) PrestoConstant
                .createDateConstant((-1970L));
        assertEquals("1969-12-31", prestoConstant_PrestoDateConstant0.getValue());
    }

    // @Test
    // public void test043() throws Throwable {
    // PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new
    // PrestoConstant.PrestoIntervalYearToMonthConstant();
    // assertEquals("1970", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());
    //
    // PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
    // PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 =
    // (PrestoConstant.PrestoIntervalDayToSecondConstant) PrestoConstant
    // .createIntervalDayToSecond(8L);
    // assertEquals("00", prestoConstant_PrestoIntervalDayToSecondConstant0.getValue());
    // }

    @Test
    public void test044() throws Throwable {
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
        assertEquals("{\"val\":null}", prestoConstant_PrestoJsonConstant0.getValue());
    }

    // @Test
    // public void test045() throws Throwable {
    // PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new
    // PrestoConstant.PrestoIntervalYearToMonthConstant();
    // PrestoSchema.PrestoCompositeDataType.getRandomWithoutNull();
    // PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
    // assertEquals("{\"val\": 0.6}", prestoConstant_PrestoJsonConstant0.getValue());
    // }

    @Test
    public void test046() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                0.0);
        String string0 = prestoConstant_PrestoDecimalConstant0.toString();
        assertEquals("0.0000", string0);
    }

    @Test
    public void test047() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                Double.POSITIVE_INFINITY);
        String string0 = prestoConstant_PrestoDecimalConstant0.toString();
        assertEquals("'+Inf'", string0);
    }

    @Test
    public void test048() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = (PrestoConstant.PrestoDecimalConstant) PrestoConstant
                .createDecimalConstant(Double.NEGATIVE_INFINITY);
        String string0 = prestoConstant_PrestoDecimalConstant0.toString();
        assertEquals("'-Inf'", string0);
    }

    @Test
    public void test049() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                Double.NEGATIVE_INFINITY);
        String string0 = prestoConstant_PrestoFloatConstant0.toString();
        assertEquals("-infinity()", string0);
    }

    @Test
    public void test050() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                Double.POSITIVE_INFINITY);
        String string0 = prestoConstant_PrestoFloatConstant0.toString();
        assertEquals("infinity()", string0);
    }

    @Test
    public void test051() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                0.0);
        String string0 = prestoConstant_PrestoFloatConstant0.toString();
        assertEquals("0.0", string0);
    }

    @Test
    public void test052() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.NULL;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, 1913, 1913);
        PrestoConstant.PrestoNullConstant prestoConstant_PrestoNullConstant0 = (PrestoConstant.PrestoNullConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, false);
        assertTrue(prestoConstant_PrestoNullConstant0.isNull());
    }

    @Test
    public void test053() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.INTERVAL_YEAR_TO_MONTH;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = (PrestoConstant.PrestoIntervalYearToMonthConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("01", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());
    }

    @Test
    public void test054() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIMESTAMP_WITH_TIME_ZONE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoTimestampWithTimezoneConstant prestoConstant_PrestoTimestampWithTimezoneConstant0 = (PrestoConstant.PrestoTimestampWithTimezoneConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("1970-01-01 00:00:00", prestoConstant_PrestoTimestampWithTimezoneConstant0.getValue());
    }

    @Test
    public void test055() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.JSON;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = (PrestoConstant.PrestoJsonConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("{\"employee\":{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}}",
                prestoConstant_PrestoJsonConstant0.getValue());
    }

    @Test
    public void test056() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.VARBINARY;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoVarbinaryConstant prestoConstant_PrestoVarbinaryConstant0 = (PrestoConstant.PrestoVarbinaryConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertFalse(prestoConstant_PrestoVarbinaryConstant0.isBoolean());
    }

    @Test
    public void test057() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.VARCHAR;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoTextConstant prestoConstant_PrestoTextConstant0 = (PrestoConstant.PrestoTextConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("TRUE", prestoConstant_PrestoTextConstant0.getValue());
    }

    @Test
    public void test058() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.ARRAY;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType1 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, prestoSchema_PrestoCompositeDataType0);
        PrestoConstant.PrestoArrayConstant prestoConstant_PrestoArrayConstant0 = (PrestoConstant.PrestoArrayConstant) PrestoConstant
                .createMapConstant(prestoSchema_PrestoCompositeDataType1);
        assertFalse(prestoConstant_PrestoArrayConstant0.isString());
    }

    @Test
    public void test059() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.ARRAY;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoArrayConstant prestoConstant_PrestoArrayConstant0 = (PrestoConstant.PrestoArrayConstant) PrestoConstant
                .createMapConstant(prestoSchema_PrestoCompositeDataType0);
        assertFalse(prestoConstant_PrestoArrayConstant0.isFloat());
    }

    @Test
    public void test060() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.ARRAY;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, 183, 183);
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType1 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, prestoSchema_PrestoCompositeDataType0);
        // Undeclared exception!
        try {
            PrestoConstant.createArrayConstant(prestoSchema_PrestoCompositeDataType1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test061() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.FLOAT;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoExpression prestoExpression0 = PrestoConstant.createIntConstant(prestoSchema_PrestoCompositeDataType0,
                (-1L), true);
        assertNotNull(prestoExpression0);
    }

    @Test
    public void test062() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.INT;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, (-681), (-681));
        // Undeclared exception!
        try {
            PrestoConstant.generateConstant(prestoSchema_PrestoCompositeDataType0, false);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test063() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        assertEquals("1970", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());

        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.ARRAY;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = prestoSchema_PrestoDataType0.get();
        PrestoConstant.createArrayConstant(prestoSchema_PrestoCompositeDataType0);
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = (PrestoConstant.PrestoJsonConstant) PrestoConstant
                .createJsonConstant();
        assertEquals("{\"val\":true}", prestoConstant_PrestoJsonConstant0.getValue());
    }

    @Test
    public void test064() throws Throwable {
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        // Undeclared exception!
        try {
            PrestoConstant.createFloatConstant(prestoSchema_PrestoCompositeDataType0, (-927.484748014457));
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test065() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.FLOAT;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = (PrestoConstant.PrestoFloatConstant) PrestoConstant
                .createFloatConstant(prestoSchema_PrestoCompositeDataType0, 1.0);
        assertEquals(1.0, prestoConstant_PrestoFloatConstant0.getValue(), 0.01);
    }

    @Test
    public void test066() throws Throwable {
        PrestoConstant.PrestoTextConstant prestoConstant_PrestoTextConstant0 = new PrestoConstant.PrestoTextConstant("",
                10);
        String string0 = prestoConstant_PrestoTextConstant0.getValue();
        assertEquals("", string0);
    }

    @Test
    public void test067() throws Throwable {
        PrestoConstant.PrestoTextConstant prestoConstant_PrestoTextConstant0 = new PrestoConstant.PrestoTextConstant(
                "Z85 2>pW2J[%=:");
        String string0 = prestoConstant_PrestoTextConstant0.toString();
        assertEquals("'Z85 2>pW2J[%=:'", string0);
    }

    @Test
    public void test068() throws Throwable {
        PrestoConstant.PrestoIntConstant prestoConstant_PrestoIntConstant0 = new PrestoConstant.PrestoIntConstant(0L);
        String string0 = prestoConstant_PrestoIntConstant0.toString();
        assertEquals("0", string0);
    }

    @Test
    public void test069() throws Throwable {
        PrestoConstant.PrestoIntConstant prestoConstant_PrestoIntConstant0 = new PrestoConstant.PrestoIntConstant(
                2750L);
        long long0 = prestoConstant_PrestoIntConstant0.getValue();
        assertEquals(2750L, long0);
    }

    @Test
    public void test070() throws Throwable {
        PrestoConstant.PrestoIntConstant prestoConstant_PrestoIntConstant0 = new PrestoConstant.PrestoIntConstant(2L);
        boolean boolean0 = prestoConstant_PrestoIntConstant0.isInt();
        assertTrue(boolean0);
        assertEquals(2L, prestoConstant_PrestoIntConstant0.getValue());
    }

    @Test
    public void test071() throws Throwable {
        PrestoConstant.PrestoTimeConstant prestoConstant_PrestoTimeConstant0 = new PrestoConstant.PrestoTimeConstant(
                3265L);
        String string0 = prestoConstant_PrestoTimeConstant0.toString();
        assertEquals("TIME '00:00:03.265'", string0);
    }

    @Test
    public void test072() throws Throwable {
        PrestoConstant.PrestoTimeConstant prestoConstant_PrestoTimeConstant0 = new PrestoConstant.PrestoTimeConstant(
                (-9223372036854775808L));
        String string0 = prestoConstant_PrestoTimeConstant0.getValue();
        assertEquals("16:47:04.192", string0);
    }

    @Test
    public void test073() throws Throwable {
        PrestoConstant.PrestoTimeWithTimeZoneConstant prestoConstant_PrestoTimeWithTimeZoneConstant0 = new PrestoConstant.PrestoTimeWithTimeZoneConstant(
                0L);
        String string0 = prestoConstant_PrestoTimeWithTimeZoneConstant0.getValue();
        assertEquals("00:00:00.000", string0);
    }

    @Test
    public void test074() throws Throwable {
        PrestoConstant.PrestoTimeWithTimeZoneConstant prestoConstant_PrestoTimeWithTimeZoneConstant0 = new PrestoConstant.PrestoTimeWithTimeZoneConstant(
                (-1L));
        String string0 = prestoConstant_PrestoTimeWithTimeZoneConstant0.toString();
        assertEquals("TIME '23:59:59.999 Africa/Abidjan'", string0);
    }

    @Test
    public void test075() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIME_WITH_TIME_ZONE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoTimeWithTimeZoneConstant prestoConstant_PrestoTimeWithTimeZoneConstant0 = (PrestoConstant.PrestoTimeWithTimeZoneConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        PrestoConstant.PrestoNullConstant prestoConstant_PrestoNullConstant0 = (PrestoConstant.PrestoNullConstant) PrestoConstant
                .createNullConstant();
        List<PrestoExpression> list0 = List.of((PrestoExpression) prestoConstant_PrestoNullConstant0,
                (PrestoExpression) prestoConstant_PrestoNullConstant0,
                (PrestoExpression) prestoConstant_PrestoNullConstant0,
                (PrestoExpression) prestoConstant_PrestoTimeWithTimeZoneConstant0,
                (PrestoExpression) prestoConstant_PrestoNullConstant0,
                (PrestoExpression) prestoConstant_PrestoTimeWithTimeZoneConstant0,
                (PrestoExpression) prestoConstant_PrestoNullConstant0,
                (PrestoExpression) prestoConstant_PrestoNullConstant0);
        PrestoConstant.PrestoArrayConstant prestoConstant_PrestoArrayConstant0 = new PrestoConstant.PrestoArrayConstant(
                list0);
        boolean boolean0 = prestoConstant_PrestoArrayConstant0.isArray();
        assertTrue(boolean0);
        assertEquals("00:00:00.000", prestoConstant_PrestoTimeWithTimeZoneConstant0.getValue());
    }

    @Test
    public void test076() throws Throwable {
        LinkedList<PrestoExpression> linkedList0 = new LinkedList<PrestoExpression>();
        PrestoConstant.PrestoArrayConstant prestoConstant_PrestoArrayConstant0 = new PrestoConstant.PrestoArrayConstant(
                linkedList0);
        String string0 = prestoConstant_PrestoArrayConstant0.toString();
        assertEquals("ARRAY[]", string0);
    }

    @Test
    public void test077() throws Throwable {
        PrestoConstant.PrestoDateConstant prestoConstant_PrestoDateConstant0 = new PrestoConstant.PrestoDateConstant(
                2417L);
        String string0 = prestoConstant_PrestoDateConstant0.getValue();
        assertEquals("1970-01-01", string0);
    }

    @Test
    public void test078() throws Throwable {
        PrestoConstant.PrestoDateConstant prestoConstant_PrestoDateConstant0 = new PrestoConstant.PrestoDateConstant(
                2417L);
        String string0 = prestoConstant_PrestoDateConstant0.toString();
        assertEquals("DATE '1970-01-01'", string0);
    }

    @Test
    public void test079() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                true);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.asBoolean();
        assertTrue(boolean0);
    }

    @Test
    public void test080() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                true);
        String string0 = prestoConstant_PrestoBooleanConstant0.toString();
        assertEquals("true", string0);
    }

    @Test
    public void test081() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                false);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.isBoolean();
        assertTrue(boolean0);
        assertEquals("false", prestoConstant_PrestoBooleanConstant0.toString());
    }

    @Test
    public void test082() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                true);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.getValue();
        assertTrue(boolean0);
    }

    @Test
    public void test083() throws Throwable {
        PrestoConstant.PrestoTimestampConstant prestoConstant_PrestoTimestampConstant0 = new PrestoConstant.PrestoTimestampConstant(
                1L);
        String string0 = prestoConstant_PrestoTimestampConstant0.getValue();
        assertEquals("1970-01-01 00:00:00", string0);
    }

    @Test
    public void test084() throws Throwable {
        PrestoConstant.PrestoTimestampConstant prestoConstant_PrestoTimestampConstant0 = new PrestoConstant.PrestoTimestampConstant(
                5L);
        String string0 = prestoConstant_PrestoTimestampConstant0.toString();
        assertEquals("TIMESTAMP '1970-01-01 00:00:00'", string0);
    }

    @Test
    public void test085() throws Throwable {
        PrestoConstant.PrestoTimestampWithTimezoneConstant prestoConstant_PrestoTimestampWithTimezoneConstant0 = new PrestoConstant.PrestoTimestampWithTimezoneConstant(
                3265L);
        String string0 = prestoConstant_PrestoTimestampWithTimezoneConstant0.toString();
        assertEquals("TIMESTAMP '1970-01-01 00:00:03 Africa/Abidjan'", string0);
    }

    @Test
    public void test086() throws Throwable {
        PrestoConstant.PrestoTimestampWithTimezoneConstant prestoConstant_PrestoTimestampWithTimezoneConstant0 = new PrestoConstant.PrestoTimestampWithTimezoneConstant(
                2189L);
        String string0 = prestoConstant_PrestoTimestampWithTimezoneConstant0.getValue();
        assertEquals("1970-01-01 00:00:02", string0);
    }

    @Test
    public void test087() throws Throwable {
        PrestoConstant.PrestoNullConstant prestoConstant_PrestoNullConstant0 = new PrestoConstant.PrestoNullConstant();
        String string0 = prestoConstant_PrestoNullConstant0.toString();
        assertEquals("NULL", string0);
    }

    @Test
    public void test088() throws Throwable {
        PrestoConstant.PrestoNullConstant prestoConstant_PrestoNullConstant0 = (PrestoConstant.PrestoNullConstant) PrestoConstant
                .createNullConstant();
        boolean boolean0 = prestoConstant_PrestoNullConstant0.isNull();
        assertTrue(boolean0);
    }

    @Test
    public void test089() throws Throwable {
        PrestoConstant.PrestoVarbinaryConstant prestoConstant_PrestoVarbinaryConstant0 = new PrestoConstant.PrestoVarbinaryConstant(
                "|p\"$6[vndp");
        String string0 = prestoConstant_PrestoVarbinaryConstant0.toString();
        assertEquals("CAST ('|p\"$6[vndp' AS VARBINARY)", string0);
    }

    @Test
    public void test090() throws Throwable {
        PrestoConstant.PrestoVarbinaryConstant prestoConstant_PrestoVarbinaryConstant0 = new PrestoConstant.PrestoVarbinaryConstant(
                "INTERVAL YEAR TO MONTH");
        String string0 = prestoConstant_PrestoVarbinaryConstant0.getValue();
        assertEquals("INTERVAL YEAR TO MONTH", string0);
    }

    @Test
    public void test091() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIMESTAMP;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoTimestampConstant prestoConstant_PrestoTimestampConstant0 = (PrestoConstant.PrestoTimestampConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("1970-01-01 00:00:00", prestoConstant_PrestoTimestampConstant0.getValue());
    }

    @Test
    public void test092() throws Throwable {
        PrestoConstant.PrestoTimestampConstant prestoConstant_PrestoTimestampConstant0 = new PrestoConstant.PrestoTimestampConstant(
                5L);
        // Undeclared exception!
        try {
            prestoConstant_PrestoTimestampConstant0.asBoolean();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // sqlancer.presto.ast.PrestoConstant$PrestoTimestampConstant@0000000001
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test093() throws Throwable {
        PrestoConstant.PrestoVarbinaryConstant prestoConstant_PrestoVarbinaryConstant0 = (PrestoConstant.PrestoVarbinaryConstant) PrestoConstant
                .createVarbinaryConstant("01");
        assertFalse(prestoConstant_PrestoVarbinaryConstant0.isBoolean());
    }

    @Test
    public void test094() throws Throwable {
        PrestoConstant.PrestoTextConstant prestoConstant_PrestoTextConstant0 = new PrestoConstant.PrestoTextConstant(
                "Z85 2>pW2J[%=:");
        // Undeclared exception!
        try {
            prestoConstant_PrestoTextConstant0.asString();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // sqlancer.presto.ast.PrestoConstant$PrestoTextConstant@0000000001
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test095() throws Throwable {
        PrestoConstant.createTimezoneConstant();
        PrestoConstant.createTimestampWithTimeZoneConstant(0L);
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        // Undeclared exception!
        try {
            PrestoConstant.createFloatConstant(prestoSchema_PrestoCompositeDataType0, (double) 14);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test096() throws Throwable {
        PrestoConstant.PrestoBooleanConstant prestoConstant_PrestoBooleanConstant0 = new PrestoConstant.PrestoBooleanConstant(
                false);
        boolean boolean0 = prestoConstant_PrestoBooleanConstant0.isInt();
        assertFalse(boolean0);
        assertEquals("false", prestoConstant_PrestoBooleanConstant0.toString());
    }

    @Test
    public void test097() throws Throwable {
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = (PrestoConstant.PrestoJsonConstant) PrestoConstant
                .createJsonConstant();
        // Undeclared exception!
        try {
            prestoConstant_PrestoJsonConstant0.asInt();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // sqlancer.presto.ast.PrestoConstant$PrestoJsonConstant@0000000001
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test098() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIME;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoTimeConstant prestoConstant_PrestoTimeConstant0 = (PrestoConstant.PrestoTimeConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("00:00:00.000", prestoConstant_PrestoTimeConstant0.getValue());
    }

    @Test
    public void test099() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIME_WITH_TIME_ZONE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoTimeWithTimeZoneConstant prestoConstant_PrestoTimeWithTimeZoneConstant0 = (PrestoConstant.PrestoTimeWithTimeZoneConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        boolean boolean0 = prestoConstant_PrestoTimeWithTimeZoneConstant0.isArray();
        assertFalse(boolean0);
        assertEquals("00:00:00.000", prestoConstant_PrestoTimeWithTimeZoneConstant0.getValue());
    }

    @Test
    public void test100() throws Throwable {
        PrestoConstant.PrestoNullConstant prestoConstant_PrestoNullConstant0 = (PrestoConstant.PrestoNullConstant) PrestoConstant
                .createNullConstant();
        boolean boolean0 = prestoConstant_PrestoNullConstant0.isFloat();
        assertFalse(boolean0);
    }

    @Test
    public void test101() throws Throwable {
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = new PrestoConstant.PrestoIntervalDayToSecondConstant();
        boolean boolean0 = prestoConstant_PrestoIntervalDayToSecondConstant0.isString();
        assertEquals("01", prestoConstant_PrestoIntervalDayToSecondConstant0.getValue());
        assertFalse(boolean0);
    }

    @Test
    public void test102() throws Throwable {
        PrestoConstant.PrestoTextConstant prestoConstant_PrestoTextConstant0 = (PrestoConstant.PrestoTextConstant) PrestoConstant
                .createStringConstant("", 359);
        assertFalse(prestoConstant_PrestoTextConstant0.isBoolean());
    }

    @Test
    public void test103() throws Throwable {
        PrestoConstant.PrestoTextConstant prestoConstant_PrestoTextConstant0 = (PrestoConstant.PrestoTextConstant) PrestoConstant
                .createStringConstant("1970");
        assertFalse(prestoConstant_PrestoTextConstant0.isString());
    }

    @Test
    public void test104() throws Throwable {
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
        boolean boolean0 = prestoConstant_PrestoJsonConstant0.isNull();
        assertFalse(boolean0);
    }

    @Test
    public void test105() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.DECIMAL;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        // Undeclared exception!
        try {
            PrestoConstant.generateConstant(prestoSchema_PrestoCompositeDataType0, true);
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test106() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        boolean boolean0 = prestoConstant_PrestoIntervalYearToMonthConstant0.isBoolean();
        assertFalse(boolean0);
        assertEquals("1970", prestoConstant_PrestoIntervalYearToMonthConstant0.getValue());
    }

    @Test
    public void test107() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        // Undeclared exception!
        try {
            prestoConstant_PrestoIntervalYearToMonthConstant0.asFloat();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // sqlancer.presto.ast.PrestoConstant$PrestoIntervalYearToMonthConstant@0000000001
            //
            verifyException("sqlancer.presto.ast.PrestoConstant", e);
        }
    }

    @Test
    public void test108() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.FLOAT;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = (PrestoConstant.PrestoFloatConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, true);
        assertEquals("0.0", prestoConstant_PrestoFloatConstant0.toString());
    }

    @Test
    public void test109() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.DATE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoConstant.PrestoDateConstant prestoConstant_PrestoDateConstant0 = (PrestoConstant.PrestoDateConstant) PrestoConstant
                .generateConstant(prestoSchema_PrestoCompositeDataType0, false);
        assertEquals("1970-01-01", prestoConstant_PrestoDateConstant0.getValue());
    }

    @Test
    public void test110() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                (-3254.87159641872));
        double double0 = prestoConstant_PrestoFloatConstant0.getValue();
        assertEquals((-3254.87159641872), double0, 0.01);
    }

    @Test
    public void test111() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                (-1651L));
        double double0 = prestoConstant_PrestoFloatConstant0.asFloat();
        assertEquals((-1651.0), double0, 0.01);
    }

    @Test
    public void test112() throws Throwable {
        PrestoConstant.PrestoFloatConstant prestoConstant_PrestoFloatConstant0 = new PrestoConstant.PrestoFloatConstant(
                148L);
        boolean boolean0 = prestoConstant_PrestoFloatConstant0.isFloat();
        assertEquals(148.0, prestoConstant_PrestoFloatConstant0.asFloat(), 0.01);
        assertTrue(boolean0);
    }

    @Test
    public void test113() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                (-228.0157130735299));
        double double0 = prestoConstant_PrestoDecimalConstant0.getValue();
        assertEquals((-228.0157130735299), double0, 0.01);
    }

    @Test
    public void test114() throws Throwable {
        PrestoConstant.PrestoDecimalConstant prestoConstant_PrestoDecimalConstant0 = new PrestoConstant.PrestoDecimalConstant(
                (-710.3));
        double double0 = prestoConstant_PrestoDecimalConstant0.asFloat();
        assertEquals((-710.3), double0, 0.01);
    }

    @Test
    public void test115() throws Throwable {
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = new PrestoConstant.PrestoIntervalDayToSecondConstant();
        String string0 = prestoConstant_PrestoIntervalDayToSecondConstant0.getValue();
        assertEquals("01", string0);
    }

    @Test
    public void test116() throws Throwable {
        PrestoConstant.PrestoIntervalDayToSecondConstant prestoConstant_PrestoIntervalDayToSecondConstant0 = new PrestoConstant.PrestoIntervalDayToSecondConstant();
        String string0 = prestoConstant_PrestoIntervalDayToSecondConstant0.toString();
        assertEquals("INTERVAL '01' DAY", string0);
    }

    @Test
    public void test117() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        String string0 = prestoConstant_PrestoIntervalYearToMonthConstant0.getValue();
        assertEquals("1970", string0);
    }

    @Test
    public void test118() throws Throwable {
        PrestoConstant.PrestoIntervalYearToMonthConstant prestoConstant_PrestoIntervalYearToMonthConstant0 = new PrestoConstant.PrestoIntervalYearToMonthConstant();
        String string0 = prestoConstant_PrestoIntervalYearToMonthConstant0.toString();
        assertEquals("INTERVAL '1970' YEAR", string0);
    }

    @Test
    public void test119() throws Throwable {
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = (PrestoConstant.PrestoJsonConstant) PrestoConstant
                .createJsonConstant();
        String string0 = prestoConstant_PrestoJsonConstant0.toString();
        assertEquals("JSON '{\"employee\":{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}}'", string0);
    }

    @Test
    public void test120() throws Throwable {
        PrestoConstant.PrestoJsonConstant prestoConstant_PrestoJsonConstant0 = new PrestoConstant.PrestoJsonConstant();
        String string0 = prestoConstant_PrestoJsonConstant0.getValue();
        assertEquals("{\"employee\":{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}}", string0);
    }
}
