/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 22:27:30 GMT 2025
 */

package sqlancer.evosuite.presto.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.presto.ast.PrestoDateFunction;
import sqlancer.presto.PrestoSchema;

public class PrestoDateFunction_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        PrestoDateFunction[] prestoDateFunctionArray0 = PrestoDateFunction.values();
        assertEquals(28, prestoDateFunctionArray0.length);
    }

    @Test
    public void test01() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.valueOf("NOW");
        assertEquals(0, prestoDateFunction0.getNumberOfArguments());
    }

    @Test
    public void test02() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.valueOf("FROM_UNIXTIME");
        assertEquals("from_unixtime", prestoDateFunction0.getFunctionName());
    }

    @Test
    public void test03() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.CURRENT_TIME_NA;
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.DATE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        PrestoSchema.PrestoDataType[] prestoSchema_PrestoDataTypeArray0 = prestoDateFunction0
                .getArgumentTypes(prestoSchema_PrestoCompositeDataType0);
        assertEquals(0, prestoSchema_PrestoDataTypeArray0.length);
    }

    @Test
    public void test04() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.LAST_DAY_OF_MONTH;
        // Undeclared exception!
        try {
            prestoDateFunction0.isCompatibleWithReturnType((PrestoSchema.PrestoCompositeDataType) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.presto.ast.PrestoDateFunction", e);
        }
    }

    @Test
    public void test05() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.LAST_DAY_OF_MONTH;
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.DATE;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .fromDataType(prestoSchema_PrestoDataType0);
        boolean boolean0 = prestoDateFunction0.isCompatibleWithReturnType(prestoSchema_PrestoCompositeDataType0);
        assertTrue(boolean0);
    }

    @Test
    public void test06() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.CURRENT_DATE_NA;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        boolean boolean0 = prestoDateFunction0.isCompatibleWithReturnType(prestoSchema_PrestoCompositeDataType0);
        assertFalse(boolean0);
    }

    @Test
    public void test07() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.CURRENT_TIME_NA;
        boolean boolean0 = prestoDateFunction0.isStandardFunction();
        assertFalse(boolean0);
    }

    @Test
    public void test08() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.CURRENT_DATE_NA;
        boolean boolean0 = prestoDateFunction0.isStandardFunction();
        assertFalse(boolean0);
    }

    @Test
    public void test09() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.LOCALTIME_NA;
        boolean boolean0 = prestoDateFunction0.isStandardFunction();
        assertFalse(boolean0);
    }

    @Test
    public void test10() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.CURRENT_TIMESTAMP_NA;
        boolean boolean0 = prestoDateFunction0.isStandardFunction();
        assertFalse(boolean0);
    }

    @Test
    public void test11() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.LOCALTIMESTAMP_NA;
        boolean boolean0 = prestoDateFunction0.isStandardFunction();
        assertFalse(boolean0);
    }

    @Test
    public void test12() throws Throwable {
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = PrestoSchema.PrestoCompositeDataType
                .getRandomWithoutNull();
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.TO_MILLISECONDS_2;
        PrestoSchema.PrestoDataType[] prestoSchema_PrestoDataTypeArray0 = prestoDateFunction0
                .getArgumentTypes(prestoSchema_PrestoCompositeDataType0);
        assertEquals(1, prestoSchema_PrestoDataTypeArray0.length);
    }

    @Test
    public void test13() throws Throwable {
        PrestoDateFunction prestoDateFunction0 = PrestoDateFunction.LOCALTIME_NA;
        String string0 = prestoDateFunction0.getFunctionName();
        assertEquals("localtime", string0);
    }
}
