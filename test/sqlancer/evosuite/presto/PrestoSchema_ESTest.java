/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 23:38:28 GMT 2025
 */

package sqlancer.evosuite.presto;

import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.presto.PrestoSchema;

public class PrestoSchema_ESTest {

    @Test
    public void test00() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.CHAR;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, (-1783518776), (-1783518776));
        int int0 = prestoSchema_PrestoCompositeDataType0.getScale();
        assertEquals((-1783518776), int0);
    }

    @Test
    public void test01() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.CHAR;
        PrestoSchema.PrestoCompositeDataType prestoSchema_PrestoCompositeDataType0 = new PrestoSchema.PrestoCompositeDataType(
                prestoSchema_PrestoDataType0, (-1783518776), (-1783518776));
        int int0 = prestoSchema_PrestoCompositeDataType0.getSize();
        assertEquals((-1783518776), int0);
    }

    @Test
    public void test02() throws Throwable {
        PrestoSchema.PrestoDataType prestoSchema_PrestoDataType0 = PrestoSchema.PrestoDataType.TIME_WITH_TIME_ZONE;
        boolean boolean0 = prestoSchema_PrestoDataType0.isOrderable();
        assertTrue(boolean0);
    }

    @Test
    public void test03() throws Throwable {
        List<PrestoSchema.PrestoDataType> list0 = PrestoSchema.PrestoDataType.getOrderableTypes();
        assertEquals(15, list0.size());
    }
}
/*
 * Test disabled because it contains mock() function calls that are not implemented
 *
 * @Test public void test04() throws Throwable { PrestoSchema.PrestoTable prestoSchema_PrestoTable0 =
 * mock(PrestoSchema.PrestoTable.class, new ViolatedAssumptionAnswer()); doReturn((List)
 * null).when(prestoSchema_PrestoTable0).getColumns(); PrestoSchema.PrestoTable prestoSchema_PrestoTable1 =
 * mock(PrestoSchema.PrestoTable.class, new ViolatedAssumptionAnswer()); List<PrestoSchema.PrestoTable> list0 =
 * List.of(prestoSchema_PrestoTable0, prestoSchema_PrestoTable0, prestoSchema_PrestoTable0, prestoSchema_PrestoTable0,
 * prestoSchema_PrestoTable1, prestoSchema_PrestoTable0, prestoSchema_PrestoTable1, prestoSchema_PrestoTable1);
 * PrestoSchema prestoSchema0 = new PrestoSchema(list0); // Undeclared exception! try {
 * prestoSchema0.getRandomTableNonEmptyTables(); fail("Expecting exception: NullPointerException");
 *
 * } catch (NullPointerException e) { // // no message in exception (getMessage() returned null) //
 * verifyException("java.util.ArrayList", e); } }
 */
