/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:37:54 GMT 2025
 */

package sqlancer.evosuite.hsqldb.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.hsqldb.ast.HSQLDBConstant;

public class HSQLDBConstant_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        HSQLDBConstant.HSQLDBBinaryConstant hSQLDBConstant_HSQLDBBinaryConstant0 = new HSQLDBConstant.HSQLDBBinaryConstant(
                90, 90);
        assertEquals("5a", hSQLDBConstant_HSQLDBBinaryConstant0.getValue());
    }

    @Test
    public void test01() throws Throwable {
        // Undeclared exception!
        try {
            HSQLDBConstant.createStringConstant("jLK0->0=,:wTOGcGg", (-2085));
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch (StringIndexOutOfBoundsException e) {
        }
    }

    @Test
    public void test02() throws Throwable {
        // Undeclared exception!
        try {
            HSQLDBConstant.createStringConstant((String) null, (-372));
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.hsqldb.ast.HSQLDBConstant$HSQLDBTextConstant", e);
        }
    }

    @Test
    public void test03() throws Throwable {
        // Undeclared exception!
        try {
            HSQLDBConstant.createBinaryConstant(0L, (-3355));
            fail("Expecting exception: StringIndexOutOfBoundsException");

        } catch (StringIndexOutOfBoundsException e) {
            //
            // start 0, end -3355, length 2
            //
            verifyException("java.lang.AbstractStringBuilder", e);
        }
    }

    @Test
    public void test04() throws Throwable {
        HSQLDBConstant.HSQLDBBinaryConstant hSQLDBConstant_HSQLDBBinaryConstant0 = new HSQLDBConstant.HSQLDBBinaryConstant(
                0L, 1);
        assertEquals("0", hSQLDBConstant_HSQLDBBinaryConstant0.getValue());
    }

    @Test
    public void test05() throws Throwable {
        HSQLDBConstant.HSQLDBBinaryConstant hSQLDBConstant_HSQLDBBinaryConstant0 = new HSQLDBConstant.HSQLDBBinaryConstant(
                2576, 2576);
        assertEquals("a10", hSQLDBConstant_HSQLDBBinaryConstant0.getValue());
    }

    @Test
    public void test06() throws Throwable {
        HSQLDBConstant.HSQLDBTextConstant hSQLDBConstant_HSQLDBTextConstant0 = new HSQLDBConstant.HSQLDBTextConstant("",
                0);
        assertEquals("", hSQLDBConstant_HSQLDBTextConstant0.getValue());
    }

    @Test
    public void test07() throws Throwable {
        HSQLDBConstant.HSQLDBNullConstant hSQLDBConstant_HSQLDBNullConstant0 = new HSQLDBConstant.HSQLDBNullConstant();
        assertEquals("Null", hSQLDBConstant_HSQLDBNullConstant0.toString());
    }

    @Test
    public void test08() throws Throwable {
        HSQLDBConstant.HSQLDBTimestampConstant hSQLDBConstant_HSQLDBTimestampConstant0 = new HSQLDBConstant.HSQLDBTimestampConstant(
                0L);
        assertEquals("1970-01-01 00:00:00", hSQLDBConstant_HSQLDBTimestampConstant0.getValue());
    }

    @Test
    public void test09() throws Throwable {
        HSQLDBConstant.HSQLDBDoubleConstant hSQLDBConstant_HSQLDBDoubleConstant0 = new HSQLDBConstant.HSQLDBDoubleConstant(
                3149.0);
        String string0 = hSQLDBConstant_HSQLDBDoubleConstant0.toString();
        assertEquals("3149.0", string0);
    }

    @Test
    public void test10() throws Throwable {
        HSQLDBConstant.HSQLDBDoubleConstant hSQLDBConstant_HSQLDBDoubleConstant0 = new HSQLDBConstant.HSQLDBDoubleConstant(
                Double.POSITIVE_INFINITY);
        String string0 = hSQLDBConstant_HSQLDBDoubleConstant0.toString();
        assertEquals("1.0e1/0.0e1", string0);
    }

    @Test
    public void test11() throws Throwable {
        HSQLDBConstant.HSQLDBTimeConstant hSQLDBConstant_HSQLDBTimeConstant0 = new HSQLDBConstant.HSQLDBTimeConstant(
                0L);
        String string0 = hSQLDBConstant_HSQLDBTimeConstant0.getValue();
        assertEquals("00:00:00", string0);
    }

    @Test
    public void test12() throws Throwable {
        HSQLDBConstant.HSQLDBTimeConstant hSQLDBConstant_HSQLDBTimeConstant0 = new HSQLDBConstant.HSQLDBTimeConstant(
                39L);
        String string0 = hSQLDBConstant_HSQLDBTimeConstant0.toString();
        assertEquals("TIME '00:00:00'", string0);
    }

    @Test
    public void test13() throws Throwable {
        HSQLDBConstant.HSQLDBIntConstant hSQLDBConstant_HSQLDBIntConstant0 = new HSQLDBConstant.HSQLDBIntConstant(234L);
        long long0 = hSQLDBConstant_HSQLDBIntConstant0.getValue();
        assertEquals(234L, long0);
    }

    @Test
    public void test14() throws Throwable {
        HSQLDBConstant.HSQLDBIntConstant hSQLDBConstant_HSQLDBIntConstant0 = new HSQLDBConstant.HSQLDBIntConstant(
                (-35L));
        String string0 = hSQLDBConstant_HSQLDBIntConstant0.toString();
        assertEquals("-35", string0);
    }

    @Test
    public void test15() throws Throwable {
        HSQLDBConstant.HSQLDBIntConstant hSQLDBConstant_HSQLDBIntConstant0 = (HSQLDBConstant.HSQLDBIntConstant) HSQLDBConstant
                .createIntConstant((-64L));
        assertEquals("-64", hSQLDBConstant_HSQLDBIntConstant0.toString());
    }

    @Test
    public void test16() throws Throwable {
        HSQLDBConstant.HSQLDBDateConstant hSQLDBConstant_HSQLDBDateConstant0 = (HSQLDBConstant.HSQLDBDateConstant) HSQLDBConstant
                .createDateConstant((-447L));
        assertEquals("1969-12-31", hSQLDBConstant_HSQLDBDateConstant0.getValue());
    }

    @Test
    public void test17() throws Throwable {
        HSQLDBConstant.HSQLDBTimeConstant hSQLDBConstant_HSQLDBTimeConstant0 = (HSQLDBConstant.HSQLDBTimeConstant) HSQLDBConstant
                .createTimeConstant(382, 3258);
        assertEquals("00:00:00", hSQLDBConstant_HSQLDBTimeConstant0.getValue());
    }

    @Test
    public void test18() throws Throwable {
        HSQLDBConstant.HSQLDBNullConstant hSQLDBConstant_HSQLDBNullConstant0 = (HSQLDBConstant.HSQLDBNullConstant) HSQLDBConstant
                .createNullConstant();
        String string0 = hSQLDBConstant_HSQLDBNullConstant0.toString();
        assertEquals("Null", string0);
    }

    @Test
    public void test19() throws Throwable {
        HSQLDBConstant.HSQLDBDoubleConstant hSQLDBConstant_HSQLDBDoubleConstant0 = (HSQLDBConstant.HSQLDBDoubleConstant) HSQLDBConstant
                .createFloatConstant(684.0);
        assertEquals(684.0, hSQLDBConstant_HSQLDBDoubleConstant0.getValue(), 0.01);
    }

    @Test
    public void test20() throws Throwable {
        HSQLDBConstant.HSQLDBDateConstant hSQLDBConstant_HSQLDBDateConstant0 = new HSQLDBConstant.HSQLDBDateConstant(
                (-1L));
        String string0 = hSQLDBConstant_HSQLDBDateConstant0.toString();
        assertEquals("DATE '1969-12-31'", string0);
    }

    @Test
    public void test21() throws Throwable {
        HSQLDBConstant.HSQLDBDateConstant hSQLDBConstant_HSQLDBDateConstant0 = new HSQLDBConstant.HSQLDBDateConstant(
                (-1L));
        String string0 = hSQLDBConstant_HSQLDBDateConstant0.getValue();
        assertEquals("1969-12-31", string0);
    }

    @Test
    public void test22() throws Throwable {
        HSQLDBConstant.HSQLDBTimestampConstant hSQLDBConstant_HSQLDBTimestampConstant0 = (HSQLDBConstant.HSQLDBTimestampConstant) HSQLDBConstant
                .createTimestampConstant(0L, 3042);
        String string0 = hSQLDBConstant_HSQLDBTimestampConstant0.toString();
        assertEquals("TIMESTAMP '1970-01-01 00:00:00'", string0);
    }

    @Test
    public void test23() throws Throwable {
        HSQLDBConstant.HSQLDBTimestampConstant hSQLDBConstant_HSQLDBTimestampConstant0 = (HSQLDBConstant.HSQLDBTimestampConstant) HSQLDBConstant
                .createTimestampConstant(0L, (-946));
        String string0 = hSQLDBConstant_HSQLDBTimestampConstant0.getValue();
        assertEquals("1970-01-01 00:00:00", string0);
    }

    @Test
    public void test24() throws Throwable {
        HSQLDBConstant.HSQLDBBooleanConstant hSQLDBConstant_HSQLDBBooleanConstant0 = new HSQLDBConstant.HSQLDBBooleanConstant(
                false);
        boolean boolean0 = hSQLDBConstant_HSQLDBBooleanConstant0.getValue();
        assertFalse(boolean0);
    }

    @Test
    public void test25() throws Throwable {
        HSQLDBConstant.HSQLDBBooleanConstant hSQLDBConstant_HSQLDBBooleanConstant0 = new HSQLDBConstant.HSQLDBBooleanConstant(
                true);
        String string0 = hSQLDBConstant_HSQLDBBooleanConstant0.toString();
        assertEquals("true", string0);
    }

    @Test
    public void test26() throws Throwable {
        HSQLDBConstant.HSQLDBBooleanConstant hSQLDBConstant_HSQLDBBooleanConstant0 = (HSQLDBConstant.HSQLDBBooleanConstant) HSQLDBConstant
                .createBooleanConstant(false);
        assertFalse(hSQLDBConstant_HSQLDBBooleanConstant0.getValue());
    }

    @Test
    public void test27() throws Throwable {
        HSQLDBConstant.HSQLDBTextConstant hSQLDBConstant_HSQLDBTextConstant0 = (HSQLDBConstant.HSQLDBTextConstant) HSQLDBConstant
                .createStringConstant("|ON3bj)", 0);
        assertEquals("", hSQLDBConstant_HSQLDBTextConstant0.getValue());
    }

    @Test
    public void test28() throws Throwable {
        HSQLDBConstant.HSQLDBTextConstant hSQLDBConstant_HSQLDBTextConstant0 = new HSQLDBConstant.HSQLDBTextConstant(
                "3149.0");
        String string0 = hSQLDBConstant_HSQLDBTextConstant0.getValue();
        assertEquals("3149.0", string0);
    }

    @Test
    public void test29() throws Throwable {
        HSQLDBConstant.HSQLDBTextConstant hSQLDBConstant_HSQLDBTextConstant0 = new HSQLDBConstant.HSQLDBTextConstant(
                "H");
        String string0 = hSQLDBConstant_HSQLDBTextConstant0.toString();
        assertEquals("'H'", string0);
    }

    @Test
    public void test30() throws Throwable {
        HSQLDBConstant.HSQLDBBinaryConstant hSQLDBConstant_HSQLDBBinaryConstant0 = (HSQLDBConstant.HSQLDBBinaryConstant) HSQLDBConstant
                .createBinaryConstant((-2928L), 1);
        String string0 = hSQLDBConstant_HSQLDBBinaryConstant0.toString();
        assertEquals("X'f'", string0);
    }

    @Test
    public void test31() throws Throwable {
        HSQLDBConstant.HSQLDBBinaryConstant hSQLDBConstant_HSQLDBBinaryConstant0 = (HSQLDBConstant.HSQLDBBinaryConstant) HSQLDBConstant
                .createBinaryConstant(0L, 0);
        String string0 = hSQLDBConstant_HSQLDBBinaryConstant0.getValue();
        assertEquals("", string0);
    }

    @Test
    public void test32() throws Throwable {
        HSQLDBConstant.HSQLDBDoubleConstant hSQLDBConstant_HSQLDBDoubleConstant0 = new HSQLDBConstant.HSQLDBDoubleConstant(
                3149.0);
        double double0 = hSQLDBConstant_HSQLDBDoubleConstant0.getValue();
        assertEquals(3149.0, double0, 0.01);
    }

    @Test
    public void test33() throws Throwable {
        HSQLDBConstant.HSQLDBDoubleConstant hSQLDBConstant_HSQLDBDoubleConstant0 = new HSQLDBConstant.HSQLDBDoubleConstant(
                Double.NEGATIVE_INFINITY);
        String string0 = hSQLDBConstant_HSQLDBDoubleConstant0.toString();
        assertEquals("-1.0e1/0.0e1", string0);
    }
}
