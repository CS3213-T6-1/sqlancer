/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:03:13 GMT 2025
 */

package sqlancer.evosuite.oceanbase.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.oceanbase.ast.OceanBaseAggregate;
import sqlancer.oceanbase.ast.OceanBaseBinaryComparisonOperation;
import sqlancer.oceanbase.ast.OceanBaseBinaryLogicalOperation;
import sqlancer.oceanbase.ast.OceanBaseCastOperation;
import sqlancer.oceanbase.ast.OceanBaseColumnReference;
import sqlancer.oceanbase.ast.OceanBaseComputableFunction;
import sqlancer.oceanbase.ast.OceanBaseConstant;
import sqlancer.oceanbase.ast.OceanBaseExists;
import sqlancer.oceanbase.ast.OceanBaseExpression;
import sqlancer.oceanbase.ast.OceanBaseOrderByTerm;
import sqlancer.oceanbase.ast.OceanBaseUnaryPostfixOperation;
import sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation;
import sqlancer.oceanbase.OceanBaseSchema;

public class OceanBaseComputableFunction_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-1L), "");
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant(2788L);
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[7];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[6];
        oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseConstantArray0[1] = oceanBaseConstant0;
        oceanBaseConstantArray0[2] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseConstantArray0[3] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseConstantArray0[4] = oceanBaseConstant0;
        oceanBaseConstantArray0[5] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction_OceanBaseFunction0
                .apply(oceanBaseConstantArray0, oceanBaseExpressionArray0);
        assertEquals("", oceanBaseConstant1.getTextRepresentation());
    }

    @Test
    public void test01() throws Throwable {
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-52L), "");
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[5];
        oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseConstantArray0[1] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        // Undeclared exception!
        try {
            oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseExpressionArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test02() throws Throwable {
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-52L), "");
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[5];
        oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseIntConstant0;
        // Undeclared exception!
        try {
            oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseExpressionArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test03() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[4];
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant(
                "BIT_COUNT");
        OceanBaseConstant oceanBaseConstant0 = oceanBaseConstant_OceanBaseTextConstant0.castAsDouble();
        oceanBaseConstantArray0[1] = oceanBaseConstant0;
        // Undeclared exception!
        try {
            oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test04() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn(
                "BIT_COUNT", oceanBaseSchema_OceanBaseDataType0, false, 4, false);
        OceanBaseColumnReference oceanBaseColumnReference0 = OceanBaseColumnReference
                .create(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseColumnReference0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
        assertEquals("null", oceanBaseConstant0.castAsString());
    }

    @Test
    public void test05() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("");
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
        assertFalse(oceanBaseConstant1.asBooleanNotNull());
    }

    @Test
    public void test06() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseExpression[] oceanBaseExpressionArray1 = oceanBaseComputableFunction0.getArguments();
        assertEquals(0, oceanBaseExpressionArray1.length);
    }

    @Test
    public void test07() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[4];
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createUnsignedIntConstant(0L);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseExists oceanBaseExists0 = new OceanBaseExists(oceanBaseExpressionArray0[0], oceanBaseConstant0);
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseExists0;
        OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0 = OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator.MINUS;
        OceanBaseUnaryPrefixOperation oceanBaseUnaryPrefixOperation0 = new OceanBaseUnaryPrefixOperation(
                oceanBaseExpressionArray0[1], oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0);
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseUnaryPrefixOperation0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation$OceanBaseUnaryPrefixOperator$3", e);
        }
    }

//    @Test
//    public void test08() throws Throwable {
//        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
//        OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin();
//        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseJoin0;
//        // Undeclared exception!
//        try {
//            OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
//            fail("Expecting exception: UnsupportedOperationException");
//
//        } catch (UnsupportedOperationException e) {
//            //
//            // no message in exception (getMessage() returned null)
//            //
//            verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
//        }
//    }

    @Test
    public void test09() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[18];
        OceanBaseOrderByTerm.OceanBaseOrder oceanBaseOrderByTerm_OceanBaseOrder0 = OceanBaseOrderByTerm.OceanBaseOrder.ASC;
        OceanBaseOrderByTerm oceanBaseOrderByTerm0 = new OceanBaseOrderByTerm(oceanBaseConstant_OceanBaseNullConstant0,
                oceanBaseOrderByTerm_OceanBaseOrder0);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseOrderByTerm0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.oceanbase.ast.OceanBaseOrderByTerm@2
            //
        }
    }

    @Test
    public void test10() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseExpression[] oceanBaseExpressionArray1 = new OceanBaseExpression[1];
        oceanBaseExpressionArray1[0] = (OceanBaseExpression) oceanBaseComputableFunction0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray1);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 0 out of bounds for length 0
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction$1", e);
        }
    }

    @Test
    public void test11() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[4];
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                0L, false);
        OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0 = OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator.MINUS;
        OceanBaseUnaryPrefixOperation oceanBaseUnaryPrefixOperation0 = new OceanBaseUnaryPrefixOperation(
                oceanBaseConstant_OceanBaseIntConstant0, oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0);
        OceanBaseExists oceanBaseExists0 = new OceanBaseExists(oceanBaseUnaryPrefixOperation0,
                oceanBaseConstant_OceanBaseIntConstant0);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseExists0,
                oceanBaseCastOperation_CastType0);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseCastOperation0;
        OceanBaseBinaryComparisonOperation.BinaryComparisonOperator oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0 = OceanBaseBinaryComparisonOperation.BinaryComparisonOperator.GREATER_EQUALS;
        OceanBaseBinaryComparisonOperation oceanBaseBinaryComparisonOperation0 = new OceanBaseBinaryComparisonOperation(
                oceanBaseCastOperation0, oceanBaseUnaryPrefixOperation0,
                oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0);
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseBinaryComparisonOperation0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        // Undeclared exception!
        try {
            oceanBaseComputableFunction0.getExpectedValue();
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation$OceanBaseUnaryPrefixOperator$3", e);
        }
    }

//    @Test
//    public void test12() throws Throwable {
//        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
//        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
//        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[4];
//        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
//        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
//        OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin();
//        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseJoin0;
//        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
//                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
//        // Undeclared exception!
//        try {
//            oceanBaseComputableFunction0.getExpectedValue();
//            fail("Expecting exception: UnsupportedOperationException");
//
//        } catch (UnsupportedOperationException e) {
//            //
//            // no message in exception (getMessage() returned null)
//            //
//            verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
//        }
//    }

    @Test
    public void test13() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        // Undeclared exception!
        try {
            oceanBaseComputableFunction0.getExpectedValue();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test14() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseAggregate.OceanBaseAggregateFunction oceanBaseAggregate_OceanBaseAggregateFunction0 = OceanBaseAggregate.OceanBaseAggregateFunction.COUNT;
        OceanBaseAggregate oceanBaseAggregate0 = new OceanBaseAggregate(oceanBaseConstant_OceanBaseNullConstant0,
                oceanBaseAggregate_OceanBaseAggregateFunction0);
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseAggregate0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        // Undeclared exception!
        try {
            oceanBaseComputableFunction0.getExpectedValue();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // PQS not supported for this operator
            //
        }
    }

    @Test
    public void test15() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstantNotAsBoolean(0L);
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseComputableFunction
                .getMostGeneralType(oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant1 = OceanBaseConstant.createStringConstant("3zwND6/Rq`B\".1$");
        OceanBaseExpression[] oceanBaseExpressionArray1 = new OceanBaseExpression[8];
        oceanBaseExpressionArray1[0] = (OceanBaseExpression) oceanBaseConstant1;
        oceanBaseExpressionArray1[1] = (OceanBaseExpression) oceanBaseConstant0;
        oceanBaseExpressionArray1[2] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("T",
                oceanBaseSchema_OceanBaseDataType0, false, (-851), false);
        OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(
                oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant0);
        oceanBaseExpressionArray1[3] = (OceanBaseExpression) oceanBaseColumnReference0;
        oceanBaseExpressionArray1[4] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0 = OceanBaseUnaryPrefixOperation.OceanBaseUnaryPrefixOperator.MINUS;
        OceanBaseUnaryPrefixOperation oceanBaseUnaryPrefixOperation0 = new OceanBaseUnaryPrefixOperation(
                oceanBaseExpressionArray1[0], oceanBaseUnaryPrefixOperation_OceanBaseUnaryPrefixOperator0);
        oceanBaseExpressionArray1[5] = (OceanBaseExpression) oceanBaseUnaryPrefixOperation0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0, oceanBaseExpressionArray1);
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseUnaryPrefixOperation$OceanBaseUnaryPrefixOperator$3", e);
        }
    }

//    @Test
//    public void test16() throws Throwable {
//        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
//        OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin();
//        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseJoin0;
//        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createTrue();
//        // Undeclared exception!
//        try {
//            OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0, oceanBaseExpressionArray0);
//            fail("Expecting exception: UnsupportedOperationException");
//
//        } catch (UnsupportedOperationException e) {
//            //
//            // no message in exception (getMessage() returned null)
//            //
//            verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
//        }
//    }

    @Test
    public void test17() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
        OceanBaseOrderByTerm.OceanBaseOrder oceanBaseOrderByTerm_OceanBaseOrder0 = OceanBaseOrderByTerm.OceanBaseOrder.DESC;
        OceanBaseOrderByTerm oceanBaseOrderByTerm0 = new OceanBaseOrderByTerm(oceanBaseConstant_OceanBaseNullConstant0,
                oceanBaseOrderByTerm_OceanBaseOrder0);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseOrderByTerm0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant_OceanBaseNullConstant0,
                    oceanBaseExpressionArray0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.oceanbase.ast.OceanBaseOrderByTerm@2
            //
        }
    }

    @Test
    public void test18() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = null;
        try {
            oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                    oceanBaseComputableFunction_OceanBaseFunction0, (OceanBaseExpression[]) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test19() throws Throwable {
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-1435L), false);
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createDoubleConstant(1291.4);
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant0;
        oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[6] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn(
                "gT3LYaYKA-GN{", oceanBaseSchema_OceanBaseDataType0, false, 62552633, false);
        OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(
                oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseIntConstant0);
        oceanBaseExpressionArray0[7] = (OceanBaseExpression) oceanBaseColumnReference0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType1 = OceanBaseComputableFunction
                .getMostGeneralType(oceanBaseExpressionArray0);
        assertEquals(OceanBaseSchema.OceanBaseDataType.VARCHAR, oceanBaseSchema_OceanBaseDataType1);
    }

    @Test
    public void test20() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[8];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn("",
                oceanBaseSchema_OceanBaseDataType0, false, (-3994), false);
        OceanBaseColumnReference oceanBaseColumnReference0 = OceanBaseColumnReference
                .create(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
        oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseColumnReference0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test21() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[9];
        OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant(
                "COALESCE");
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseConstant oceanBaseConstant0 = oceanBaseConstant_OceanBaseTextConstant0
                .castAs(oceanBaseCastOperation_CastType0);
        oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseBinaryLogicalOperation.OceanBaseBinaryLogicalOperator oceanBaseBinaryLogicalOperation_OceanBaseBinaryLogicalOperator0 = OceanBaseBinaryLogicalOperation.OceanBaseBinaryLogicalOperator.AND;
        OceanBaseBinaryLogicalOperation oceanBaseBinaryLogicalOperation0 = new OceanBaseBinaryLogicalOperation(
                oceanBaseConstant_OceanBaseNullConstant0, oceanBaseConstant_OceanBaseNullConstant0,
                oceanBaseBinaryLogicalOperation_OceanBaseBinaryLogicalOperator0);
        oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseBinaryLogicalOperation0;
        oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseConstant0;
        oceanBaseExpressionArray0[6] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.INT;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn(
                "COALESCE", oceanBaseSchema_OceanBaseDataType0, true, 0, true);
        OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(
                oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseTextConstant0);
        oceanBaseExpressionArray0[7] = (OceanBaseExpression) oceanBaseColumnReference0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test22() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseComputableFunction.getMostGeneralType(oceanBaseExpressionArray0);
    }

    @Test
    public void test23() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-227L));
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseConstant oceanBaseConstant1 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0,
                oceanBaseExpressionArray0);
        assertSame(oceanBaseConstant1, oceanBaseConstant0);
    }

    @Test
    public void test24() throws Throwable {
        OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant(
                (-332.37565707964));
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
        OceanBaseConstant oceanBaseConstant0 = OceanBaseComputableFunction
                .castToMostGeneralType(oceanBaseConstant_OceanBaseDoubleConstant0, oceanBaseExpressionArray0);
        assertEquals((-332.37565707964), oceanBaseConstant0.getDouble(), 0.01);
    }

    @Test
    public void test25() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseConstant oceanBaseConstant1 = OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0,
                oceanBaseExpressionArray0);
        assertFalse(oceanBaseConstant1.isEmpty());
    }

    @Test
    public void test26() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-2374L), false);
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[6];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn(
                (String) null, oceanBaseSchema_OceanBaseDataType0, false, (-1614), false);
        OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(
                oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant0);
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseColumnReference0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.castToMostGeneralType(oceanBaseConstant0, oceanBaseExpressionArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test27() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant(
                0.0);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseConstant oceanBaseConstant0 = oceanBaseConstant_OceanBaseDoubleConstant0
                .castAs(oceanBaseCastOperation_CastType0);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseConstant oceanBaseConstant1 = OceanBaseComputableFunction
                .castToMostGeneralType(oceanBaseConstant_OceanBaseDoubleConstant0, oceanBaseExpressionArray0);
        assertFalse(oceanBaseConstant1.equals((Object) oceanBaseConstant0));
    }

    @Test
    public void test28() throws Throwable {
        OceanBaseConstant.OceanBaseTextConstant oceanBaseConstant_OceanBaseTextConstant0 = new OceanBaseConstant.OceanBaseTextConstant(
                "");
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[4];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
        oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseTextConstant0;
        OceanBaseConstant oceanBaseConstant0 = OceanBaseComputableFunction
                .castToMostGeneralType(oceanBaseConstant_OceanBaseTextConstant0, oceanBaseExpressionArray0);
        assertFalse(oceanBaseConstant0.equals((Object) oceanBaseConstant_OceanBaseTextConstant0));
    }

    @Test
    public void test29() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[3];
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("oidvector_ops");
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseConstant oceanBaseConstant1 = OceanBaseComputableFunction
                .castToMostGeneralType(oceanBaseConstant_OceanBaseNullConstant0, oceanBaseExpressionArray0);
        assertFalse(oceanBaseConstant1.isEmpty());
    }

    @Test
    public void test30() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.DECIMAL;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn(">gp",
                oceanBaseSchema_OceanBaseDataType0, true, 2325, true);
        OceanBaseColumnReference oceanBaseColumnReference0 = OceanBaseColumnReference
                .create(oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseColumnReference0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
        assertEquals("NULL", oceanBaseConstant0.getTextRepresentation());
    }

    @Test
    public void test31() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseSchema.OceanBaseDataType oceanBaseSchema_OceanBaseDataType0 = OceanBaseSchema.OceanBaseDataType.FLOAT;
        OceanBaseSchema.OceanBaseColumn oceanBaseSchema_OceanBaseColumn0 = new OceanBaseSchema.OceanBaseColumn(
                "mP4)F>eAO2SV", oceanBaseSchema_OceanBaseDataType0, false, 1633, false);
        OceanBaseColumnReference oceanBaseColumnReference0 = new OceanBaseColumnReference(
                oceanBaseSchema_OceanBaseColumn0, oceanBaseConstant_OceanBaseNullConstant0);
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseColumnReference0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
        assertEquals("null", oceanBaseConstant0.getString());
    }

    @Test
    public void test32() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[2];
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createTrue();
        oceanBaseConstantArray0[0] = oceanBaseConstant0;
        OceanBaseConstant oceanBaseConstant1 = OceanBaseConstant.createStringConstant("gMI+I:H'owz[w?4jZ#");
        oceanBaseConstantArray0[1] = oceanBaseConstant1;
        OceanBaseConstant oceanBaseConstant2 = oceanBaseComputableFunction_OceanBaseFunction0
                .apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
        assertEquals(1L, oceanBaseConstant2.getInt());
    }

    @Test
    public void test33() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.LEAST;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[2];
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createUnsignedIntConstant((-1455L));
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant0;
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_FALSE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseExpressionArray0[0], oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseUnaryPostfixOperation0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction0.getExpectedValue();
        assertEquals(1L, oceanBaseConstant1.getInt());
    }

    @Test
    public void test34() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        // Undeclared exception!
        try {
            oceanBaseComputableFunction0.getExpectedValue();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 1 out of bounds for length 1
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction$4", e);
        }
    }

    @Test
    public void test35() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IFNULL;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant(
                0.0);
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseDoubleConstant0;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
        assertFalse(oceanBaseConstant0.isInt());
    }

    @Test
    public void test36() throws Throwable {
        OceanBaseConstant.OceanBaseDoubleConstant oceanBaseConstant_OceanBaseDoubleConstant0 = new OceanBaseConstant.OceanBaseDoubleConstant(
                0.0);
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[3];
        oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseDoubleConstant0;
        // Undeclared exception!
        try {
            oceanBaseComputableFunction_OceanBaseFunction0.apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction", e);
        }
    }

    @Test
    public void test37() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[1];
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createFalse();
        oceanBaseConstantArray0[0] = oceanBaseConstant0;
        OceanBaseConstant oceanBaseConstant1 = oceanBaseComputableFunction_OceanBaseFunction0
                .apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
        assertSame(oceanBaseConstant1, oceanBaseConstant0);
    }

    @Test
    public void test38() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[3];
        oceanBaseConstantArray0[0] = (OceanBaseConstant) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseConstantArray0[1] = (OceanBaseConstant) oceanBaseConstant_OceanBaseNullConstant0;
        oceanBaseConstantArray0[2] = (OceanBaseConstant) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction_OceanBaseFunction0
                .apply(oceanBaseConstantArray0, oceanBaseConstantArray0);
        assertNotSame(oceanBaseConstant0, oceanBaseConstant_OceanBaseNullConstant0);
    }

    @Test
    public void test39() throws Throwable {
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new OceanBaseConstant.OceanBaseNullConstant();
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseNullConstant0;
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
        assertNull(oceanBaseConstant0.getType());
    }

    @Test
    public void test40() throws Throwable {
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-1L), "");
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[7];
        oceanBaseExpressionArray0[0] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[1] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[2] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[3] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[4] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[5] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        oceanBaseExpressionArray0[6] = (OceanBaseExpression) oceanBaseConstant_OceanBaseIntConstant0;
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseComputableFunction0.getExpectedValue();
        assertEquals("64", oceanBaseConstant0.getTextRepresentation());
    }

    @Test
    public void test41() throws Throwable {
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseExpression[] oceanBaseExpressionArray1 = new OceanBaseExpression[1];
        oceanBaseExpressionArray1[0] = (OceanBaseExpression) oceanBaseComputableFunction0;
        // Undeclared exception!
        try {
            OceanBaseComputableFunction.castToMostGeneralType((OceanBaseConstant) null, oceanBaseExpressionArray1);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 1 out of bounds for length 0
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction", e);
        }
    }

    @Test
    public void test42() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        String string0 = oceanBaseComputableFunction_OceanBaseFunction0.toString();
        assertEquals("IF", string0);
    }

    @Test
    public void test43() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        int int0 = oceanBaseComputableFunction_OceanBaseFunction0.getNrArgs();
        assertEquals(3, int0);
    }

    @Test
    public void test44() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction.getRandomFunction();
    }

    @Test
    public void test45() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.IF;
        String string0 = oceanBaseComputableFunction_OceanBaseFunction0.getName();
        assertEquals("IF", string0);
    }

    @Test
    public void test46() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
        boolean boolean0 = oceanBaseComputableFunction_OceanBaseFunction0.isVariadic();
        assertTrue(boolean0);
    }

    @Test
    public void test47() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.GREATEST;
        OceanBaseConstant[] oceanBaseConstantArray0 = new OceanBaseConstant[2];
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseConstantArray0);
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction1 = oceanBaseComputableFunction0
                .getFunction();
        assertSame(oceanBaseComputableFunction_OceanBaseFunction1, oceanBaseComputableFunction_OceanBaseFunction0);
    }

    @Test
    public void test48() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[1];
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseExpression[] oceanBaseExpressionArray1 = oceanBaseComputableFunction0.getArguments();
        assertNotSame(oceanBaseExpressionArray0, oceanBaseExpressionArray1);
    }

    @Test
    public void test49() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.COALESCE;
        boolean boolean0 = oceanBaseComputableFunction_OceanBaseFunction0.isVariadic();
        assertTrue(boolean0);
    }
}
