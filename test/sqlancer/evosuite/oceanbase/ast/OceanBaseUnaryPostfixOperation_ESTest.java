/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 23:58:20 GMT 2025
 */

package sqlancer.evosuite.oceanbase.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.oceanbase.ast.OceanBaseBinaryComparisonOperation;
import sqlancer.oceanbase.ast.OceanBaseCastOperation;
import sqlancer.oceanbase.ast.OceanBaseComputableFunction;
import sqlancer.oceanbase.ast.OceanBaseConstant;
import sqlancer.oceanbase.ast.OceanBaseExpression;
import sqlancer.oceanbase.ast.OceanBaseText;
import sqlancer.oceanbase.ast.OceanBaseUnaryPostfixOperation;

public class OceanBaseUnaryPostfixOperation_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator
                .valueOf("IS_FALSE");
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-800L), "IS_FALSE");
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant_OceanBaseIntConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        boolean boolean0 = oceanBaseUnaryPostfixOperation0.isNegated();
        assertFalse(boolean0);
    }

    @Test
    public void test01() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(false);
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant0, (OceanBaseUnaryPostfixOperation.UnaryPostfixOperator) null, false);
        oceanBaseUnaryPostfixOperation0.getOperator();
        assertFalse(oceanBaseUnaryPostfixOperation0.isNegated());
    }

    @Test
    public void test02() throws Throwable {
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_NULL;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                (OceanBaseExpression) null, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        oceanBaseUnaryPostfixOperation0.getExpression();
        assertTrue(oceanBaseUnaryPostfixOperation0.isNegated());
    }

    @Test
    public void test03() throws Throwable {
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_FALSE;
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("UxGXY<QJ3`b&7J");
        OceanBaseBinaryComparisonOperation.BinaryComparisonOperator oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0 = OceanBaseBinaryComparisonOperation.BinaryComparisonOperator.LESS;
        OceanBaseBinaryComparisonOperation oceanBaseBinaryComparisonOperation0 = new OceanBaseBinaryComparisonOperation(
                oceanBaseConstant0, oceanBaseConstant0, oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0);
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseBinaryComparisonOperation0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        // Undeclared exception!
        try {
            oceanBaseUnaryPostfixOperation0.getExpectedValue();
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseConstant$OceanBaseTextConstant", e);
        }
    }

    // @Test
    // public void test04() throws Throwable {
    // OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin();
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 =
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_NULL;
    // OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
    // oceanBaseJoin0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
    // // Undeclared exception!
    // try {
    // oceanBaseUnaryPostfixOperation0.getExpectedValue();
    // fail("Expecting exception: UnsupportedOperationException");
    //
    // } catch (UnsupportedOperationException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
    // }
    // }

    @Test
    public void test05() throws Throwable {
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_FALSE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                (OceanBaseExpression) null, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        // Undeclared exception!
        try {
            oceanBaseUnaryPostfixOperation0.getExpectedValue();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseUnaryPostfixOperation", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(false);
        OceanBaseText oceanBaseText0 = new OceanBaseText(oceanBaseConstant0, "%R{(i", false);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_TRUE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseText0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        // Undeclared exception!
        try {
            oceanBaseUnaryPostfixOperation0.getExpectedValue();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // PQS not supported for this operator
            //
        }
    }

    @Test
    public void test07() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_TRUE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseComputableFunction0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        // Undeclared exception!
        try {
            oceanBaseUnaryPostfixOperation0.getExpectedValue();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 0 out of bounds for length 0
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction$1", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(true);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_TRUE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        oceanBaseUnaryPostfixOperation0.setNegate(true);
        assertTrue(oceanBaseUnaryPostfixOperation0.isNegated());
    }

    // @Test
    // public void test09() throws Throwable {
    // OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(true);
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 =
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_TRUE;
    // OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
    // oceanBaseConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
    // OceanBaseConstant oceanBaseConstant1 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
    // assertEquals("0", oceanBaseConstant1.getTextRepresentation());
    // }

    @Test
    public void test10() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(false);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_TRUE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
        assertFalse(oceanBaseConstant1.asBooleanNotNull());
    }

    @Test
    public void test11() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(true);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_FALSE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
        assertEquals(1L, oceanBaseConstant1.getInt());
    }

    @Test
    public void test12() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(false);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_FALSE;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
        assertEquals("1", oceanBaseConstant1.getTextRepresentation());
    }

    // @Test
    // public void test13() throws Throwable {
    // OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new
    // OceanBaseConstant.OceanBaseNullConstant();
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 =
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_FALSE;
    // OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
    // oceanBaseConstant_OceanBaseNullConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
    // OceanBaseConstant oceanBaseConstant0 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
    // assertEquals("1", oceanBaseConstant0.getTextRepresentation());
    // }

    // @Test
    // public void test14() throws Throwable {
    // OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = new
    // OceanBaseConstant.OceanBaseNullConstant();
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 =
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_TRUE;
    // OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
    // oceanBaseConstant_OceanBaseNullConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
    // OceanBaseConstant oceanBaseConstant0 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
    // assertEquals("0", oceanBaseConstant0.getTextRepresentation());
    // }
    //
    // @Test
    // public void test15() throws Throwable {
    // OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createBoolean(false);
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 =
    // OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_NULL;
    // OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
    // oceanBaseConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
    // OceanBaseConstant oceanBaseConstant1 = oceanBaseUnaryPostfixOperation0.getExpectedValue();
    // assertEquals("0", oceanBaseConstant1.getTextRepresentation());
    // }

    @Test
    public void test16() throws Throwable {
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator
                .valueOf("IS_FALSE");
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-800L), "IS_FALSE");
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseConstant_OceanBaseIntConstant0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, false);
        oceanBaseUnaryPostfixOperation0.getExpression();
        assertFalse(oceanBaseUnaryPostfixOperation0.isNegated());
    }

    @Test
    public void test17() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createDoubleConstant(898);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0,
                oceanBaseCastOperation_CastType0);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_NULL;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseCastOperation0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        oceanBaseUnaryPostfixOperation0.getOperator();
        assertTrue(oceanBaseUnaryPostfixOperation0.isNegated());
    }

    @Test
    public void test18() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createDoubleConstant(898);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0,
                oceanBaseCastOperation_CastType0);
        OceanBaseUnaryPostfixOperation.UnaryPostfixOperator oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0 = OceanBaseUnaryPostfixOperation.UnaryPostfixOperator.IS_NULL;
        OceanBaseUnaryPostfixOperation oceanBaseUnaryPostfixOperation0 = new OceanBaseUnaryPostfixOperation(
                oceanBaseCastOperation0, oceanBaseUnaryPostfixOperation_UnaryPostfixOperator0, true);
        boolean boolean0 = oceanBaseUnaryPostfixOperation0.isNegated();
        assertTrue(boolean0);
    }
}
