/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:29:40 GMT 2025
 */

package sqlancer.evosuite.oceanbase.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.oceanbase.ast.OceanBaseBinaryComparisonOperation;
import sqlancer.oceanbase.ast.OceanBaseCastOperation;
import sqlancer.oceanbase.ast.OceanBaseColumnName;
import sqlancer.oceanbase.ast.OceanBaseComputableFunction;
import sqlancer.oceanbase.ast.OceanBaseConstant;
import sqlancer.oceanbase.ast.OceanBaseExpression;
import sqlancer.oceanbase.ast.OceanBaseJoin;
import sqlancer.oceanbase.ast.OceanBaseSelect;
import sqlancer.oceanbase.OceanBaseSchema;

public class OceanBaseCastOperation_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createNullConstant();
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0,
                oceanBaseCastOperation_CastType0);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType1 = oceanBaseCastOperation0.getType();
        assertEquals(OceanBaseCastOperation.CastType.UNSIGNED, oceanBaseCastOperation_CastType1);
    }

    @Test
    public void test01() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createNullConstant();
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0,
                oceanBaseCastOperation_CastType0);
        OceanBaseConstant.OceanBaseNullConstant oceanBaseConstant_OceanBaseNullConstant0 = (OceanBaseConstant.OceanBaseNullConstant) oceanBaseCastOperation0
                .getExpr();
        assertEquals("NULL", oceanBaseConstant_OceanBaseNullConstant0.getTextRepresentation());
    }

    @Test
    public void test02() throws Throwable {
        OceanBaseConstant.OceanBaseIntConstant oceanBaseConstant_OceanBaseIntConstant0 = new OceanBaseConstant.OceanBaseIntConstant(
                (-2303L), true);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(
                oceanBaseConstant_OceanBaseIntConstant0, oceanBaseCastOperation_CastType0);
        OceanBaseConstant oceanBaseConstant0 = oceanBaseCastOperation0.getExpectedValue();
        assertEquals((-2303L), oceanBaseConstant0.getInt());
    }

    @Test
    public void test03() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createIntConstant((-2177L));
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0,
                oceanBaseCastOperation_CastType0);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseCastOperation0.getExpectedValue();
        assertNotSame(oceanBaseConstant0, oceanBaseConstant1);
    }

    @Test
    public void test04() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createNullConstant();
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseConstant0,
                oceanBaseCastOperation_CastType0);
        OceanBaseConstant oceanBaseConstant1 = oceanBaseCastOperation0.getExpectedValue();
        assertEquals("NULL", oceanBaseConstant1.getTextRepresentation());
    }

    @Test
    public void test05() throws Throwable {
        OceanBaseConstant oceanBaseConstant0 = OceanBaseConstant.createStringConstant("varbit_ops");
        OceanBaseBinaryComparisonOperation.BinaryComparisonOperator oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0 = OceanBaseBinaryComparisonOperation.BinaryComparisonOperator.LESS_EQUALS;
        OceanBaseBinaryComparisonOperation oceanBaseBinaryComparisonOperation0 = new OceanBaseBinaryComparisonOperation(
                oceanBaseConstant0, oceanBaseConstant0, oceanBaseBinaryComparisonOperation_BinaryComparisonOperator0);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseBinaryComparisonOperation0,
                oceanBaseCastOperation_CastType0);
        // Undeclared exception!
        try {
            oceanBaseCastOperation0.getExpectedValue();
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseConstant$OceanBaseTextConstant", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        OceanBaseSelect oceanBaseSelect0 = new OceanBaseSelect();
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseSelect0,
                oceanBaseCastOperation_CastType0);
        // Undeclared exception!
        try {
            oceanBaseCastOperation0.getExpectedValue();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseCastOperation", e);
        }
    }

    @Test
    public void test07() throws Throwable {
        OceanBaseComputableFunction.OceanBaseFunction oceanBaseComputableFunction_OceanBaseFunction0 = OceanBaseComputableFunction.OceanBaseFunction.BIT_COUNT;
        OceanBaseExpression[] oceanBaseExpressionArray0 = new OceanBaseExpression[0];
        OceanBaseComputableFunction oceanBaseComputableFunction0 = new OceanBaseComputableFunction(
                oceanBaseComputableFunction_OceanBaseFunction0, oceanBaseExpressionArray0);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.UNSIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseComputableFunction0,
                oceanBaseCastOperation_CastType0);
        // Undeclared exception!
        try {
            oceanBaseCastOperation0.getExpectedValue();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 0 out of bounds for length 0
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseComputableFunction$OceanBaseFunction$1", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.getRandom();
        OceanBaseJoin oceanBaseJoin0 = new OceanBaseJoin();
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseJoin0,
                oceanBaseCastOperation_CastType0);
        // Undeclared exception!
        try {
            oceanBaseCastOperation0.getExpectedValue();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.oceanbase.ast.OceanBaseJoin", e);
        }
    }

    @Test
    public void test09() throws Throwable {
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation((OceanBaseExpression) null,
                oceanBaseCastOperation_CastType0);
        OceanBaseExpression oceanBaseExpression0 = oceanBaseCastOperation0.getExpr();
        assertNull(oceanBaseExpression0);
    }

    @Test
    public void test10() throws Throwable {
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation((OceanBaseExpression) null,
                (OceanBaseCastOperation.CastType) null);
        oceanBaseCastOperation0.getType();
    }

    @Test
    public void test11() throws Throwable {
        OceanBaseColumnName oceanBaseColumnName0 = new OceanBaseColumnName((OceanBaseSchema.OceanBaseColumn) null);
        OceanBaseCastOperation.CastType oceanBaseCastOperation_CastType0 = OceanBaseCastOperation.CastType.SIGNED;
        OceanBaseCastOperation oceanBaseCastOperation0 = new OceanBaseCastOperation(oceanBaseColumnName0,
                oceanBaseCastOperation_CastType0);
        // Undeclared exception!
        try {
            oceanBaseCastOperation0.getExpectedValue();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // PQS not supported for this operator
            //
        }
    }
}
