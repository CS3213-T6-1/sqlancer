/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:47:25 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.gen;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.Random;
import org.junit.jupiter.api.Test;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.gen.CockroachDBInsertGenerator;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.common.schema.TableIndex;

public class CockroachDBInsertGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.BOOL;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0, 0);
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                (String) null, cockroachDBSchema_CockroachDBCompositeDataType0, false, true);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0);
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        LinkedList<TableIndex> linkedList0 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                "CREATE TABLE", list0, linkedList0, false);
        SQLQueryAdapter sQLQueryAdapter0 = CockroachDBInsertGenerator
                .insert(cockroachDBProvider_CockroachDBGlobalState0, cockroachDBSchema_CockroachDBTable0);
        assertTrue(sQLQueryAdapter0.couldAffectSchema());
    }

    @Test
    public void test1() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(1958052158);
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "!", cockroachDBSchema_CockroachDBCompositeDataType0, false, false);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0);
        LinkedList<TableIndex> linkedList0 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                "!", list0, linkedList0, false);
        // Undeclared exception!
        CockroachDBInsertGenerator.insert(cockroachDBProvider_CockroachDBGlobalState0,
                cockroachDBSchema_CockroachDBTable0);
    }

    @Test
    public void test2() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        // Undeclared exception!
        try {
            CockroachDBInsertGenerator.insert(cockroachDBProvider_CockroachDBGlobalState0,
                    (CockroachDBSchema.CockroachDBTable) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBInsertGenerator", e);
        }
    }

    @Test
    public void test3() throws Throwable {
        LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
        LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                "", linkedList0, linkedList1, true);
        // Undeclared exception!
        try {
            CockroachDBInsertGenerator.insert((CockroachDBProvider.CockroachDBGlobalState) null,
                    cockroachDBSchema_CockroachDBTable0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // [] 1
            //
        }
    }

    @Test
    public void test4() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        // Undeclared exception!
        try {
            CockroachDBInsertGenerator.insert(cockroachDBProvider_CockroachDBGlobalState0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test5() throws Throwable {
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "SCRUB", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0);
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        LinkedList<TableIndex> linkedList0 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                "SCRUB", list0, linkedList0, true);
        cockroachDBSchema_CockroachDBTable0.getRandomNonEmptyColumnSubset();
        SQLQueryAdapter sQLQueryAdapter0 = CockroachDBInsertGenerator
                .insert(cockroachDBProvider_CockroachDBGlobalState0, cockroachDBSchema_CockroachDBTable0);
        assertFalse(sQLQueryAdapter0.couldAffectSchema());
    }

    @Test
    public void test6() throws Throwable {
        Random.setNextRandom((-1));
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
        LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                (String) null, linkedList0, linkedList1, true);
        SQLQueryAdapter sQLQueryAdapter0 = CockroachDBInsertGenerator
                .insert(cockroachDBProvider_CockroachDBGlobalState0, cockroachDBSchema_CockroachDBTable0);
        assertEquals("INSERT INTO null DEFAULT VALUES;", sQLQueryAdapter0.getQueryString());
    }

    @Test
    public void test7() throws Throwable {
        // Undeclared exception!
        try {
            CockroachDBInsertGenerator.insert((CockroachDBProvider.CockroachDBGlobalState) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBInsertGenerator", e);
        }
    }
}
