/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 14:58:12 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.gen;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;

import sqlancer.cockroachdb.ast.CockroachDBAggregate;
import sqlancer.cockroachdb.ast.CockroachDBColumnReference;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBJoin;
import sqlancer.cockroachdb.ast.CockroachDBNotOperation;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.cockroachdb.ast.CockroachDBUnaryPostfixOperation;
import sqlancer.cockroachdb.CockroachDBBugs;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;
import sqlancer.common.schema.AbstractTables;
import sqlancer.common.schema.TableIndex;
import sqlancer.common.visitor.UnaryOperation;

public class CockroachDBExpressionGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
        boolean boolean0 = cockroachDBExpressionGenerator0.mutateJoin(cockroachDBSelect0);
        assertFalse(boolean0);
    }

    @Test
    public void test01() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        LinkedList<CockroachDBSchema.CockroachDBTable> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBTable>();
        LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList1 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
        LinkedList<TableIndex> linkedList2 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                (String) null, linkedList1, linkedList2, false);
        linkedList0.add(cockroachDBSchema_CockroachDBTable0);
        AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(
                linkedList0);
        cockroachDBExpressionGenerator0.setTablesAndColumns(abstractTables0);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.getTableRefs();
        assertEquals(1, list0.size());
    }

    @Test
    public void test02() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.BIT;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0
                .get();
        cockroachDBExpressionGenerator0.getRandomType();
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType1 = cockroachDBExpressionGenerator0
                .getRandomType();
        assertNotSame(cockroachDBSchema_CockroachDBCompositeDataType1, cockroachDBSchema_CockroachDBCompositeDataType0);
    }

    @Test
    public void test03() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState1 = cockroachDBExpressionGenerator0
                .getGlobalState();
        assertSame(cockroachDBProvider_CockroachDBGlobalState0, cockroachDBProvider_CockroachDBGlobalState1);
    }

    @Test
    public void test04() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        List<CockroachDBExpression> list0 = List.of();
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        cockroachDBSelect0.setFromTables(list0);
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createBitConstant(0L);
        String string0 = cockroachDBExpressionGenerator0.generateUnoptimizedQueryString(cockroachDBSelect0,
                cockroachDBExpression0);
        assertNotNull(string0);
    }

    @Test
    public void test05() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0
                .getRandomType();
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "K^Z)YKgCB'oa5k", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setColumns(list0);
        boolean boolean0 = cockroachDBExpressionGenerator1
                .canGenerateColumnOfType(cockroachDBSchema_CockroachDBCompositeDataType0);
        assertTrue(boolean0);
    }

    @Test
    public void test06() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.setTablesAndColumns(
                    (AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test07() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSchema.CockroachDBCompositeDataType.getRandom();
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateJoin((CockroachDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test09() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateHaving((CockroachDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateGroupBy((CockroachDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test11() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateGroupBy(cockroachDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test12() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateDistinct((CockroachDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test13() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        cockroachDBExpressionGenerator0.setColumns((List<CockroachDBSchema.CockroachDBColumn>) null);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.getRandomType();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
        }
    }

    @Test
    public void test14() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.getRandomJoinClauses();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test15() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateUnoptimizedQueryString((CockroachDBSelect) null,
                    (CockroachDBExpression) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test16() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateFetchColumns(false);
        cockroachDBSelect0.setFromTables(list0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateUnoptimizedQueryString(cockroachDBSelect0,
                    (CockroachDBExpression) cockroachDBSelect0);
            fail("Expecting exception: ClassCastException");

        } catch (ClassCastException e) {
            //
            // class sqlancer.cockroachdb.ast.CockroachDBColumnReference cannot be cast to class
            // sqlancer.cockroachdb.ast.CockroachDBTableReference (sqlancer.cockroachdb.ast.CockroachDBColumnReference
            // and sqlancer.cockroachdb.ast.CockroachDBTableReference are in unnamed module of loader
            // org.evosuite.instrumentation.InstrumentingClassLoader @5c7dbd19)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test17() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateOptimizedQueryString((CockroachDBSelect) null,
                    (CockroachDBExpression) null, false);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test18() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExplainQuery((CockroachDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test19() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(3373707);
        // Undeclared exception!
        cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    }

    @Test
    public void test20() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.BIT;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // BIT(-1)
            //
        }
    }

    @Test
    public void test21() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "OR", (CockroachDBSchema.CockroachDBCompositeDataType) null, false, false);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setColumns(list0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator1.generateColumn((CockroachDBSchema.CockroachDBCompositeDataType) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    // @Test
    // public void test22() throws Throwable {
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // (CockroachDBProvider.CockroachDBGlobalState) null);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.SERIAL;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBSchema_CockroachDBDataType0
    // .get();
    // CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 =
    // (CockroachDBConstant.CockroachDBNullConstant) cockroachDBExpressionGenerator0
    // .generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // assertEquals("NULL", cockroachDBConstant_CockroachDBNullConstant0.toString());
    // }

    @Test
    public void test23() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        CockroachDBAggregate.CockroachDBAggregateFunction cockroachDBAggregate_CockroachDBAggregateFunction0 = CockroachDBAggregate.CockroachDBAggregateFunction.SUM_INT;
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateArgsForAggregate(cockroachDBSchema_CockroachDBCompositeDataType0,
                    cockroachDBAggregate_CockroachDBAggregateFunction0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test24() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExpression(cockroachDBSchema_CockroachDBCompositeDataType0, 0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test25() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExpression(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    // @Test
    // public void test26() throws Throwable {
    // CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // boolean boolean0 = cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
    // assertFalse(boolean0);
    //
    // boolean boolean1 = cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
    // assertTrue(boolean1);
    // }

    @Test
    public void test27() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateOr(cockroachDBSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test28() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        cockroachDBSelect0.setWhereClause(cockroachDBSelect0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateOr(cockroachDBSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test29() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateAnd(cockroachDBSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test30() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        cockroachDBSelect0.setWhereClause(cockroachDBSelect0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateAnd(cockroachDBSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test31() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateHaving(cockroachDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test32() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        cockroachDBSelect0.setWhereClause(cockroachDBSelect0);
        boolean boolean0 = cockroachDBExpressionGenerator0.mutateWhere(cockroachDBSelect0);
        assertTrue(boolean0);
    }

    @Test
    public void test33() throws Throwable {
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateWhere(cockroachDBSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test34() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        cockroachDBExpressionGenerator0.mutateDistinct(cockroachDBSelect0);
        assertTrue(cockroachDBSelect0.isDistinct());

        boolean boolean0 = cockroachDBExpressionGenerator0.mutateDistinct(cockroachDBSelect0);
        assertTrue(boolean0);
    }

    // @Test
    // public void test35() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBBugs.bug131647 = false;
    // CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
    // boolean boolean0 = cockroachDBExpressionGenerator0.mutate(cockroachDBSelect0);
    // assertFalse(boolean0);
    // }

    @Test
    public void test36() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutate((CockroachDBSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test37() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "STRAI[", (CockroachDBSchema.CockroachDBCompositeDataType) null, false, false);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setColumns(list0);
        List<CockroachDBExpression> list1 = cockroachDBExpressionGenerator1.generateFetchColumns(false);
        assertFalse(list1.isEmpty());
    }

    @Test
    public void test38() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateFetchColumns(false);
        CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
        cockroachDBSelect0.setJoinList(list0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.mutateJoin(cockroachDBSelect0);
            fail("Expecting exception: ClassCastException");

        } catch (ClassCastException e) {
            //
            // class sqlancer.cockroachdb.ast.CockroachDBColumnReference cannot be cast to class
            // sqlancer.cockroachdb.ast.CockroachDBJoin (sqlancer.cockroachdb.ast.CockroachDBColumnReference and
            // sqlancer.cockroachdb.ast.CockroachDBJoin are in unnamed module of loader
            // org.evosuite.instrumentation.InstrumentingClassLoader @5c7dbd19)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test39() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateFetchColumns(true);
        assertEquals(1, list0.size());
    }

    @Test
    public void test40() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        List<CockroachDBExpression> list0 = List.of();
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        cockroachDBSelect0.setFromTables(list0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateUnoptimizedQueryString(cockroachDBSelect0,
                    (CockroachDBExpression) cockroachDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    // @Test
    // public void test41() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
    // cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
    // // Undeclared exception!
    // cockroachDBExpressionGenerator0.generateOptimizedQueryString(cockroachDBSelect0,
    // (CockroachDBExpression) cockroachDBSelect0, false);
    // }

    @Test
    public void test42() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateOptimizedQueryString(cockroachDBSelect0,
                    (CockroachDBExpression) cockroachDBSelect0, true);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test43() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateOptimizedQueryString(cockroachDBSelect0,
                    (CockroachDBExpression) cockroachDBSelect0, false);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test44() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        LinkedList<CockroachDBSchema.CockroachDBColumn> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBColumn>();
        LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
        CockroachDBSchema.CockroachDBTable cockroachDBSchema_CockroachDBTable0 = new CockroachDBSchema.CockroachDBTable(
                "+B6d40BJq$NEP8'U", linkedList0, linkedList1, true);
        LinkedList<CockroachDBSchema.CockroachDBTable> linkedList2 = new LinkedList<CockroachDBSchema.CockroachDBTable>();
        linkedList2.add(cockroachDBSchema_CockroachDBTable0);
        AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(
                linkedList2);
        linkedList2.offerLast(cockroachDBSchema_CockroachDBTable0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setTablesAndColumns(abstractTables0);
        List<CockroachDBJoin> list0 = cockroachDBExpressionGenerator1.getRandomJoinClauses();
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test45() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        LinkedList<CockroachDBSchema.CockroachDBTable> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBTable>();
        AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(
                linkedList0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setTablesAndColumns(abstractTables0);
        List<CockroachDBJoin> list0 = cockroachDBExpressionGenerator1.getRandomJoinClauses();
        assertTrue(list0.isEmpty());
    }

    // @Test
    // public void test46() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.STRING;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new
    // CockroachDBSchema.CockroachDBCompositeDataType(
    // cockroachDBSchema_CockroachDBDataType0);
    // CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new
    // CockroachDBSchema.CockroachDBColumn(
    // "", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
    // List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
    // .setColumns(list0);
    // cockroachDBExpressionGenerator1.generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
    // CockroachDBColumnReference cockroachDBColumnReference0 = (CockroachDBColumnReference)
    // cockroachDBExpressionGenerator1
    // .generateColumn(cockroachDBSchema_CockroachDBCompositeDataType0);
    // assertNotNull(cockroachDBColumnReference0);
    // }

    @Test
    public void test47() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0
                .getRandomType();
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setColumns(list0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType1 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator1.generateColumn(cockroachDBSchema_CockroachDBCompositeDataType1);
            fail("Expecting exception: IndexOutOfBoundsException");

        } catch (IndexOutOfBoundsException e) {
        }
    }

    // @Test
    // public void test48() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.ARRAY;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBSchema_CockroachDBDataType0
    // .get();
    // CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator0
    // .generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // assertNotNull(cockroachDBExpression0);
    // }

    // @Test
    // public void test49() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.TIMETZ;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBSchema_CockroachDBDataType0
    // .get();
    // // Undeclared exception!
    // try {
    // cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
    // }
    // }

    // @Test
    // public void test50() throws Throwable {
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // (CockroachDBProvider.CockroachDBGlobalState) null);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.TIME;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBSchema_CockroachDBDataType0
    // .get();
    // // Undeclared exception!
    // try {
    // cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
    // }
    // }

    @Test
    public void test51() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.JSONB;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 = (CockroachDBConstant.CockroachDBNullConstant) cockroachDBExpressionGenerator0
                .generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
        assertEquals("NULL", cockroachDBConstant_CockroachDBNullConstant0.toString());
    }

    @Test
    public void test52() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.DECIMAL;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0
                .get();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test53() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIMESTAMPTZ;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0
                .get();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test54() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.TIMESTAMP;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0
                .get();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test55() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.INTERVAL;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0
                .get();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    // @Test
    // public void test56() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.SERIAL;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new
    // CockroachDBSchema.CockroachDBCompositeDataType(
    // cockroachDBSchema_CockroachDBDataType0);
    // // Undeclared exception!
    // try {
    // cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
    // }
    // }

    // @Test
    // public void test57() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // CockroachDBSchema.CockroachDBCompositeDataType
    // .getVarBit(0);
    // CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 =
    // (CockroachDBConstant.CockroachDBBitConstant) cockroachDBExpressionGenerator0
    // .generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // assertEquals("1", cockroachDBConstant_CockroachDBBitConstant0.getValue());
    // }

    // @Test
    // public void test58() throws Throwable {
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // (CockroachDBProvider.CockroachDBGlobalState) null);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.BYTES;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBSchema_CockroachDBDataType0
    // .get();
    // // Undeclared exception!
    // try {
    // cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
    // }
    // }

    @Test
    public void test59() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.FLOAT;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBSchema_CockroachDBDataType0
                .get();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test60() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.STRING;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    // @Test
    // public void test61() throws Throwable {
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // (CockroachDBProvider.CockroachDBGlobalState) null);
    // CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 =
    // CockroachDBSchema.CockroachDBDataType.BOOL;
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBSchema_CockroachDBDataType0
    // .get();
    // CockroachDBConstant.CockroachDBBooleanConstant cockroachDBConstant_CockroachDBBooleanConstant0 =
    // (CockroachDBConstant.CockroachDBBooleanConstant) cockroachDBExpressionGenerator0
    // .generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // assertFalse(cockroachDBConstant_CockroachDBBooleanConstant0.getValue());
    // }

    // @Test
    // public void test62() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBExpressionGenerator0
    // .getRandomType();
    // // Undeclared exception!
    // try {
    // cockroachDBExpressionGenerator0.generateConstant(cockroachDBSchema_CockroachDBCompositeDataType0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
    // }
    // }

    // @Test
    // public void test63() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBExpressionGenerator0
    // .getRandomType();
    // CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new
    // CockroachDBSchema.CockroachDBColumn(
    // "", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
    // List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
    // .setColumns(list0);
    // CockroachDBExpression cockroachDBExpression0 = cockroachDBExpressionGenerator1
    // .generateLeafNode(cockroachDBSchema_CockroachDBCompositeDataType0);
    // assertNotNull(cockroachDBExpression0);
    // }

    @Test
    public void test64() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = cockroachDBExpressionGenerator0
                .getRandomType();
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "INTERVAL YEAR TO MONTH", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setColumns(list0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator1.generateLeafNode((CockroachDBSchema.CockroachDBCompositeDataType) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    // @Test
    // public void test65() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new
    // CockroachDBSchema.CockroachDBColumn(
    // "OR", (CockroachDBSchema.CockroachDBCompositeDataType) null, false, false);
    // List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0);
    // cockroachDBExpressionGenerator0.setColumns(list0);
    // cockroachDBExpressionGenerator0.getRandomType();
    // CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 =
    // cockroachDBExpressionGenerator0
    // .getRandomType();
    // assertEquals(CockroachDBSchema.CockroachDBDataType.BOOL,
    // cockroachDBSchema_CockroachDBCompositeDataType0.getPrimitiveDataType());
    // }

    @Test
    public void test66() throws Throwable {
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBAggregate.CockroachDBAggregateFunction cockroachDBAggregate_CockroachDBAggregateFunction0 = CockroachDBAggregate.CockroachDBAggregateFunction.COUNT_ROWS;
        CockroachDBAggregate cockroachDBAggregate0 = cockroachDBExpressionGenerator0.generateArgsForAggregate(
                cockroachDBSchema_CockroachDBCompositeDataType0, cockroachDBAggregate_CockroachDBAggregateFunction0);
        assertEquals(CockroachDBAggregate.CockroachDBAggregateFunction.COUNT_ROWS, cockroachDBAggregate0.getFunc());
    }

    @Test
    public void test67() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.getOrderingTerms();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    // @Test
    // public void test68() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
    // cockroachDBExpressionGenerator0.mutateLimit(cockroachDBSelect0);
    // // Undeclared exception!
    // cockroachDBExpressionGenerator0.getOrderingTerms();
    // }

    @Test
    public void test69() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        boolean boolean0 = cockroachDBExpressionGenerator0
                .canGenerateColumnOfType((CockroachDBSchema.CockroachDBCompositeDataType) null);
        assertFalse(boolean0);
    }

    @Test
    public void test70() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBConstant cockroachDBConstant0 = CockroachDBConstant.createBooleanConstant(true);
        CockroachDBNotOperation cockroachDBNotOperation0 = (CockroachDBNotOperation) cockroachDBExpressionGenerator0
                .negatePredicate((CockroachDBExpression) cockroachDBConstant0);
        assertEquals(UnaryOperation.OperatorKind.PREFIX, cockroachDBNotOperation0.getOperatorKind());
    }

    @Test
    public void test71() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateBooleanExpression();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test72() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        LinkedList<CockroachDBSchema.CockroachDBTable> linkedList0 = new LinkedList<CockroachDBSchema.CockroachDBTable>();
        AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn> abstractTables0 = new AbstractTables<CockroachDBSchema.CockroachDBTable, CockroachDBSchema.CockroachDBColumn>(
                linkedList0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator1 = cockroachDBExpressionGenerator0
                .setTablesAndColumns(abstractTables0);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator1.getTableRefs();
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test73() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateHavingClause();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test74() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.getTableRefs();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test75() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generatePredicate();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test76() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateExplainQuery(cockroachDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test77() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = cockroachDBExpressionGenerator0
                .getGlobalState();
        assertNull(cockroachDBProvider_CockroachDBGlobalState0);
    }

    @Test
    public void test78() throws Throwable {
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        // Undeclared exception!
        try {
            cockroachDBExpressionGenerator0.generateAggregate();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator", e);
        }
    }

    @Test
    public void test79() throws Throwable {
        CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new CockroachDBProvider.CockroachDBGlobalState();
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                cockroachDBProvider_CockroachDBGlobalState0);
        CockroachDBSelect cockroachDBSelect0 = cockroachDBExpressionGenerator0.generateSelect();
        CockroachDBUnaryPostfixOperation cockroachDBUnaryPostfixOperation0 = (CockroachDBUnaryPostfixOperation) cockroachDBExpressionGenerator0
                .isNull((CockroachDBExpression) cockroachDBSelect0);
        assertFalse(cockroachDBUnaryPostfixOperation0.omitBracketsWhenPrinting());
    }
}
