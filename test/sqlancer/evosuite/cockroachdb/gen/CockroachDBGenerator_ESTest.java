/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 20:52:22 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.gen;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;

import org.junit.jupiter.api.Test;

import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.cockroachdb.gen.CockroachDBGenerator;
import sqlancer.cockroachdb.gen.CockroachDBTableGenerator;

public class CockroachDBGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        StringBuilder stringBuilder0 = new StringBuilder();
        // Undeclared exception!
        try {
            CockroachDBGenerator.addColumns(stringBuilder0, (List<CockroachDBSchema.CockroachDBColumn>) null, true);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.gen.CockroachDBGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        StringBuilder stringBuilder0 = new StringBuilder();
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "EM4Q8s>.P", cockroachDBSchema_CockroachDBCompositeDataType0, false, false);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
        CockroachDBGenerator.addColumns(stringBuilder0, list0, false);
        assertEquals("(EM4Q8s>.P, EM4Q8s>.P, EM4Q8s>.P)", stringBuilder0.toString());
    }

    @Test
    public void test2() throws Throwable {
        StringBuilder stringBuilder0 = new StringBuilder();
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getRandom();
        CockroachDBSchema.CockroachDBColumn cockroachDBSchema_CockroachDBColumn0 = new CockroachDBSchema.CockroachDBColumn(
                "EM4Q8s>.P", cockroachDBSchema_CockroachDBCompositeDataType0, true, true);
        List<CockroachDBSchema.CockroachDBColumn> list0 = List.of(cockroachDBSchema_CockroachDBColumn0,
                cockroachDBSchema_CockroachDBColumn0, cockroachDBSchema_CockroachDBColumn0);
        CockroachDBGenerator.addColumns(stringBuilder0, list0, true);
        assertEquals("(EM4Q8s>.P, EM4Q8s>.P, EM4Q8s>.P)", stringBuilder0.toString());
    }

    // @Test
    // public void test3() throws Throwable {
    // CockroachDBProvider.CockroachDBGlobalState cockroachDBProvider_CockroachDBGlobalState0 = new
    // CockroachDBProvider.CockroachDBGlobalState();
    // CockroachDBTableGenerator cockroachDBTableGenerator0 = new CockroachDBTableGenerator(
    // cockroachDBProvider_CockroachDBGlobalState0);
    // }
}
