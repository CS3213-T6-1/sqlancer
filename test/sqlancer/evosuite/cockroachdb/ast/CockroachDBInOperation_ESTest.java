/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 23:14:49 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.cockroachdb.ast.CockroachDBConcatOperation;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBInOperation;
import sqlancer.cockroachdb.ast.CockroachDBJoin;
import sqlancer.cockroachdb.ast.CockroachDBSelect;
import sqlancer.cockroachdb.CockroachDBProvider;
import sqlancer.cockroachdb.gen.CockroachDBExpressionGenerator;

public class CockroachDBInOperation_ESTest {

    @Test
    public void test0() throws Throwable {
        CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation((CockroachDBExpression) null,
                (List<CockroachDBExpression>) null);
        List<CockroachDBExpression> list0 = cockroachDBInOperation0.getRight();
        assertNull(list0);
    }

    @Test
    public void test1() throws Throwable {
        CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant
                .createIntConstant(0L);
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.NATURAL;
        CockroachDBJoin cockroachDBJoin0 = CockroachDBJoin.createJoin(cockroachDBConstant_CockroachDBIntConstant0,
                cockroachDBConstant_CockroachDBIntConstant0, cockroachDBJoin_JoinType0,
                cockroachDBConstant_CockroachDBIntConstant0);
        CockroachDBConcatOperation cockroachDBConcatOperation0 = new CockroachDBConcatOperation(cockroachDBJoin0,
                cockroachDBConstant_CockroachDBIntConstant0);
        CockroachDBExpressionGenerator cockroachDBExpressionGenerator0 = new CockroachDBExpressionGenerator(
                (CockroachDBProvider.CockroachDBGlobalState) null);
        List<CockroachDBExpression> list0 = cockroachDBExpressionGenerator0.generateExpressions(0);
        CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBConcatOperation0, list0);
        List<CockroachDBExpression> list1 = cockroachDBInOperation0.getRight();
        assertSame(list0, list1);
    }

    @Test
    public void test2() throws Throwable {
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.FULL;
        CockroachDBJoin cockroachDBJoin0 = CockroachDBJoin.createJoin(cockroachDBSelect0, cockroachDBSelect0,
                cockroachDBJoin_JoinType0, cockroachDBSelect0);
        List<CockroachDBJoin> list0 = List.of(cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0,
                cockroachDBJoin0, cockroachDBJoin0, cockroachDBJoin0);
        cockroachDBSelect0.setJoinClauses(list0);
        List<CockroachDBExpression> list1 = cockroachDBSelect0.getJoinList();
        CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBSelect0, list1);
        List<CockroachDBExpression> list2 = cockroachDBInOperation0.getRight();
        assertSame(list2, list1);
    }

    @Test
    public void test3() throws Throwable {
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        List<CockroachDBExpression> list0 = cockroachDBSelect0.getJoinList();
        CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBSelect0, list0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBInOperation0.getLeft();
        assertSame(cockroachDBSelect0, cockroachDBExpression0);
    }

    @Test
    public void test4() throws Throwable {
        CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation((CockroachDBExpression) null,
                (List<CockroachDBExpression>) null);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBInOperation0.getLeft();
        assertNull(cockroachDBExpression0);
    }
}
