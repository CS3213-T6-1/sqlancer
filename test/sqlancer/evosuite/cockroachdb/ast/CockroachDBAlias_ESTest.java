/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:14:18 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.cockroachdb.ast.CockroachDBAlias;
import sqlancer.cockroachdb.ast.CockroachDBBinaryArithmeticOperation;
import sqlancer.cockroachdb.ast.CockroachDBCollate;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBTypeAnnotation;
import sqlancer.cockroachdb.CockroachDBSchema;
import sqlancer.common.visitor.UnaryOperation;

public class CockroachDBAlias_ESTest {

    @Test
    public void test0() throws Throwable {
        CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias((CockroachDBExpression) null, "");
        CockroachDBExpression cockroachDBExpression0 = cockroachDBAlias0.getExpression();
        assertNull(cockroachDBExpression0);
    }

    @Test
    public void test1() throws Throwable {
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(0);
        CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation(
                (CockroachDBExpression) null, cockroachDBSchema_CockroachDBCompositeDataType0);
        CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0 = CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator.MINUS;
        CockroachDBBinaryArithmeticOperation cockroachDBBinaryArithmeticOperation0 = new CockroachDBBinaryArithmeticOperation(
                cockroachDBTypeAnnotation0, (CockroachDBExpression) null,
                cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0);
        CockroachDBCollate cockroachDBCollate0 = new CockroachDBCollate(cockroachDBBinaryArithmeticOperation0,
                "7jJu,va(j+05oyr44}^");
        CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias(cockroachDBCollate0, "7jJu,va(j+05oyr44}^");
        boolean boolean0 = cockroachDBAlias0.omitBracketsWhenPrinting();
        assertTrue(boolean0);
    }

    @Test
    public void test2() throws Throwable {
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(0);
        CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation(
                (CockroachDBExpression) null, cockroachDBSchema_CockroachDBCompositeDataType0);
        CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0 = CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator.MINUS;
        CockroachDBBinaryArithmeticOperation cockroachDBBinaryArithmeticOperation0 = new CockroachDBBinaryArithmeticOperation(
                cockroachDBTypeAnnotation0, (CockroachDBExpression) null,
                cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0);
        CockroachDBCollate cockroachDBCollate0 = new CockroachDBCollate(cockroachDBBinaryArithmeticOperation0,
                "7jJu,va(j+05oyr44}^");
        CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias(cockroachDBCollate0, "7jJu,va(j+05oyr44}^");
        String string0 = cockroachDBAlias0.getOperatorRepresentation();
        assertEquals(" as 7jJu,va(j+05oyr44}^", string0);
    }

    @Test
    public void test3() throws Throwable {
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = CockroachDBSchema.CockroachDBCompositeDataType
                .getBit(0);
        CockroachDBTypeAnnotation cockroachDBTypeAnnotation0 = new CockroachDBTypeAnnotation(
                (CockroachDBExpression) null, cockroachDBSchema_CockroachDBCompositeDataType0);
        CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0 = CockroachDBBinaryArithmeticOperation.CockroachDBBinaryArithmeticOperator.MINUS;
        CockroachDBBinaryArithmeticOperation cockroachDBBinaryArithmeticOperation0 = new CockroachDBBinaryArithmeticOperation(
                cockroachDBTypeAnnotation0, (CockroachDBExpression) null,
                cockroachDBBinaryArithmeticOperation_CockroachDBBinaryArithmeticOperator0);
        CockroachDBCollate cockroachDBCollate0 = new CockroachDBCollate(cockroachDBBinaryArithmeticOperation0,
                "7jJu,va(j+05oyr44}^");
        CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias(cockroachDBCollate0, "7jJu,va(j+05oyr44}^");
        CockroachDBCollate cockroachDBCollate1 = (CockroachDBCollate) cockroachDBAlias0.getExpression();
        assertFalse(cockroachDBCollate1.omitBracketsWhenPrinting());
    }

    @Test
    public void test4() throws Throwable {
        CockroachDBAlias cockroachDBAlias0 = new CockroachDBAlias((CockroachDBExpression) null, ")*tZv");
        UnaryOperation.OperatorKind unaryOperation_OperatorKind0 = cockroachDBAlias0.getOperatorKind();
        assertEquals(UnaryOperation.OperatorKind.POSTFIX, unaryOperation_OperatorKind0);
    }
}
