/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 20:08:08 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.ast;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;

import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBSelect;

public class CockroachDBConstant_ESTest {

    @Test
    public void test00() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createIntervalConstant((-1L), 0L, 0L, 5L,
                3736L, 0L);
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test01() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createIntervalConstant(0L, 1000L, 2775L,
                1000L, 963L, 3328L);
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test02() throws Throwable {
        CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant
                .createIntConstant(2198L);
        assertEquals("2198", cockroachDBConstant_CockroachDBIntConstant0.toString());
    }

    @Test
    public void test03() throws Throwable {
        CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant
                .createIntConstant((-1427L));
        assertEquals((-1427L), cockroachDBConstant_CockroachDBIntConstant0.getValue());
    }

    @Test
    public void test04() throws Throwable {
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = CockroachDBConstant
                .createFloatConstant(0L);
        assertEquals("0.0", cockroachDBConstant_CockroachDBDoubleConstant0.toString());
    }

    @Test
    public void test05() throws Throwable {
        // Undeclared exception!
        CockroachDBConstant.createBitConstantWithSize(63686721);
    }

    @Test
    public void test06() throws Throwable {
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = new CockroachDBConstant.CockroachDBDoubleConstant(
                0L);
        assertEquals("0.0", cockroachDBConstant_CockroachDBDoubleConstant0.toString());
    }

    @Test
    public void test07() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                "TIMESTAMP");
        assertEquals("TIMESTAMP", cockroachDBConstant_CockroachDBBitConstant0.getValue());
    }

    @Test
    public void test08() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createBitConstantWithSize(3785);
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test09() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createTimeConstant(0L);
        LinkedList<CockroachDBExpression> linkedList0 = new LinkedList<CockroachDBExpression>();
        linkedList0.add(cockroachDBExpression0);
        linkedList0.offerFirst(cockroachDBExpression0);
        CockroachDBConstant.CockroachDBArrayConstant cockroachDBConstant_CockroachDBArrayConstant0 = new CockroachDBConstant.CockroachDBArrayConstant(
                linkedList0);
        String string0 = cockroachDBConstant_CockroachDBArrayConstant0.toString();
        assertNotNull(string0);
    }

    @Test
    public void test10() throws Throwable {
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = CockroachDBConstant
                .createFloatConstant(Double.NEGATIVE_INFINITY);
        String string0 = cockroachDBConstant_CockroachDBDoubleConstant0.toString();
        assertEquals("FLOAT '-Inf'", string0);
    }

    @Test
    public void test11() throws Throwable {
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = CockroachDBConstant
                .createFloatConstant(Double.POSITIVE_INFINITY);
        String string0 = cockroachDBConstant_CockroachDBDoubleConstant0.toString();
        assertEquals("FLOAT '+Inf'", string0);
    }

    @Test
    public void test12() throws Throwable {
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = CockroachDBConstant
                .createFloatConstant(1448.02433160807);
        String string0 = cockroachDBConstant_CockroachDBDoubleConstant0.toString();
        assertEquals("1448.02433160807", string0);
    }

    @Test
    public void test13() throws Throwable {
        CockroachDBConstant.CockroachDBBooleanConstant cockroachDBConstant_CockroachDBBooleanConstant0 = new CockroachDBConstant.CockroachDBBooleanConstant(
                true);
        String string0 = cockroachDBConstant_CockroachDBBooleanConstant0.toString();
        assertEquals("true", string0);
    }

    @Test
    public void test14() throws Throwable {
        CockroachDBConstant.CockroachDBBooleanConstant cockroachDBConstant_CockroachDBBooleanConstant0 = new CockroachDBConstant.CockroachDBBooleanConstant(
                false);
        boolean boolean0 = cockroachDBConstant_CockroachDBBooleanConstant0.getValue();
        assertFalse(boolean0);
    }

    @Test
    public void test15() throws Throwable {
        CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = new CockroachDBConstant.CockroachDBIntConstant(
                1L);
        String string0 = cockroachDBConstant_CockroachDBIntConstant0.toString();
        assertEquals("1", string0);
    }

    @Test
    public void test16() throws Throwable {
        CockroachDBConstant.CockroachDBTimeRelatedConstant cockroachDBConstant_CockroachDBTimeRelatedConstant0 = new CockroachDBConstant.CockroachDBTimeRelatedConstant(
                "B'10001001000'", 1096L, "10001001000");
        String string0 = cockroachDBConstant_CockroachDBTimeRelatedConstant0.toString();
        assertEquals("B'10001001000' '10001001000'", string0);
    }

    @Test
    public void test17() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = (CockroachDBConstant.CockroachDBBitConstant) CockroachDBConstant
                .createBitConstantWithSize((-4158));
        assertEquals("", cockroachDBConstant_CockroachDBBitConstant0.getValue());
    }

    @Test
    public void test18() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                (-756L));
        String string0 = cockroachDBConstant_CockroachDBBitConstant0.getValue();
        assertEquals("1111111111111111111111111111111111111111111111111111110100001100", string0);
    }

    @Test
    public void test19() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                75L);
        String string0 = cockroachDBConstant_CockroachDBBitConstant0.toString();
        assertEquals("B'1001011'", string0);
    }

    @Test
    public void test20() throws Throwable {
        CockroachDBConstant.CockroachDBIntervalConstant cockroachDBConstant_CockroachDBIntervalConstant0 = new CockroachDBConstant.CockroachDBIntervalConstant(
                (-756L), (-1L), 3L, 0L, 0L, 474L);
        String string0 = cockroachDBConstant_CockroachDBIntervalConstant0.toString();
        assertEquals("(INTERVAL '-756 year -1 months 3 days 0 hours 0 minutes 474 seconds')", string0);
    }

    @Test
    public void test21() throws Throwable {
        CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 = new CockroachDBConstant.CockroachDBNullConstant();
        String string0 = cockroachDBConstant_CockroachDBNullConstant0.toString();
        assertEquals("NULL", string0);
    }

    @Test
    public void test22() throws Throwable {
        CockroachDBConstant.CockroachDBTextConstant cockroachDBConstant_CockroachDBTextConstant0 = CockroachDBConstant
                .createStringConstant("");
        String string0 = cockroachDBConstant_CockroachDBTextConstant0.toString();
        assertEquals("''", string0);
    }

    @Test
    public void test23() throws Throwable {
        CockroachDBConstant.CockroachDBTextConstant cockroachDBConstant_CockroachDBTextConstant0 = new CockroachDBConstant.CockroachDBTextConstant(
                "SCRUB");
        String string0 = cockroachDBConstant_CockroachDBTextConstant0.getValue();
        assertEquals("SCRUB", string0);
    }

    @Test
    public void test24() throws Throwable {
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByExpressions();
        CockroachDBConstant.CockroachDBArrayConstant cockroachDBConstant_CockroachDBArrayConstant0 = new CockroachDBConstant.CockroachDBArrayConstant(
                list0);
        List<CockroachDBExpression> list1 = cockroachDBConstant_CockroachDBArrayConstant0.getElements();
        assertSame(list0, list1);
    }

    @Test
    public void test25() throws Throwable {
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByExpressions();
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createArrayConstant(list0);
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test26() throws Throwable {
        CockroachDBConstant cockroachDBConstant0 = CockroachDBConstant.createBooleanConstant(false);
        assertEquals("false", cockroachDBConstant0.toString());
    }

    @Test
    public void test27() throws Throwable {
        CockroachDBConstant.CockroachDBIntConstant cockroachDBConstant_CockroachDBIntConstant0 = CockroachDBConstant
                .createIntConstant(0L);
        long long0 = cockroachDBConstant_CockroachDBIntConstant0.getValue();
        assertEquals(0L, long0);
    }

    @Test
    public void test28() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createTimestamptzConstant((-611L));
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test29() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createTimestampConstant(0L);
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test30() throws Throwable {
        CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 = CockroachDBConstant
                .createNullConstant();
        assertEquals("NULL", cockroachDBConstant_CockroachDBNullConstant0.toString());
    }

    @Test
    public void test31() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createTimetz(1L);
        assertNotNull(cockroachDBExpression0);
    }

    @Test
    public void test32() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = (CockroachDBConstant.CockroachDBBitConstant) CockroachDBConstant
                .createBitConstant(463L);
        assertEquals("111001111", cockroachDBConstant_CockroachDBBitConstant0.getValue());
    }

    @Test
    public void test33() throws Throwable {
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = CockroachDBConstant
                .createFloatConstant(1.7976931348623157E308);
        double double0 = cockroachDBConstant_CockroachDBDoubleConstant0.getValue();
        assertEquals(1.7976931348623157E308, double0, 0.01);
    }
}
