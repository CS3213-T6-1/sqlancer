/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 17:31:33 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.cockroachdb.ast.CockroachDBBetweenOperation;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBInOperation;
import sqlancer.cockroachdb.ast.CockroachDBSelect;

public class CockroachDBBetweenOperation_ESTest {

    @Test
    public void test0() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createTimeConstant(0L);
        CockroachDBSelect cockroachDBSelect0 = new CockroachDBSelect();
        List<CockroachDBExpression> list0 = cockroachDBSelect0.getGroupByExpressions();
        CockroachDBInOperation cockroachDBInOperation0 = new CockroachDBInOperation(cockroachDBExpression0, list0);
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                "&C");
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0 = CockroachDBBetweenOperation.CockroachDBBetweenOperatorType.BETWEEN;
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                cockroachDBInOperation0, cockroachDBSelect0, cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0);
        assertEquals(CockroachDBBetweenOperation.CockroachDBBetweenOperatorType.BETWEEN,
                cockroachDBBetweenOperation0.getType());
    }

    @Test
    public void test1() throws Throwable {
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0 = CockroachDBBetweenOperation.CockroachDBBetweenOperatorType.NOT_BETWEEN;
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                (CockroachDBExpression) null, (CockroachDBExpression) null, (CockroachDBExpression) null,
                cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0);
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType1 = cockroachDBBetweenOperation0
                .getType();
        assertSame(cockroachDBBetweenOperation_CockroachDBBetweenOperatorType1,
                cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0);
    }

    @Test
    public void test2() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                (-4183L));
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0 = CockroachDBBetweenOperation.CockroachDBBetweenOperatorType.NOT_BETWEEN;
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                cockroachDBConstant_CockroachDBBitConstant0, cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBBetweenOperation0.getRight();
        assertSame(cockroachDBExpression0, cockroachDBConstant_CockroachDBBitConstant0);
    }

    @Test
    public void test3() throws Throwable {
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                (-4183L));
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0 = CockroachDBBetweenOperation.CockroachDBBetweenOperatorType.NOT_BETWEEN;
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                cockroachDBConstant_CockroachDBBitConstant0, cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBBetweenOperation0.getExpr();
        assertSame(cockroachDBExpression0, cockroachDBConstant_CockroachDBBitConstant0);
    }

    @Test
    public void test4() throws Throwable {
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                (CockroachDBExpression) null, (CockroachDBExpression) null, (CockroachDBExpression) null,
                (CockroachDBBetweenOperation.CockroachDBBetweenOperatorType) null);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBBetweenOperation0.getExpr();
        assertNull(cockroachDBExpression0);
    }

    @Test
    public void test5() throws Throwable {
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                (CockroachDBExpression) null, (CockroachDBExpression) null, (CockroachDBExpression) null,
                (CockroachDBBetweenOperation.CockroachDBBetweenOperatorType) null);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBBetweenOperation0.getRight();
        assertNull(cockroachDBExpression0);
    }

    @Test
    public void test6() throws Throwable {
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                (CockroachDBExpression) null, (CockroachDBExpression) null, (CockroachDBExpression) null,
                (CockroachDBBetweenOperation.CockroachDBBetweenOperatorType) null);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBBetweenOperation0.getLeft();
        assertNull(cockroachDBExpression0);
    }

    @Test
    public void test7() throws Throwable {
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                (CockroachDBExpression) null, (CockroachDBExpression) null, (CockroachDBExpression) null,
                (CockroachDBBetweenOperation.CockroachDBBetweenOperatorType) null);
        cockroachDBBetweenOperation0.getType();
    }

    @Test
    public void test8() throws Throwable {
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0 = CockroachDBBetweenOperation.CockroachDBBetweenOperatorType
                .getRandom();
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant0 = new CockroachDBConstant.CockroachDBBitConstant(
                "bpchar_ops");
        CockroachDBBetweenOperation cockroachDBBetweenOperation0 = new CockroachDBBetweenOperation(
                cockroachDBConstant_CockroachDBBitConstant0, cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBConstant_CockroachDBBitConstant0,
                cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0);
        CockroachDBConstant.CockroachDBBitConstant cockroachDBConstant_CockroachDBBitConstant1 = (CockroachDBConstant.CockroachDBBitConstant) cockroachDBBetweenOperation0
                .getLeft();
        assertEquals("bpchar_ops", cockroachDBConstant_CockroachDBBitConstant1.getValue());
    }

    @Test
    public void test9() throws Throwable {
        CockroachDBBetweenOperation.CockroachDBBetweenOperatorType cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0 = CockroachDBBetweenOperation.CockroachDBBetweenOperatorType.NOT_BETWEEN_SYMMETRIC;
        String string0 = cockroachDBBetweenOperation_CockroachDBBetweenOperatorType0.getStringRepresentation();
        assertEquals("NOT BETWEEN SYMMETRIC", string0);
    }
}
