/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 22:16:39 GMT 2025
 */

package sqlancer.evosuite.cockroachdb.ast;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;

import org.junit.jupiter.api.Test;

import sqlancer.cockroachdb.ast.CockroachDBCast;
import sqlancer.cockroachdb.ast.CockroachDBConstant;
import sqlancer.cockroachdb.ast.CockroachDBExpression;
import sqlancer.cockroachdb.ast.CockroachDBFunction;
import sqlancer.cockroachdb.ast.CockroachDBFunctionCall;
import sqlancer.cockroachdb.ast.CockroachDBJoin;
import sqlancer.cockroachdb.ast.CockroachDBUnaryPostfixOperation;
import sqlancer.cockroachdb.CockroachDBSchema;

public class CockroachDBJoin_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
        CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
        CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
                (List<CockroachDBExpression>) null);
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
                cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
        CockroachDBJoin cockroachDBJoin1 = CockroachDBJoin.createJoin(cockroachDBJoin0, cockroachDBFunctionCall0,
                cockroachDBJoin_JoinType0, cockroachDBFunctionCall0);
        assertFalse(cockroachDBJoin1.equals((Object) cockroachDBJoin0));
    }

    @Test
    public void test01() throws Throwable {
        CockroachDBExpression cockroachDBExpression0 = CockroachDBConstant.createTimestamptzConstant(0L);
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.FULL;
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBExpression0, cockroachDBExpression0,
                cockroachDBExpression0, cockroachDBJoin_JoinType0);
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType1 = CockroachDBJoin.JoinType.CROSS;
        CockroachDBSchema.CockroachDBDataType cockroachDBSchema_CockroachDBDataType0 = CockroachDBSchema.CockroachDBDataType.VARBIT;
        CockroachDBSchema.CockroachDBCompositeDataType cockroachDBSchema_CockroachDBCompositeDataType0 = new CockroachDBSchema.CockroachDBCompositeDataType(
                cockroachDBSchema_CockroachDBDataType0);
        CockroachDBCast cockroachDBCast0 = new CockroachDBCast(cockroachDBJoin0,
                cockroachDBSchema_CockroachDBCompositeDataType0);
        CockroachDBUnaryPostfixOperation.CockroachDBUnaryPostfixOperator cockroachDBUnaryPostfixOperation_CockroachDBUnaryPostfixOperator0 = CockroachDBUnaryPostfixOperation.CockroachDBUnaryPostfixOperator.IS_FALSE;
        CockroachDBUnaryPostfixOperation cockroachDBUnaryPostfixOperation0 = new CockroachDBUnaryPostfixOperation(
                cockroachDBExpression0, cockroachDBUnaryPostfixOperation_CockroachDBUnaryPostfixOperator0);
        CockroachDBJoin cockroachDBJoin1 = CockroachDBJoin.createJoin(cockroachDBExpression0, cockroachDBCast0,
                cockroachDBJoin_JoinType1, cockroachDBUnaryPostfixOperation0);
        assertFalse(cockroachDBJoin1.equals((Object) cockroachDBJoin0));
    }

    @Test
    public void test02() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.NATURAL;
        CockroachDBJoin cockroachDBJoin0 = CockroachDBJoin.createJoin((CockroachDBExpression) null,
                (CockroachDBExpression) null, cockroachDBJoin_JoinType0, (CockroachDBExpression) null);
        CockroachDBJoin cockroachDBJoin1 = CockroachDBJoin.createJoin((CockroachDBExpression) null,
                (CockroachDBExpression) null, cockroachDBJoin_JoinType0, cockroachDBJoin0);
        assertFalse(cockroachDBJoin1.equals((Object) cockroachDBJoin0));
    }

    @Test
    public void test03() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.CROSS;
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin((CockroachDBExpression) null,
                (CockroachDBExpression) null, (CockroachDBExpression) null, cockroachDBJoin_JoinType0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBJoin0.getOnClause();
        assertNull(cockroachDBExpression0);
    }

    @Test
    public void test04() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.NATURAL;
        CockroachDBJoin cockroachDBJoin0 = CockroachDBJoin.createJoin((CockroachDBExpression) null,
                (CockroachDBExpression) null, cockroachDBJoin_JoinType0, (CockroachDBExpression) null);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBJoin0.getLeftTable();
        assertNull(cockroachDBExpression0);
    }

    @Test
    public void test05() throws Throwable {
        CockroachDBConstant.CockroachDBNullConstant cockroachDBConstant_CockroachDBNullConstant0 = CockroachDBConstant
                .createNullConstant();
        CockroachDBJoin.JoinType[] cockroachDBJoin_JoinTypeArray0 = new CockroachDBJoin.JoinType[1];
        CockroachDBConstant.CockroachDBDoubleConstant cockroachDBConstant_CockroachDBDoubleConstant0 = new CockroachDBConstant.CockroachDBDoubleConstant(
                1413);
        // Undeclared exception!
        try {
            CockroachDBJoin.createJoin(cockroachDBConstant_CockroachDBDoubleConstant0,
                    cockroachDBConstant_CockroachDBNullConstant0, cockroachDBJoin_JoinTypeArray0[0],
                    cockroachDBConstant_CockroachDBDoubleConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.cockroachdb.ast.CockroachDBJoin", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
        CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
        CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
                (List<CockroachDBExpression>) null);
        CockroachDBJoin cockroachDBJoin0 = CockroachDBJoin.createJoin(cockroachDBFunctionCall0,
                (CockroachDBExpression) null, cockroachDBJoin_JoinType0, cockroachDBFunctionCall0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBJoin0.getRightTable();
        assertNull(cockroachDBExpression0);
    }

    // @Test
    // public void test07() throws Throwable {
    // CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
    // CockroachDBJoin.JoinType[] cockroachDBJoin_JoinTypeArray0 = new CockroachDBJoin.JoinType[3];
    // cockroachDBJoin_JoinTypeArray0[0] = cockroachDBJoin_JoinType0;
    // CockroachDBJoin.JoinType cockroachDBJoin_JoinType1 = CockroachDBJoin.JoinType.getRandomExcept("COCKROACHDB",
    // cockroachDBJoin_JoinTypeArray0);
    // assertEquals(CockroachDBJoin.JoinType.LEFT, cockroachDBJoin_JoinType1);
    // }

    @Test
    public void test08() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
        CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
        CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
                (List<CockroachDBExpression>) null);
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
                cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
        cockroachDBJoin0.setOnClause((CockroachDBExpression) cockroachDBFunctionCall0);
        assertEquals(CockroachDBFunction.LENGTH2, cockroachDBFunctionCall0.getFunction());
    }

    // @Test
    // public void test09() throws Throwable {
    // CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
    // CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
    // CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
    // (List<CockroachDBExpression>) null);
    // CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
    // cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
    // cockroachDBJoin0.setJoinType(cockroachDBJoin_JoinType0);
    // assertEquals(CockroachDBJoin.JoinType.INNER, cockroachDBJoin0.getJoinType());
    // }

    // @Test
    // public void test10() throws Throwable {
    // CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
    // CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
    // CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
    // (List<CockroachDBExpression>) null);
    // CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
    // cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
    // CockroachDBJoin.JoinType cockroachDBJoin_JoinType1 = cockroachDBJoin0.getJoinType();
    // assertEquals(CockroachDBJoin.JoinType.INNER, cockroachDBJoin_JoinType1);
    // }

    @Test
    public void test11() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
        CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
        CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
                (List<CockroachDBExpression>) null);
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
                cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBJoin0.getLeftTable();
        assertSame(cockroachDBExpression0, cockroachDBFunctionCall0);
    }

    @Test
    public void test12() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
        CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
        CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
                (List<CockroachDBExpression>) null);
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
                cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
        CockroachDBFunctionCall cockroachDBFunctionCall1 = (CockroachDBFunctionCall) cockroachDBJoin0.getRightTable();
        assertEquals(CockroachDBFunction.LENGTH2, cockroachDBFunctionCall1.getFunction());
    }

    @Test
    public void test13() throws Throwable {
        CockroachDBJoin.JoinType cockroachDBJoin_JoinType0 = CockroachDBJoin.JoinType.getRandom();
        CockroachDBFunction cockroachDBFunction0 = CockroachDBFunction.LENGTH2;
        CockroachDBFunctionCall cockroachDBFunctionCall0 = new CockroachDBFunctionCall(cockroachDBFunction0,
                (List<CockroachDBExpression>) null);
        CockroachDBJoin cockroachDBJoin0 = new CockroachDBJoin(cockroachDBFunctionCall0, cockroachDBFunctionCall0,
                cockroachDBFunctionCall0, cockroachDBJoin_JoinType0);
        CockroachDBExpression cockroachDBExpression0 = cockroachDBJoin0.getOnClause();
        assertSame(cockroachDBFunctionCall0, cockroachDBExpression0);
    }
}
