/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:55:45 GMT 2025
 */

package sqlancer.evosuite.databend.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.evosuite.runtime.Random;
import org.junit.jupiter.api.Test;
import sqlancer.databend.ast.DatabendCastOperation;
import sqlancer.databend.ast.DatabendColumnValue;
import sqlancer.databend.ast.DatabendConstant;
import sqlancer.databend.ast.DatabendExpression;
import sqlancer.databend.ast.DatabendSelect;
import sqlancer.databend.DatabendSchema;

public class DatabendCastOperation_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation((DatabendExpression) null,
                databendSchema_DatabendCompositeDataType0);
        DatabendExpression databendExpression0 = databendCastOperation0.getExpression();
        assertNull(databendExpression0);
    }

    @Test
    public void test01() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("",
                databendSchema_DatabendCompositeDataType0, true, true);
        DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
        DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0,
                databendConstant_DatabendNullConstant0);
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0,
                databendSchema_DatabendCompositeDataType0);
        DatabendExpression databendExpression0 = databendCastOperation0.getExpression();
        assertSame(databendColumnValue0, databendExpression0);
    }

    @Test
    public void test02() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("",
                databendSchema_DatabendCompositeDataType0, true, true);
        DatabendConstant.DatabendNullConstant databendConstant_DatabendNullConstant0 = new DatabendConstant.DatabendNullConstant();
        DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0,
                databendConstant_DatabendNullConstant0);
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0,
                databendSchema_DatabendCompositeDataType0);
        DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
        assertFalse(databendConstant0.isBoolean());
    }

    @Test
    public void test03() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn(")|$g`F-",
                databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant databendConstant0 = DatabendConstant.createIntConstant(770);
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant0);
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0,
                databendSchema_DatabendCompositeDataType0);
        DatabendConstant databendConstant1 = databendCastOperation0.getExpectedValue();
        assertEquals("770", databendConstant1.toString());
    }

    @Test
    public void test04() throws Throwable {
        Random.setNextRandom(760);
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn(")|$g`F-",
                databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant databendConstant0 = DatabendConstant.createIntConstant(770);
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant0);
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0,
                databendSchema_DatabendCompositeDataType0);
        DatabendConstant databendConstant1 = databendCastOperation0.getExpectedValue();
        assertFalse(databendConstant1.isInt());
    }

    @Test
    public void test05() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation((DatabendExpression) null,
                databendSchema_DatabendCompositeDataType0);
        // Undeclared exception!
        try {
            databendCastOperation0.getExpectedValue();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.databend.ast.DatabendCastOperation", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        DatabendCastOperation databendCastOperation0 = null;
        try {
            databendCastOperation0 = new DatabendCastOperation((DatabendExpression) null,
                    (DatabendSchema.DatabendCompositeDataType) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.databend.ast.DatabendCastOperation", e);
        }
    }

    @Test
    public void test07() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSelect databendSelect0 = new DatabendSelect();
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendSelect0,
                databendSchema_DatabendCompositeDataType0);
        DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
        assertNull(databendConstant0);
    }

    @Test
    public void test08() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation((DatabendExpression) null,
                databendSchema_DatabendCompositeDataType0);
        String string0 = databendCastOperation0.getOperatorRepresentation();
        assertEquals("::SMALLINT", string0);
    }

    @Test
    public void test09() throws Throwable {
        DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.VARCHAR;
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(
                databendSchema_DatabendDataType0, 2041757);
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("",
                databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant.DatabendFloatConstant databendConstant_DatabendFloatConstant0 = new DatabendConstant.DatabendFloatConstant(
                0.0);
        DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0,
                databendConstant_DatabendFloatConstant0);
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0,
                databendSchema_DatabendCompositeDataType0);
        DatabendConstant databendConstant0 = databendCastOperation0.getExpectedValue();
        assertFalse(databendConstant0.isNull());
    }

    @Test
    public void test10() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn(")|$g`F-",
                databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant databendConstant0 = DatabendConstant.createIntConstant(770);
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant0);
        DatabendCastOperation databendCastOperation0 = new DatabendCastOperation(databendColumnValue0,
                databendSchema_DatabendCompositeDataType0);
        DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = databendCastOperation0.getExpectedType();
        assertEquals(DatabendSchema.DatabendDataType.INT, databendSchema_DatabendDataType0);
    }
}
