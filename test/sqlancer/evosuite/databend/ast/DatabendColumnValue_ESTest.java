/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 18:52:46 GMT 2025
 */

package sqlancer.evosuite.databend.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.databend.ast.DatabendColumnValue;
import sqlancer.databend.ast.DatabendConstant;
import sqlancer.databend.DatabendSchema;

public class DatabendColumnValue_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn(
                "*Ea7@:i8e|D5", databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant databendConstant0 = DatabendConstant.createStringConstant("*Ea7@:i8e|D5");
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant0);
        DatabendConstant databendConstant1 = databendColumnValue0.getExpectedValue();
        assertFalse(databendConstant1.isFloat());
    }

    @Test
    public void test1() throws Throwable {
        DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.TIMESTAMP;
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(
                databendSchema_DatabendDataType0, (-2536));
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("AO",
                databendSchema_DatabendCompositeDataType0, true, true);
        DatabendConstant databendConstant0 = DatabendConstant.createNullConstant();
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant0);
        DatabendConstant databendConstant1 = databendColumnValue0.getExpectedValue();
        assertFalse(databendConstant1.isString());
    }

    @Test
    public void test2() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("XMLTEXT",
                databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant.DatabendFloatConstant databendConstant_DatabendFloatConstant0 = new DatabendConstant.DatabendFloatConstant(
                (-1543.447151026));
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant_DatabendFloatConstant0);
        DatabendConstant databendConstant0 = databendColumnValue0.getExpectedValue();
        assertEquals("-1543.447151026", databendConstant0.toString());
    }

    @Test
    public void test3() throws Throwable {
        DatabendConstant.DatabendBooleanConstant databendConstant_DatabendBooleanConstant0 = new DatabendConstant.DatabendBooleanConstant(
                false);
        DatabendColumnValue databendColumnValue0 = new DatabendColumnValue((DatabendSchema.DatabendColumn) null,
                databendConstant_DatabendBooleanConstant0);
        DatabendConstant databendConstant0 = databendColumnValue0.getExpectedValue();
        assertFalse(databendConstant0.isInt());
    }

    @Test
    public void test4() throws Throwable {
        DatabendConstant.DatabendBooleanConstant databendConstant_DatabendBooleanConstant0 = new DatabendConstant.DatabendBooleanConstant(
                false);
        DatabendColumnValue databendColumnValue0 = new DatabendColumnValue((DatabendSchema.DatabendColumn) null,
                databendConstant_DatabendBooleanConstant0);
        // Undeclared exception!
        try {
            databendColumnValue0.getExpectedType();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.databend.ast.DatabendColumnValue", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = DatabendSchema.DatabendDataType.FLOAT;
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = new DatabendSchema.DatabendCompositeDataType(
                databendSchema_DatabendDataType0, 97526364);
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("",
                databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant.DatabendIntConstant databendConstant_DatabendIntConstant0 = new DatabendConstant.DatabendIntConstant(
                97526364);
        DatabendColumnValue databendColumnValue0 = new DatabendColumnValue(databendSchema_DatabendColumn0,
                databendConstant_DatabendIntConstant0);
        DatabendConstant.DatabendIntConstant databendConstant_DatabendIntConstant1 = (DatabendConstant.DatabendIntConstant) databendColumnValue0
                .getExpectedValue();
        assertEquals(97526364L, databendConstant_DatabendIntConstant1.getValue());
    }

    @Test
    public void test6() throws Throwable {
        DatabendSchema.DatabendCompositeDataType databendSchema_DatabendCompositeDataType0 = DatabendSchema.DatabendCompositeDataType
                .getRandomWithoutNull();
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn(
                "*Ea7@:i8e|D5", databendSchema_DatabendCompositeDataType0, false, false);
        DatabendConstant databendConstant0 = DatabendConstant.createStringConstant("*Ea7@:i8e|D5");
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create(databendSchema_DatabendColumn0,
                databendConstant0);
        DatabendSchema.DatabendDataType databendSchema_DatabendDataType0 = databendColumnValue0.getExpectedType();
        assertEquals(DatabendSchema.DatabendDataType.INT, databendSchema_DatabendDataType0);
    }

    @Test
    public void test7() throws Throwable {
        DatabendColumnValue databendColumnValue0 = DatabendColumnValue.create((DatabendSchema.DatabendColumn) null,
                (DatabendConstant) null);
        DatabendConstant databendConstant0 = databendColumnValue0.getExpectedValue();
        assertNull(databendConstant0);
    }
}
