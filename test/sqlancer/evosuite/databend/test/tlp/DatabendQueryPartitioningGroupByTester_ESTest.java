/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 03:20:52 GMT 2025
 */

package sqlancer.evosuite.databend.test.tlp;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.databend.ast.DatabendExpression;
import sqlancer.databend.DatabendProvider;
import sqlancer.databend.DatabendSchema;
import sqlancer.databend.test.tlp.DatabendQueryPartitioningGroupByTester;

public class DatabendQueryPartitioningGroupByTester_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        DatabendQueryPartitioningGroupByTester databendQueryPartitioningGroupByTester0 = new DatabendQueryPartitioningGroupByTester(
                (DatabendProvider.DatabendGlobalState) null);
        DatabendSchema.DatabendColumn databendSchema_DatabendColumn0 = new DatabendSchema.DatabendColumn("",
                (DatabendSchema.DatabendCompositeDataType) null, false, false);
        List<DatabendSchema.DatabendColumn> list0 = List.of(databendSchema_DatabendColumn0);
        DatabendSchema.DatabendTable databendSchema_DatabendTable0 = new DatabendSchema.DatabendTable("", list0, false);
        List<DatabendSchema.DatabendTable> list1 = List.of(databendSchema_DatabendTable0, databendSchema_DatabendTable0,
                databendSchema_DatabendTable0, databendSchema_DatabendTable0, databendSchema_DatabendTable0,
                databendSchema_DatabendTable0, databendSchema_DatabendTable0, databendSchema_DatabendTable0,
                databendSchema_DatabendTable0, databendSchema_DatabendTable0);
        DatabendSchema.DatabendTables databendSchema_DatabendTables0 = new DatabendSchema.DatabendTables(list1);
        databendQueryPartitioningGroupByTester0.targetTables = databendSchema_DatabendTables0;
        List<DatabendExpression> list2 = databendQueryPartitioningGroupByTester0.generateFetchColumns();
        assertFalse(list2.isEmpty());
    }

    @Test
    public void test1() throws Throwable {
        DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
        DatabendQueryPartitioningGroupByTester databendQueryPartitioningGroupByTester0 = new DatabendQueryPartitioningGroupByTester(
                databendProvider_DatabendGlobalState0);
        List<DatabendSchema.DatabendTable> list0 = List.of();
        DatabendSchema.DatabendTables databendSchema_DatabendTables0 = new DatabendSchema.DatabendTables(list0);
        databendQueryPartitioningGroupByTester0.targetTables = databendSchema_DatabendTables0;
        // Undeclared exception!
        try {
            databendQueryPartitioningGroupByTester0.generateFetchColumns();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // [] 1
            //
        }
    }

    @Test
    public void test2() throws Throwable {
        DatabendProvider.DatabendGlobalState databendProvider_DatabendGlobalState0 = new DatabendProvider.DatabendGlobalState();
        DatabendQueryPartitioningGroupByTester databendQueryPartitioningGroupByTester0 = new DatabendQueryPartitioningGroupByTester(
                databendProvider_DatabendGlobalState0);
        // Undeclared exception!
        try {
            databendQueryPartitioningGroupByTester0.check();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test3() throws Throwable {
        DatabendQueryPartitioningGroupByTester databendQueryPartitioningGroupByTester0 = new DatabendQueryPartitioningGroupByTester(
                (DatabendProvider.DatabendGlobalState) null);
        // Undeclared exception!
        try {
            databendQueryPartitioningGroupByTester0.generateFetchColumns();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.databend.test.tlp.DatabendQueryPartitioningGroupByTester", e);
        }
    }

    @Test
    public void test4() throws Throwable {
        DatabendQueryPartitioningGroupByTester databendQueryPartitioningGroupByTester0 = new DatabendQueryPartitioningGroupByTester(
                (DatabendProvider.DatabendGlobalState) null);
        // Undeclared exception!
        try {
            databendQueryPartitioningGroupByTester0.check();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.databend.test.tlp.DatabendQueryPartitioningBase", e);
        }
    }
}
