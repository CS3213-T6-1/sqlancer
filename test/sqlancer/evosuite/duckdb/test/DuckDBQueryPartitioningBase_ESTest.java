/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 13:56:37 GMT 2025
 */

package sqlancer.evosuite.duckdb.test;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import org.junit.jupiter.api.Test;
import sqlancer.common.gen.ExpressionGenerator;
import sqlancer.duckdb.ast.DuckDBExpression;
import sqlancer.duckdb.DuckDBProvider;
import sqlancer.duckdb.DuckDBSchema;
import sqlancer.duckdb.gen.DuckDBExpressionGenerator;
import sqlancer.duckdb.test.DuckDBQueryPartitioningBase;

public class DuckDBQueryPartitioningBase_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        DuckDBProvider.DuckDBGlobalState duckDBProvider_DuckDBGlobalState0 = new DuckDBProvider.DuckDBGlobalState();
        DuckDBQueryPartitioningBase duckDBQueryPartitioningBase0 = new DuckDBQueryPartitioningBase(
                duckDBProvider_DuckDBGlobalState0);
        DuckDBExpressionGenerator duckDBExpressionGenerator0 = new DuckDBExpressionGenerator(
                duckDBProvider_DuckDBGlobalState0);
        duckDBQueryPartitioningBase0.gen = duckDBExpressionGenerator0;
        ExpressionGenerator<DuckDBExpression> expressionGenerator0 = duckDBQueryPartitioningBase0.getGen();
        assertNotNull(expressionGenerator0);
    }

    @Test
    public void test1() throws Throwable {
        DuckDBProvider.DuckDBGlobalState duckDBProvider_DuckDBGlobalState0 = new DuckDBProvider.DuckDBGlobalState();
        DuckDBQueryPartitioningBase duckDBQueryPartitioningBase0 = new DuckDBQueryPartitioningBase(
                duckDBProvider_DuckDBGlobalState0);
        LinkedList<DuckDBSchema.DuckDBTable> linkedList0 = new LinkedList<DuckDBSchema.DuckDBTable>();
        DuckDBSchema.DuckDBTables duckDBSchema_DuckDBTables0 = new DuckDBSchema.DuckDBTables(linkedList0);
        duckDBQueryPartitioningBase0.targetTables = duckDBSchema_DuckDBTables0;
        // Undeclared exception!
        try {
            duckDBQueryPartitioningBase0.generateFetchColumns();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // [] 1
            //
        }
    }

    @Test
    public void test2() throws Throwable {
        DuckDBProvider.DuckDBGlobalState duckDBProvider_DuckDBGlobalState0 = new DuckDBProvider.DuckDBGlobalState();
        DuckDBQueryPartitioningBase duckDBQueryPartitioningBase0 = new DuckDBQueryPartitioningBase(
                duckDBProvider_DuckDBGlobalState0);
        // Undeclared exception!
        try {
            duckDBQueryPartitioningBase0.check();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test3() throws Throwable {
        DuckDBProvider.DuckDBGlobalState duckDBProvider_DuckDBGlobalState0 = new DuckDBProvider.DuckDBGlobalState();
        DuckDBQueryPartitioningBase duckDBQueryPartitioningBase0 = new DuckDBQueryPartitioningBase(
                duckDBProvider_DuckDBGlobalState0);
        // Undeclared exception!
        try {
            duckDBQueryPartitioningBase0.generateFetchColumns();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.duckdb.test.DuckDBQueryPartitioningBase", e);
        }
    }

    @Test
    public void test4() throws Throwable {
        DuckDBQueryPartitioningBase duckDBQueryPartitioningBase0 = new DuckDBQueryPartitioningBase(
                (DuckDBProvider.DuckDBGlobalState) null);
        // Undeclared exception!
        try {
            duckDBQueryPartitioningBase0.check();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.duckdb.test.DuckDBQueryPartitioningBase", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        DuckDBProvider.DuckDBGlobalState duckDBProvider_DuckDBGlobalState0 = new DuckDBProvider.DuckDBGlobalState();
        DuckDBQueryPartitioningBase duckDBQueryPartitioningBase0 = new DuckDBQueryPartitioningBase(
                duckDBProvider_DuckDBGlobalState0);
        ExpressionGenerator<DuckDBExpression> expressionGenerator0 = duckDBQueryPartitioningBase0.getGen();
        assertNull(expressionGenerator0);
    }
}
