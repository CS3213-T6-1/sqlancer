/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 03:21:18 GMT 2025
 */

package sqlancer.evosuite.clickhouse.ast;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;

import org.junit.jupiter.api.Test;

import sqlancer.clickhouse.ast.ClickHouseAliasOperation;
import sqlancer.clickhouse.ast.ClickHouseColumnReference;
import sqlancer.clickhouse.ast.ClickHouseSubquery;
import sqlancer.clickhouse.ast.constant.ClickHouseInt16Constant;
import sqlancer.clickhouse.ClickHouseSchema;
import sqlancer.common.schema.TableIndex;

public class ClickHouseColumnReference_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(
                (ClickHouseSchema.ClickHouseColumn) null, "B}xxG'O7q1*X", "B}xxG'O7q1*X");
        String string0 = clickHouseColumnReference0.getTableAlias();
        assertEquals("B}xxG'O7q1*X", string0);
    }

    @Test
    public void test1() throws Throwable {
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(
                (ClickHouseSchema.ClickHouseColumn) null, "B}xxG'O7q1*X", "B}xxG'O7q1*X");
        ClickHouseSchema.ClickHouseColumn clickHouseSchema_ClickHouseColumn0 = clickHouseColumnReference0.getColumn();
        assertNull(clickHouseSchema_ClickHouseColumn0);
    }

    @Test
    public void test2() throws Throwable {
        ClickHouseSchema.ClickHouseColumn clickHouseSchema_ClickHouseColumn0 = new ClickHouseSchema.ClickHouseColumn("",
                (ClickHouseSchema.ClickHouseLancerDataType) null, true, true, (ClickHouseSchema.ClickHouseTable) null);
        ClickHouseColumnReference clickHouseColumnReference0 = clickHouseSchema_ClickHouseColumn0.asColumnReference("");
        ClickHouseSchema.ClickHouseColumn clickHouseSchema_ClickHouseColumn1 = clickHouseColumnReference0.getColumn();
        assertEquals("", clickHouseSchema_ClickHouseColumn1.getName());
    }

    @Test
    public void test3() throws Throwable {
        LinkedList<ClickHouseSchema.ClickHouseColumn> linkedList0 = new LinkedList<ClickHouseSchema.ClickHouseColumn>();
        LinkedList<TableIndex> linkedList1 = new LinkedList<TableIndex>();
        ClickHouseSchema.ClickHouseTable clickHouseSchema_ClickHouseTable0 = new ClickHouseSchema.ClickHouseTable("",
                linkedList0, linkedList1, false);
        ClickHouseSchema.ClickHouseColumn clickHouseSchema_ClickHouseColumn0 = new ClickHouseSchema.ClickHouseColumn(
                "eG5>X?<->>4eoP{c", (ClickHouseSchema.ClickHouseLancerDataType) null, false, false,
                clickHouseSchema_ClickHouseTable0);
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(
                clickHouseSchema_ClickHouseColumn0, "", "+)!(,`6>");
        clickHouseColumnReference0.getColumn();
        assertEquals("+)!(,`6>", clickHouseColumnReference0.getTableAlias());
        assertEquals("", clickHouseColumnReference0.getAlias());
    }

    @Test
    public void test4() throws Throwable {
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(
                (ClickHouseSchema.ClickHouseColumn) null, "B}xxG'O7q1*X", "B}xxG'O7q1*X");
        String string0 = clickHouseColumnReference0.getAlias();
        assertEquals("B}xxG'O7q1*X", string0);
    }

    @Test
    public void test5() throws Throwable {
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(
                (ClickHouseSchema.ClickHouseColumn) null, "", "gv6APFv[X4");
        String string0 = clickHouseColumnReference0.getAlias();
        assertEquals("gv6APFv[X4", clickHouseColumnReference0.getTableAlias());
        assertEquals("", string0);
    }

    @Test
    public void test6() throws Throwable {
        ClickHouseInt16Constant clickHouseInt16Constant0 = new ClickHouseInt16Constant(5L);
        ClickHouseAliasOperation clickHouseAliasOperation0 = new ClickHouseAliasOperation(clickHouseInt16Constant0,
                "using dbstat");
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(clickHouseAliasOperation0);
        clickHouseColumnReference0.getTableAlias();
    }

    @Test
    public void test7() throws Throwable {
        ClickHouseInt16Constant clickHouseInt16Constant0 = new ClickHouseInt16Constant(5L);
        ClickHouseAliasOperation clickHouseAliasOperation0 = new ClickHouseAliasOperation(clickHouseInt16Constant0,
                "using dbstat");
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(clickHouseAliasOperation0);
        ClickHouseSchema.ClickHouseColumn clickHouseSchema_ClickHouseColumn0 = clickHouseColumnReference0.getColumn();
        ClickHouseColumnReference clickHouseColumnReference1 = new ClickHouseColumnReference(
                clickHouseSchema_ClickHouseColumn0, (String) null, "");
        clickHouseColumnReference1.getTableAlias();
    }

    @Test
    public void test8() throws Throwable {
        ClickHouseSubquery clickHouseExpression_ClickHouseSubquery0 = new ClickHouseSubquery(
                "");
        ClickHouseAliasOperation clickHouseAliasOperation0 = new ClickHouseAliasOperation(
                clickHouseExpression_ClickHouseSubquery0, "");
        ClickHouseColumnReference clickHouseColumnReference0 = new ClickHouseColumnReference(clickHouseAliasOperation0);
        String string0 = clickHouseColumnReference0.getAlias();
        assertNull(string0);
    }

    @Test
    public void test9() throws Throwable {
        ClickHouseColumnReference clickHouseColumnReference0 = null;
        try {
            clickHouseColumnReference0 = new ClickHouseColumnReference((ClickHouseAliasOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.clickhouse.ast.ClickHouseColumnReference", e);
        }
    }
}
