/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 21:54:51 GMT 2025
 */

package sqlancer.evosuite.materialize.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.materialize.ast.MaterializeConstant;
import sqlancer.materialize.ast.MaterializeExpression;
import sqlancer.materialize.ast.MaterializePostfixOperation;
import sqlancer.materialize.ast.MaterializePostfixText;
import sqlancer.materialize.ast.MaterializeSelect;
import sqlancer.materialize.MaterializeSchema;

public class MaterializePostfixText_ESTest {

    @Test
    public void test00() throws Throwable {
        MaterializeExpression materializeExpression0 = MaterializeConstant.createBitConstant(5L);
        MaterializeConstant.MaterializeNullConstant materializeConstant_MaterializeNullConstant0 = new MaterializeConstant.MaterializeNullConstant();
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BOOLEAN;
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText(materializeExpression0,
                (String) null, materializeConstant_MaterializeNullConstant0, materializeSchema_MaterializeDataType0);
        String string0 = materializePostfixText0.getText();
        assertNull(string0);
    }

    @Test
    public void test01() throws Throwable {
        MaterializeConstant.MaterializeNullConstant materializeConstant_MaterializeNullConstant0 = new MaterializeConstant.MaterializeNullConstant();
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.INT;
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText(
                materializeConstant_MaterializeNullConstant0, "", materializeConstant_MaterializeNullConstant0,
                materializeSchema_MaterializeDataType0);
        String string0 = materializePostfixText0.getText();
        assertEquals("", string0);
    }

    @Test
    public void test02() throws Throwable {
        MaterializeSelect materializeSelect0 = new MaterializeSelect();
        MaterializeSelect.MaterializeSubquery materializeSelect_MaterializeSubquery0 = new MaterializeSelect.MaterializeSubquery(
                materializeSelect0, "TMBP,Fa1v8UIP\u0004Db\"$");
        MaterializeConstant.StringConstant materializeConstant_StringConstant0 = new MaterializeConstant.StringConstant(
                "");
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BOOLEAN;
        MaterializeConstant materializeConstant0 = materializeConstant_StringConstant0
                .cast(materializeSchema_MaterializeDataType0);
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText(
                materializeSelect_MaterializeSubquery0, "TMBP,Fa1v8UIP\u0004Db\"$", materializeConstant0,
                materializeSchema_MaterializeDataType0);
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType1 = materializePostfixText0
                .getExpressionType();
        assertSame(materializeSchema_MaterializeDataType1, materializeSchema_MaterializeDataType0);
    }

    @Test
    public void test03() throws Throwable {
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BOOLEAN;
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText((MaterializeExpression) null, "",
                (MaterializeConstant) null, materializeSchema_MaterializeDataType0);
        MaterializeConstant materializeConstant0 = materializePostfixText0.getExpectedValue();
        assertNull(materializeConstant0);
    }

    @Test
    public void test04() throws Throwable {
        MaterializeExpression materializeExpression0 = MaterializeConstant.createBitConstant(5L);
        MaterializeConstant.MaterializeNullConstant materializeConstant_MaterializeNullConstant0 = new MaterializeConstant.MaterializeNullConstant();
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BOOLEAN;
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText(materializeExpression0,
                (String) null, materializeConstant_MaterializeNullConstant0, materializeSchema_MaterializeDataType0);
        MaterializeConstant materializeConstant0 = materializePostfixText0.getExpectedValue();
        assertFalse(materializeConstant0.isString());
    }

    @Test
    public void test05() throws Throwable {
        MaterializePostfixOperation.PostfixOperator materializePostfixOperation_PostfixOperator0 = MaterializePostfixOperation.PostfixOperator.IS_FALSE;
        MaterializeConstant materializeConstant0 = MaterializeConstant.createIntConstant(0L);
        MaterializeConstant materializeConstant1 = materializePostfixOperation_PostfixOperator0
                .apply(materializeConstant0);
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = materializeConstant0
                .getExpressionType();
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText(materializeConstant1,
                "SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE table_schema = '%s' and table_type='BASE TABLE' ",
                materializeConstant0, materializeSchema_MaterializeDataType0);
        MaterializeConstant materializeConstant2 = materializePostfixText0.getExpectedValue();
        assertEquals(MaterializeSchema.MaterializeDataType.INT, materializeConstant2.getExpressionType());
    }

    @Test
    public void test06() throws Throwable {
        MaterializeSelect materializeSelect0 = new MaterializeSelect();
        MaterializeSelect.MaterializeSubquery materializeSelect_MaterializeSubquery0 = new MaterializeSelect.MaterializeSubquery(
                materializeSelect0, "TMBP,Fa1v8UIP\u0004Db\"$");
        MaterializeConstant.StringConstant materializeConstant_StringConstant0 = new MaterializeConstant.StringConstant(
                "");
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BOOLEAN;
        MaterializeConstant materializeConstant0 = materializeConstant_StringConstant0
                .cast(materializeSchema_MaterializeDataType0);
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText(
                materializeSelect_MaterializeSubquery0, "TMBP,Fa1v8UIP\u0004Db\"$", materializeConstant0,
                materializeSchema_MaterializeDataType0);
        MaterializeConstant materializeConstant1 = materializePostfixText0.getExpectedValue();
        assertEquals(MaterializeSchema.MaterializeDataType.BOOLEAN, materializeConstant1.getExpressionType());
    }

    @Test
    public void test07() throws Throwable {
        MaterializeConstant materializeConstant0 = MaterializeConstant.createTextConstant("pg_backend_pid");
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText((MaterializeExpression) null,
                "pg_backend_pid", materializeConstant0, (MaterializeSchema.MaterializeDataType) null);
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = materializePostfixText0
                .getExpressionType();
        MaterializeConstant materializeConstant1 = MaterializeConstant.createTrue();
        MaterializePostfixText materializePostfixText1 = new MaterializePostfixText(materializeConstant1,
                "~AJyL`5yirx/7P*", materializeConstant0, materializeSchema_MaterializeDataType0);
        MaterializeConstant.BooleanConstant materializeConstant_BooleanConstant0 = (MaterializeConstant.BooleanConstant) materializePostfixText1
                .getExpr();
        assertEquals("TRUE", materializeConstant_BooleanConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test08() throws Throwable {
        MaterializeConstant materializeConstant0 = MaterializeConstant.createTextConstant("pg_backend_pid");
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText((MaterializeExpression) null,
                "pg_backend_pid", materializeConstant0, (MaterializeSchema.MaterializeDataType) null);
        MaterializeExpression materializeExpression0 = materializePostfixText0.getExpr();
        assertNull(materializeExpression0);
    }

    @Test
    public void test09() throws Throwable {
        MaterializeConstant materializeConstant0 = MaterializeConstant.createTextConstant("pg_backend_pid");
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText((MaterializeExpression) null,
                "pg_backend_pid", materializeConstant0, (MaterializeSchema.MaterializeDataType) null);
        String string0 = materializePostfixText0.getText();
        assertEquals("pg_backend_pid", string0);
    }

    @Test
    public void test10() throws Throwable {
        MaterializeConstant materializeConstant0 = MaterializeConstant.createTextConstant("pg_backend_pid");
        MaterializePostfixText materializePostfixText0 = new MaterializePostfixText((MaterializeExpression) null,
                "pg_backend_pid", materializeConstant0, (MaterializeSchema.MaterializeDataType) null);
        MaterializeConstant materializeConstant1 = materializePostfixText0.getExpectedValue();
        assertEquals(MaterializeSchema.MaterializeDataType.TEXT, materializeConstant1.getExpressionType());
    }
}
