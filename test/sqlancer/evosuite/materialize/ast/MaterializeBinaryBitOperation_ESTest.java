/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 03:27:30 GMT 2025
 */

package sqlancer.evosuite.materialize.ast;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.materialize.ast.MaterializeBinaryBitOperation;
import sqlancer.materialize.ast.MaterializeExpression;
import sqlancer.materialize.MaterializeSchema;

public class MaterializeBinaryBitOperation_ESTest {

    @Test
    public void test0() throws Throwable {
        MaterializeBinaryBitOperation.MaterializeBinaryBitOperator materializeBinaryBitOperation_MaterializeBinaryBitOperator0 = MaterializeBinaryBitOperation.MaterializeBinaryBitOperator
                .getRandom();
        String string0 = materializeBinaryBitOperation_MaterializeBinaryBitOperator0.getTextRepresentation();
        assertEquals("&", string0);
    }

    @Test
    public void test1() throws Throwable {
        MaterializeBinaryBitOperation.MaterializeBinaryBitOperator materializeBinaryBitOperation_MaterializeBinaryBitOperator0 = MaterializeBinaryBitOperation.MaterializeBinaryBitOperator.BITWISE_SHIFT_LEFT;
        MaterializeBinaryBitOperation materializeBinaryBitOperation0 = new MaterializeBinaryBitOperation(
                materializeBinaryBitOperation_MaterializeBinaryBitOperator0, (MaterializeExpression) null,
                (MaterializeExpression) null);
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = materializeBinaryBitOperation0
                .getExpressionType();
        assertEquals(MaterializeSchema.MaterializeDataType.INT, materializeSchema_MaterializeDataType0);
    }
}
