/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 01:57:50 GMT 2025
 */

package sqlancer.evosuite.materialize.gen;

import static org.junit.jupiter.api.Assertions.*;

import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.materialize.ast.MaterializeConstant;
import sqlancer.materialize.gen.MaterializeExpressionGenerator;
import sqlancer.materialize.MaterializeGlobalState;
import sqlancer.materialize.MaterializeSchema;
import sqlancer.Randomly;

public class MaterializeExpressionGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    // @Test
    // public void test00() throws Throwable {
    // MaterializeExpressionGenerator materializeExpressionGenerator0 = null;
    // try {
    // materializeExpressionGenerator0 = new MaterializeExpressionGenerator((MaterializeGlobalState) null);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.materialize.gen.MaterializeExpressionGenerator", e);
    // }
    // }

    @Test
    public void test01() throws Throwable {
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BIT;
        // Undeclared exception!
        try {
            MaterializeExpressionGenerator.generateConstant((Randomly) null, materializeSchema_MaterializeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.materialize.gen.MaterializeExpressionGenerator", e);
        }
    }

    @Test
    public void test02() throws Throwable {
        Randomly randomly0 = new Randomly();
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.REAL;
        MaterializeConstant.DoubleConstant materializeConstant_DoubleConstant0 = (MaterializeConstant.DoubleConstant) MaterializeExpressionGenerator
                .generateConstant(randomly0, materializeSchema_MaterializeDataType0);
        assertFalse(materializeConstant_DoubleConstant0.isBoolean());
    }

    // @Test
    // public void test03() throws Throwable {
    // MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 =
    // MaterializeSchema.MaterializeDataType.FLOAT;
    // // Undeclared exception!
    // try {
    // MaterializeExpressionGenerator.generateConstant((Randomly) null, materializeSchema_MaterializeDataType0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.materialize.gen.MaterializeExpressionGenerator", e);
    // }
    // }

    /*
     * Test disabled because it contains mock() function calls that are not implemented
     *
     * @Test public void test04() throws Throwable { Supplier<String> supplier0 = (Supplier<String>)
     * mock(Supplier.class, new ViolatedAssumptionAnswer()); Randomly randomly0 = new Randomly(supplier0);
     * MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 =
     * MaterializeSchema.MaterializeDataType.DECIMAL; MaterializeConstant.DecimalConstant
     * materializeConstant_DecimalConstant0 = (MaterializeConstant.DecimalConstant) MaterializeExpressionGenerator
     * .generateConstant(randomly0, materializeSchema_MaterializeDataType0);
     * assertNull(materializeConstant_DecimalConstant0.getUnquotedTextRepresentation()); }
     */

    /*
     * Test disabled because it contains mock() function calls that are not implemented
     *
     * @Test public void test05() throws Throwable { Supplier<String> supplier0 = (Supplier<String>)
     * mock(Supplier.class, new ViolatedAssumptionAnswer()); Randomly randomly0 = new Randomly(supplier0);
     * MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 =
     * MaterializeSchema.MaterializeDataType.TEXT; MaterializeConstant.StringConstant
     * materializeConstant_StringConstant0 = (MaterializeConstant.StringConstant) MaterializeExpressionGenerator
     * .generateConstant(randomly0, materializeSchema_MaterializeDataType0);
     * assertFalse(materializeConstant_StringConstant0.isInt()); }
     */

    // @Test
    // public void test06() throws Throwable {
    // MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 =
    // MaterializeSchema.MaterializeDataType.INT;
    // Randomly randomly0 = new Randomly();
    // MaterializeConstant.IntConstant materializeConstant_IntConstant0 = (MaterializeConstant.IntConstant)
    // MaterializeExpressionGenerator
    // .generateConstant(randomly0, materializeSchema_MaterializeDataType0);
    // assertEquals("1", materializeConstant_IntConstant0.getTextRepresentation());
    // }

    // @Test
    // public void test07() throws Throwable {
    // MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 =
    // MaterializeSchema.MaterializeDataType.INT;
    // Randomly randomly0 = new Randomly();
    // Randomly.smallNumber();
    // MaterializeConstant.MaterializeNullConstant materializeConstant_MaterializeNullConstant0 =
    // (MaterializeConstant.MaterializeNullConstant) MaterializeExpressionGenerator
    // .generateConstant(randomly0, materializeSchema_MaterializeDataType0);
    // assertFalse(materializeConstant_MaterializeNullConstant0.isString());
    // }

    // @Test
    // public void test08() throws Throwable {
    // MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 =
    // MaterializeSchema.MaterializeDataType.BOOLEAN;
    // Randomly randomly0 = new Randomly();
    // MaterializeConstant.BooleanConstant materializeConstant_BooleanConstant0 = (MaterializeConstant.BooleanConstant)
    // MaterializeExpressionGenerator
    // .generateConstant(randomly0, materializeSchema_MaterializeDataType0);
    // assertEquals("FALSE", materializeConstant_BooleanConstant0.getTextRepresentation());
    // }

    @Test
    public void test09() throws Throwable {
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BIT;
        // Undeclared exception!
        try {
            MaterializeExpressionGenerator.generateExpression((MaterializeGlobalState) null,
                    materializeSchema_MaterializeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.materialize.gen.MaterializeExpressionGenerator", e);
        }
    }

    @Test
    public void test10() throws Throwable {
        MaterializeGlobalState materializeGlobalState0 = new MaterializeGlobalState();
        MaterializeSchema.MaterializeDataType materializeSchema_MaterializeDataType0 = MaterializeSchema.MaterializeDataType.BOOLEAN;
        MaterializeSchema.MaterializeColumn[] materializeSchema_MaterializeColumnArray0 = new MaterializeSchema.MaterializeColumn[5];
        List<MaterializeSchema.MaterializeColumn> list0 = Randomly.subset(materializeSchema_MaterializeColumnArray0);
        // Undeclared exception!
        try {
            MaterializeExpressionGenerator.generateExpression(materializeGlobalState0, list0,
                    materializeSchema_MaterializeDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.materialize.gen.MaterializeExpressionGenerator", e);
        }
    }

    @Test
    public void test11() throws Throwable {
        // Undeclared exception!
        try {
            MaterializeExpressionGenerator.generateExpression((MaterializeGlobalState) null,
                    (List<MaterializeSchema.MaterializeColumn>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.materialize.gen.MaterializeExpressionGenerator", e);
        }
    }
}
