/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 23:13:31 GMT 2025
 */

package sqlancer.evosuite.yugabyte.ysql.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.math.BigDecimal;
import org.junit.jupiter.api.Test;
import sqlancer.yugabyte.ysql.ast.YSQLBinaryRangeOperation;
import sqlancer.yugabyte.ysql.ast.YSQLConstant;
import sqlancer.yugabyte.ysql.ast.YSQLExpression;
import sqlancer.yugabyte.ysql.YSQLSchema;

public class YSQLBinaryRangeOperation_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        YSQLBinaryRangeOperation ySQLBinaryRangeOperation0 = null;
        try {
            ySQLBinaryRangeOperation0 = new YSQLBinaryRangeOperation(
                    (YSQLBinaryRangeOperation.YSQLBinaryRangeOperator) null, ySQLConstant_BooleanConstant0,
                    ySQLConstant_BooleanConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLBinaryRangeOperation", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        BigDecimal bigDecimal0 = new BigDecimal((-16L));
        YSQLConstant ySQLConstant0 = YSQLConstant.createDecimalConstant(bigDecimal0);
        YSQLBinaryRangeOperation ySQLBinaryRangeOperation0 = null;
        try {
            ySQLBinaryRangeOperation0 = new YSQLBinaryRangeOperation(
                    (YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator) null, ySQLConstant0, ySQLConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLBinaryRangeOperation", e);
        }
    }

    @Test
    public void test2() throws Throwable {
        YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator ySQLBinaryRangeOperation_YSQLBinaryRangeComparisonOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator.STRICT_RIGHT_OF;
        String string0 = ySQLBinaryRangeOperation_YSQLBinaryRangeComparisonOperator0.getTextRepresentation();
        assertEquals(">>", string0);
    }

    @Test
    public void test3() throws Throwable {
        YSQLBinaryRangeOperation.YSQLBinaryRangeOperator ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeOperator.DIFFERENCE;
        String string0 = ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0.getTextRepresentation();
        assertEquals("-", string0);
    }

    @Test
    public void test4() throws Throwable {
        YSQLBinaryRangeOperation.YSQLBinaryRangeOperator ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeOperator
                .getRandom();
        assertEquals("+", ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0.getTextRepresentation());
    }

    @Test
    public void test5() throws Throwable {
        YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator ySQLBinaryRangeOperation_YSQLBinaryRangeComparisonOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator
                .getRandom();
        assertEquals(YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator.CONTAINS_RANGE_OR_ELEMENT,
                ySQLBinaryRangeOperation_YSQLBinaryRangeComparisonOperator0);
    }

    @Test
    public void test6() throws Throwable {
        YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator ySQLBinaryRangeOperation_YSQLBinaryRangeComparisonOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeComparisonOperator.RANGE_OR_ELEMENT_IS_CONTAINED;
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLBinaryRangeOperation ySQLBinaryRangeOperation0 = new YSQLBinaryRangeOperation(
                ySQLBinaryRangeOperation_YSQLBinaryRangeComparisonOperator0, ySQLConstant0, ySQLConstant0);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLBinaryRangeOperation0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.BOOLEAN, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test7() throws Throwable {
        YSQLBinaryRangeOperation.YSQLBinaryRangeOperator ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeOperator.DIFFERENCE;
        YSQLBinaryRangeOperation ySQLBinaryRangeOperation0 = new YSQLBinaryRangeOperation(
                ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0, (YSQLExpression) null, (YSQLExpression) null);
        String string0 = ySQLBinaryRangeOperation0.getOperatorRepresentation();
        assertEquals("-", string0);
    }
}
