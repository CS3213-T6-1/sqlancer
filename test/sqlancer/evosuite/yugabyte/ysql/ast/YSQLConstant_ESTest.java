/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:29:31 GMT 2025
 */

package sqlancer.evosuite.yugabyte.ysql.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.math.BigDecimal;
import org.junit.jupiter.api.Test;
import sqlancer.yugabyte.ysql.ast.YSQLConstant;
import sqlancer.yugabyte.ysql.YSQLSchema;

public class YSQLConstant_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test000() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-3118L));
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isEquals(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals("-3118", ySQLConstant_IntConstant0.getUnquotedTextRepresentation());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test001() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-1L));
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FALSE");
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isLessThan(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
        assertEquals("-1", ySQLConstant_IntConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test002() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(2234L);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("2234");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_IntConstant0);
        assertEquals(2234L, ySQLConstant_IntConstant0.asInt());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test003() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant(
                "SELECT yb_is_database_colocated();");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-5795L));
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant0.asBoolean());
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals((-5795L), ySQLConstant_IntConstant0.asInt());
    }

    @Test
    public void test004() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant(
                "SELECT yb_is_database_colocated();");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-5795L));
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isEquals(ySQLConstant_IntConstant0);
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals((-5795L), ySQLConstant_IntConstant0.asInt());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test005() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("COLOCATED = true ");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test006() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("F");
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("q");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
    }

    @Test
    public void test007() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createRange(281L, false, (-4411L), true);
        assertEquals(YSQLSchema.YSQLDataType.RANGE, ySQLConstant0.getExpressionType());
    }

    @Test
    public void test008() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createRange((-3118L), true, 9223372036854775807L, true);
        assertNull(ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test009() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("~siCN7Gos");
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLConstant ySQLConstant0 = ySQLConstant_YSQLNullConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertEquals("NULL", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test010() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        String string0 = ySQLConstant_YSQLNullConstant0.getTextRepresentation();
        assertEquals("NULL", string0);
    }

    @Test
    public void test011() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BIT;
        YSQLConstant ySQLConstant0 = ySQLConstant_YSQLNullConstant0.cast(ySQLSchema_YSQLDataType0);
        assertFalse(ySQLConstant0.equals((Object) ySQLConstant_YSQLNullConstant0));
    }

    @Test
    public void test012() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-5265L));
        YSQLConstant.BitConstant ySQLConstant_BitConstant0 = new YSQLConstant.BitConstant(2634L);
        ySQLConstant_BitConstant0.isEquals(ySQLConstant_IntConstant0);
        assertEquals((-5265L), ySQLConstant_IntConstant0.asInt());
        assertEquals("-5265", ySQLConstant_IntConstant0.getTextRepresentation());
    }

    @Test
    public void test013() throws Throwable {
        YSQLConstant.InetConstant ySQLConstant_InetConstant0 = new YSQLConstant.InetConstant("~:[3x%lh-';=_@b*D");
        String string0 = ySQLConstant_InetConstant0.getUnquotedTextRepresentation();
        assertNull(string0);
    }

    @Test
    public void test014() throws Throwable {
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = new YSQLConstant.DoubleConstant((-1403.6117817));
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_YSQLNullConstant0.getExpressionType();
        YSQLConstant ySQLConstant0 = ySQLConstant_DoubleConstant0.cast(ySQLSchema_YSQLDataType0);
        assertNull(ySQLConstant0);
    }

    @Test
    public void test015() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("~siCN7Gos");
        boolean boolean0 = ySQLConstant_ByteConstant0.isString();
        assertTrue(boolean0);
    }

    @Test
    public void test016() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("");
        String string0 = ySQLConstant0.getUnquotedTextRepresentation();
        assertEquals("", string0);
    }

    @Test
    public void test017() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("");
        String string0 = ySQLConstant_ByteConstant0.getTextRepresentation();
        assertEquals("''::bytea", string0);
    }

    @Test
    public void test018() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("FAL");
        String string0 = ySQLConstant0.asString();
        assertEquals("FAL", string0);
    }

    @Test
    public void test019() throws Throwable {
        YSQLConstant.RangeConstant ySQLConstant_RangeConstant0 = new YSQLConstant.RangeConstant((-597L), true, 0L,
                true);
        String string0 = ySQLConstant_RangeConstant0.getTextRepresentation();
        assertEquals("'[-597,0]'::int4range", string0);
    }

    @Test
    public void test020() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        boolean boolean0 = ySQLConstant_IntConstant0.isInt();
        assertTrue(boolean0);
    }

    @Test
    public void test021() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        String string0 = ySQLConstant_IntConstant0.getTextRepresentation();
        assertEquals("0", string0);
    }

    @Test
    public void test022() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.cast(ySQLSchema_YSQLDataType0);
        assertNull(ySQLConstant0);
    }

    @Test
    public void test023() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        long long0 = ySQLConstant_IntConstant0.asInt();
        assertEquals(0L, long0);
    }

    @Test
    public void test024() throws Throwable {
        YSQLConstant.InetConstant ySQLConstant_InetConstant0 = new YSQLConstant.InetConstant("\\=x?4C>9a;`T");
        String string0 = ySQLConstant_InetConstant0.getTextRepresentation();
        assertEquals("'\\=x?4C>9a;`T'", string0);
    }

    @Test
    public void test025() throws Throwable {
        YSQLConstant.FloatConstant ySQLConstant_FloatConstant0 = new YSQLConstant.FloatConstant((-1.0F));
        String string0 = ySQLConstant_FloatConstant0.getTextRepresentation();
        assertEquals("-1.0", string0);
    }

    @Test
    public void test026() throws Throwable {
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = new YSQLConstant.DoubleConstant(0.0);
        String string0 = ySQLConstant_DoubleConstant0.getTextRepresentation();
        assertEquals("0.0", string0);
    }

    @Test
    public void test027() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        ySQLConstant_BooleanConstant0.isBoolean();
        assertEquals("TRUE", ySQLConstant_BooleanConstant0.getTextRepresentation());
    }

    @Test
    public void test028() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        String string0 = ySQLConstant0.getTextRepresentation();
        assertEquals("FALSE", string0);
    }

    @Test
    public void test029() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createBooleanConstant(true);
        boolean boolean0 = ySQLConstant0.asBoolean();
        assertTrue(boolean0);
    }

    @Test
    public void test030() throws Throwable {
        YSQLConstant.BitConstant ySQLConstant_BitConstant0 = new YSQLConstant.BitConstant(2634L);
        String string0 = ySQLConstant_BitConstant0.getTextRepresentation();
        assertEquals("B'101001001010'", string0);
    }

    @Test
    public void test031() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("");
        boolean boolean0 = ySQLConstant_ByteConstant0.isString();
        assertTrue(boolean0);
    }

    @Test
    public void test032() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        boolean boolean0 = ySQLConstant_YSQLNullConstant0.isNull();
        assertTrue(boolean0);
    }

    @Test
    public void test033() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(582L);
        ySQLConstant_IntConstant0.isInt();
        assertEquals(582L, ySQLConstant_IntConstant0.asInt());
    }

    @Test
    public void test034() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        ySQLConstant_BooleanConstant0.isBoolean();
        assertEquals("TRUE", ySQLConstant_BooleanConstant0.getTextRepresentation());
    }

    @Test
    public void test035() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("");
        String string0 = ySQLConstant0.getUnquotedTextRepresentation();
        assertEquals("", string0);
    }

    @Test
    public void test036() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("FAL");
        YSQLConstant ySQLConstant1 = ySQLConstant0.getExpectedValue();
        assertFalse(ySQLConstant1.isInt());
    }

    @Test
    public void test037() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(1752L);
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.getExpectedValue();
        assertEquals("1752", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test038() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLConstant ySQLConstant1 = ySQLConstant0.getExpectedValue();
        assertFalse(ySQLConstant1.isString());
    }

    @Test
    public void test039() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BOOLEAN;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("FALSE", ySQLConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test040() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant((String) null);
        String string0 = ySQLConstant0.asString();
        assertNull(string0);
    }

    @Test
    public void test041() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("");
        String string0 = ySQLConstant_ByteConstant0.asString();
        assertEquals("", string0);
    }

    @Test
    public void test042() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        long long0 = ySQLConstant_IntConstant0.asInt();
        assertEquals(0L, long0);
    }

    @Test
    public void test043() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(294L);
        long long0 = ySQLConstant_IntConstant0.asInt();
        assertEquals(294L, long0);
    }

    @Test
    public void test044() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-1L));
        long long0 = ySQLConstant_IntConstant0.asInt();
        assertEquals((-1L), long0);
    }

    @Test
    public void test045() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        boolean boolean0 = ySQLConstant0.asBoolean();
        assertTrue(boolean0);
    }

    @Test
    public void test046() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        boolean boolean0 = ySQLConstant0.asBoolean();
        assertFalse(boolean0);
    }

    @Test
    public void test047() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant((String) null);
        // Undeclared exception!
        try {
            ySQLConstant_ByteConstant0.toString();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$ByteConstant", e);
        }
    }

    @Test
    public void test048() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant((String) null);
        // Undeclared exception!
        try {
            ySQLConstant0.isEquals(ySQLConstant_ByteConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$StringConstant", e);
        }
    }

    @Test
    public void test049() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant((String) null);
        // Undeclared exception!
        try {
            ySQLConstant0.getTextRepresentation();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$ByteConstant", e);
        }
    }

    @Test
    public void test050() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant((String) null);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        // Undeclared exception!
        try {
            ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$StringConstant", e);
        }
    }

    @Test
    public void test051() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        // Undeclared exception!
        try {
            ySQLConstant0.asInt();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // FALSE
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant", e);
        }
    }

    @Test
    public void test052() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant((String) null);
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        // Undeclared exception!
        try {
            ySQLConstant_BooleanConstant0.isLessThan(ySQLConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$StringConstant", e);
        }
    }

    @Test
    public void test053() throws Throwable {
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = new YSQLConstant.DoubleConstant(0.0);
        boolean boolean0 = ySQLConstant_DoubleConstant0.isNull();
        assertFalse(boolean0);
    }

    @Test
    public void test054() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        ySQLConstant_BooleanConstant0.isString();
        assertEquals("FALSE", ySQLConstant_BooleanConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test055() throws Throwable {
        YSQLConstant.BitConstant ySQLConstant_BitConstant0 = (YSQLConstant.BitConstant) YSQLConstant
                .createBitConstant((-393L));
        boolean boolean0 = ySQLConstant_BitConstant0.isInt();
        assertFalse(boolean0);
    }

    @Test
    public void test056() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createRange((-148L), false, (-148L), false);
        boolean boolean0 = ySQLConstant0.isBoolean();
        assertFalse(boolean0);
    }

    @Test
    public void test057() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("FALSxEE");
        YSQLConstant ySQLConstant1 = YSQLConstant.createRange(1L, true, 1L, true);
        // Undeclared exception!
        try {
            ySQLConstant0.isEquals(ySQLConstant1);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // '[1,1]'::int4range
            //
        }
    }

    @Test
    public void test058() throws Throwable {
        YSQLConstant.RangeConstant ySQLConstant_RangeConstant0 = new YSQLConstant.RangeConstant((-2646L), true,
                (-2646L), false);
        String string0 = ySQLConstant_RangeConstant0.getTextRepresentation();
        assertEquals("'[-2646,-2646)'::int4range", string0);
    }

    @Test
    public void test059() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createRange((-148L), false, (-148L), false);
        String string0 = ySQLConstant0.toString();
        assertEquals("'(-148,-148)'::int4range", string0);
    }

    @Test
    public void test060() throws Throwable {
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = new YSQLConstant.DoubleConstant(0.0);
        // Undeclared exception!
        try {
            ySQLConstant_DoubleConstant0.asBoolean();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // 0.0
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant", e);
        }
    }

    @Test
    public void test061() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant(1L);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BIT;
        ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("1", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test062() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-3103L));
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("-3103", ySQLConstant0.asString());
    }

    @Test
    public void test063() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FALS");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant((-2297L));
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isLessThan(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals((-2297L), ySQLConstant_IntConstant0.asInt());
        assertEquals("TRUE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test064() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(582L);
        YSQLConstant.FloatConstant ySQLConstant_FloatConstant0 = new YSQLConstant.FloatConstant(582L);
        // Undeclared exception!
        try {
            ySQLConstant_IntConstant0.isLessThan(ySQLConstant_FloatConstant0);
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$IntConstant", e);
        }
    }

    @Test
    public void test065() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(168L);
        // Undeclared exception!
        try {
            ySQLConstant_IntConstant0.isLessThan(ySQLConstant_BooleanConstant0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // TRUE
            //
        }
    }

    @Test
    public void test066() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FAL");
        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant((-2170L));
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertEquals("FALSE", ySQLConstant1.getUnquotedTextRepresentation());
        assertFalse(ySQLConstant0.isNull());
    }

    @Test
    public void test067() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("ON");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isLessThan(ySQLConstant_ByteConstant0);
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
        assertFalse(ySQLConstant_IntConstant0.isNull());
    }

    @Test
    public void test068() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(676L);
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        ySQLConstant_IntConstant0.isLessThan(ySQLConstant0);
        assertEquals("676", ySQLConstant_IntConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test069() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("uRB>?HR");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        YSQLConstant ySQLConstant1 = ySQLConstant_IntConstant0.isEquals(ySQLConstant0);
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test070() throws Throwable {
        YSQLConstant.InetConstant ySQLConstant_InetConstant0 = (YSQLConstant.InetConstant) YSQLConstant
                .createInetConstant("TRUE");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(1L);
        // Undeclared exception!
        try {
            ySQLConstant_IntConstant0.isEquals(ySQLConstant_InetConstant0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // 'TRUE'
            //
        }
    }

    @Test
    public void test071() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("A#~a({Y#! ^igK19%");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INT;
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.cast(ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isEquals(ySQLConstant0);
        assertFalse(ySQLConstant0.isNull());
        assertEquals("TRUE", ySQLConstant1.getUnquotedTextRepresentation());
        assertEquals("-1", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test072() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("TRU");
        assertFalse(ySQLConstant_ByteConstant0.isInt());

        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant((-1L));
        YSQLConstant ySQLConstant1 = ySQLConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertTrue(ySQLConstant1.asBoolean());
        assertEquals((-1L), ySQLConstant0.asInt());
        assertFalse(ySQLConstant0.isNull());
    }

    @Test
    public void test073() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant(332L);
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        ySQLConstant0.isEquals(ySQLConstant_YSQLNullConstant0);
        assertEquals(332L, ySQLConstant0.asInt());
    }

    @Test
    public void test074() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FALSE");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test075() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("TRUE");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test076() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FALS");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
        assertFalse(ySQLConstant0.asBoolean());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
    }

    @Test
    public void test077() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("YES");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertTrue(ySQLConstant0.asBoolean());
        assertEquals("FALSE", ySQLConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test078() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("TRU");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
        assertFalse(ySQLConstant1.asBoolean());
    }

    @Test
    public void test079() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("OFF");
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertFalse(ySQLConstant1.isInt());
        assertFalse(ySQLConstant0.isNull());
        assertEquals("TRUE", ySQLConstant0.getUnquotedTextRepresentation());
        assertEquals("TRUE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test080() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FAL");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test081() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("OF");
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant ySQLConstant1 = ySQLConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant0.isNull());
        assertFalse(ySQLConstant1.asBoolean());
    }

    @Test
    public void test082() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("NO");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test083() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FA");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test084() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("Y");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertEquals("FALSE", ySQLConstant1.getUnquotedTextRepresentation());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test085() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("T");
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = (YSQLConstant.BooleanConstant) YSQLConstant
                .createTrue();
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant1 = (YSQLConstant.BooleanConstant) ySQLConstant_BooleanConstant0
                .isLessThan(ySQLConstant_ByteConstant0);
        assertEquals("TRUE", ySQLConstant_BooleanConstant0.getTextRepresentation());
        assertFalse(ySQLConstant_BooleanConstant0.isNull());
        assertEquals("FALSE", ySQLConstant_BooleanConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test086() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("N");
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant ySQLConstant1 = ySQLConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant0.isNull());
        assertEquals("FALSE", ySQLConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test087() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = (YSQLConstant.ByteConstant) YSQLConstant
                .createByteConstant("F");
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = (YSQLConstant.BooleanConstant) YSQLConstant
                .createTrue();
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant1 = (YSQLConstant.BooleanConstant) ySQLConstant_ByteConstant0
                .isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_BooleanConstant0.isNull());
        assertFalse(ySQLConstant_BooleanConstant1.isInt());
        assertEquals("TRUE", ySQLConstant_BooleanConstant1.getTextRepresentation());
        assertTrue(ySQLConstant_BooleanConstant0.asBoolean());
    }

    @Test
    public void test088() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        assertFalse(ySQLConstant0.isString());

        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("-00");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertFalse(ySQLConstant1.isInt());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test089() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("uRB>?HR");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INET;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertNull(ySQLConstant1);
    }

    @Test
    public void test090() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("FALSE");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertNull(ySQLConstant1);
    }

    @Test
    public void test091() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("2234");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("2234", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test092() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("5x[\"E[=P~*c9~2vC");
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant("F");
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertFalse(ySQLConstant0.isNull());
        assertTrue(ySQLConstant1.asBoolean());
    }

    @Test
    public void test093() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("Y");
        YSQLConstant ySQLConstant0 = YSQLConstant.createDoubleConstant(Double.NEGATIVE_INFINITY);
        // Undeclared exception!
        try {
            ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // '-Infinity'
            //
        }
    }

    @Test
    public void test094() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = (YSQLConstant.ByteConstant) YSQLConstant
                .createByteConstant("F");
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = (YSQLConstant.BooleanConstant) ySQLConstant_ByteConstant0
                .isLessThan(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant_BooleanConstant0.isInt());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant_BooleanConstant0.getTextRepresentation());
    }

    @Test
    public void test095() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("");
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLConstant ySQLConstant1 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant0);
        assertFalse(ySQLConstant1.isString());
    }

    @Test
    public void test096() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("T");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant0.isInt());
        assertTrue(ySQLConstant0.asBoolean());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
    }

    @Test
    public void test097() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("ON");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isEquals(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant0.isInt());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test098() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("FAL");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(1997L);
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isEquals(ySQLConstant_IntConstant0);
        assertEquals(1997L, ySQLConstant_IntConstant0.asInt());
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test099() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("YES");
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isEquals(ySQLConstant_YSQLNullConstant0);
        assertEquals("NULL", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test100() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("true", ySQLConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test101() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INT;
        YSQLConstant ySQLConstant0 = ySQLConstant_BooleanConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("1", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test102() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.REAL;
        ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertFalse(ySQLConstant0.asBoolean());
    }

    @Test
    public void test103() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("false", ySQLConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test104() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("TRUE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test105() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INT;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("0", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test106() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = (YSQLConstant.BooleanConstant) YSQLConstant
                .createFalse();
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = (YSQLConstant.DoubleConstant) YSQLConstant
                .createDoubleConstant(448.416);
        // Undeclared exception!
        try {
            ySQLConstant_BooleanConstant0.isLessThan(ySQLConstant_DoubleConstant0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test107() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = (YSQLConstant.BooleanConstant) YSQLConstant
                .createFalse();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = (YSQLConstant.YSQLNullConstant) YSQLConstant
                .createNullConstant();
        ySQLConstant_BooleanConstant0.isLessThan(ySQLConstant_YSQLNullConstant0);
        assertFalse(ySQLConstant_BooleanConstant0.asBoolean());
    }

    @Test
    public void test108() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("YE");
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant ySQLConstant1 = ySQLConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant0.isNull());
        assertEquals("TRUE", ySQLConstant0.getUnquotedTextRepresentation());
        assertEquals("TRUE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test109() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isEquals(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertTrue(ySQLConstant0.asBoolean());
    }

    @Test
    public void test110() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(2234L);
        YSQLConstant ySQLConstant0 = ySQLConstant_IntConstant0.isEquals(ySQLConstant_BooleanConstant0);
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
        assertFalse(ySQLConstant_IntConstant0.isNull());
        assertEquals("2234", ySQLConstant_IntConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test111() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BIT;
        YSQLConstant ySQLConstant0 = ySQLConstant_YSQLNullConstant0.cast(ySQLSchema_YSQLDataType0);
        assertEquals("NULL", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test112() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("YES");
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLConstant ySQLConstant0 = ySQLConstant_YSQLNullConstant0.isLessThan(ySQLConstant_ByteConstant0);
        assertEquals("NULL", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test113() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        String string0 = ySQLConstant_YSQLNullConstant0.getUnquotedTextRepresentation();
        assertEquals("NULL", string0);
    }

    @Test
    public void test114() throws Throwable {
        BigDecimal bigDecimal0 = new BigDecimal((-2146795130));
        YSQLConstant.DecimalConstant ySQLConstant_DecimalConstant0 = new YSQLConstant.DecimalConstant(bigDecimal0);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_DecimalConstant0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.DECIMAL, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test115() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant.DecimalConstant ySQLConstant_DecimalConstant0 = new YSQLConstant.DecimalConstant(
                (BigDecimal) null);
        // Undeclared exception!
        try {
            ySQLConstant0.isEquals(ySQLConstant_DecimalConstant0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test116() throws Throwable {
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = new YSQLConstant.DoubleConstant(0.0);
        YSQLConstant ySQLConstant0 = ySQLConstant_DoubleConstant0.isEquals((YSQLConstant) null);
        assertNull(ySQLConstant0);
    }

    @Test
    public void test117() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLConstant.BitConstant ySQLConstant_BitConstant0 = new YSQLConstant.BitConstant((-3625L));
        ySQLConstant_BitConstant0.isLessThan(ySQLConstant0);
        assertEquals("TRUE", ySQLConstant0.getTextRepresentation());
        assertEquals("TRUE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test118() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFloatConstant(0.0F);
        String string0 = ySQLConstant0.getUnquotedTextRepresentation();
        assertNull(string0);
    }

    @Test
    public void test119() throws Throwable {
        YSQLConstant.InetConstant ySQLConstant_InetConstant0 = (YSQLConstant.InetConstant) YSQLConstant
                .createInetConstant("b");
        ySQLConstant_InetConstant0.getExpressionType();
        assertEquals("'b'", ySQLConstant_InetConstant0.getTextRepresentation());
    }

    @Test
    public void test120() throws Throwable {
        YSQLConstant.BitConstant ySQLConstant_BitConstant0 = new YSQLConstant.BitConstant(3000L);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_BitConstant0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.BIT, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test121() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant(":U");
        String string0 = ySQLConstant_ByteConstant0.getUnquotedTextRepresentation();
        assertEquals(":U", string0);
    }

    @Test
    public void test122() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ((YSQLConstant.StringConstant) ySQLConstant0)
                .getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.TEXT, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test123() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant("O");
        String string0 = ySQLConstant0.getTextRepresentation();
        assertEquals("'O'", string0);
    }

    @Test
    public void test124() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        ySQLConstant_BooleanConstant0.getExpressionType();
        assertEquals("FALSE", ySQLConstant_BooleanConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test125() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        String string0 = ySQLConstant0.getUnquotedTextRepresentation();
        assertEquals("TRUE", string0);
    }

    @Test
    public void test126() throws Throwable {
        YSQLConstant.DoubleConstant ySQLConstant_DoubleConstant0 = new YSQLConstant.DoubleConstant((-683.9960443));
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_DoubleConstant0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.FLOAT, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test127() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(2234L);
        String string0 = ySQLConstant_IntConstant0.getUnquotedTextRepresentation();
        assertEquals("2234", string0);
    }

    @Test
    public void test128() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(0L);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_IntConstant0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.INT, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test129() throws Throwable {
        YSQLConstant.RangeConstant ySQLConstant_RangeConstant0 = new YSQLConstant.RangeConstant(3505L, false, 3505L,
                false);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_RangeConstant0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.RANGE, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test130() throws Throwable {
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = new YSQLConstant.IntConstant(149L);
        assertTrue(ySQLConstant_IntConstant0.isInt());

        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("ECa3Ld|T{_");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_IntConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("TRUE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test131() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant(
                "SELECT yb_is_database_colocated();");
        assertTrue(ySQLConstant_ByteConstant0.isString());
        assertFalse(ySQLConstant_ByteConstant0.isBoolean());

        YSQLConstant ySQLConstant0 = ySQLConstant_BooleanConstant0.isEquals(ySQLConstant_ByteConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertFalse(ySQLConstant0.asBoolean());
    }

    @Test
    public void test132() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant("-3131");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BOOLEAN;
        YSQLConstant ySQLConstant1 = ySQLConstant0.cast(ySQLSchema_YSQLDataType0);
        assertTrue(ySQLConstant1.asBoolean());
    }

    @Test
    public void test133() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant((String) null);
        // Undeclared exception!
        try {
            ySQLConstant_ByteConstant0.asBoolean();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$ByteConstant", e);
        }
    }

    @Test
    public void test134() throws Throwable {
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        YSQLConstant ySQLConstant0 = YSQLConstant.createDecimalConstant(bigDecimal0);
        assertFalse(ySQLConstant0.isInt());
    }

    @Test
    public void test135() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        assertFalse(ySQLConstant_BooleanConstant0.isString());

        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("TR");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant_ByteConstant0.isNull());
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test136() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        assertTrue(ySQLConstant_YSQLNullConstant0.isNull());

        ySQLConstant0.isEquals(ySQLConstant_YSQLNullConstant0);
        assertEquals("FALSE", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test137() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        // Undeclared exception!
        try {
            ySQLConstant_BooleanConstant0.asString();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // FALSE
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant", e);
        }
    }

    @Test
    public void test138() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(true);
        YSQLConstant ySQLConstant0 = ySQLConstant_BooleanConstant0.getExpectedValue();
        assertEquals("TRUE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test139() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createByteConstant("I");
        String string0 = ySQLConstant0.asString();
        assertEquals("I", string0);
    }

    @Test
    public void test140() throws Throwable {
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant((String) null);
        // Undeclared exception!
        try {
            ySQLConstant_ByteConstant0.asInt();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant$ByteConstant", e);
        }
    }

    @Test
    public void test141() throws Throwable {
        YSQLConstant.BooleanConstant ySQLConstant_BooleanConstant0 = new YSQLConstant.BooleanConstant(false);
        assertFalse(ySQLConstant_BooleanConstant0.isString());
        assertTrue(ySQLConstant_BooleanConstant0.isBoolean());

        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = new YSQLConstant.ByteConstant("2234");
        YSQLConstant ySQLConstant0 = ySQLConstant_ByteConstant0.isLessThan(ySQLConstant_BooleanConstant0);
        assertFalse(ySQLConstant0.isInt());
        assertEquals("FALSE", ySQLConstant_BooleanConstant0.getTextRepresentation());
        assertEquals("FALSE", ySQLConstant0.getUnquotedTextRepresentation());
        assertFalse(ySQLConstant_ByteConstant0.isNull());
    }

    @Test
    public void test142() throws Throwable {
        YSQLConstant.FloatConstant ySQLConstant_FloatConstant0 = new YSQLConstant.FloatConstant((-2716.0F));
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLConstant_FloatConstant0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.FLOAT, ySQLSchema_YSQLDataType0);
    }
}
