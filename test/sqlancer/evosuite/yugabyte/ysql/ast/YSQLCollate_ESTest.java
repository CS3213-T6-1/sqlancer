/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 02:32:15 GMT 2025
 */

package sqlancer.evosuite.yugabyte.ysql.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.Randomly;
import sqlancer.common.ast.JoinBase;
import sqlancer.yugabyte.ysql.ast.YSQLCollate;
import sqlancer.yugabyte.ysql.ast.YSQLConstant;
import sqlancer.yugabyte.ysql.ast.YSQLExpression;
import sqlancer.yugabyte.ysql.ast.YSQLJoin;
import sqlancer.yugabyte.ysql.ast.YSQLSelect;
import sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator;
import sqlancer.yugabyte.ysql.YSQLSchema;

public class YSQLCollate_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLSelect0, "");
        ySQLCollate0.getExpressionType();
    }

    @Test
    public void test1() throws Throwable {
        YSQLCollate ySQLCollate0 = new YSQLCollate((YSQLExpression) null, "yK[\":<");
        YSQLExpression ySQLExpression0 = ySQLCollate0.getExpr();
        assertNull(ySQLExpression0);
    }

    @Test
    public void test2() throws Throwable {
        YSQLConstant.StringConstant ySQLConstant_StringConstant0 = new YSQLConstant.StringConstant("|d (MDjh^~");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BOOLEAN;
        YSQLConstant ySQLConstant0 = ySQLConstant_StringConstant0.cast(ySQLSchema_YSQLDataType0);
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLConstant0, (String) null);
        String string0 = ySQLCollate0.getCollate();
        assertNull(string0);
    }

    @Test
    public void test3() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.REAL;
        YSQLExpression ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLExpression0, "");
        String string0 = ySQLCollate0.getCollate();
        assertEquals("", string0);
    }

    @Test
    public void test4() throws Throwable {
        YSQLCollate ySQLCollate0 = new YSQLCollate((YSQLExpression) null, "yK[\":<");
        // Undeclared exception!
        try {
            ySQLCollate0.getExpressionType();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLCollate", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        JoinBase.JoinType ySQLJoin_YSQLJoinType0 = JoinBase.JoinType.FULL;
        YSQLJoin ySQLJoin0 = new YSQLJoin((YSQLExpression) null, (YSQLExpression) null, ySQLJoin_YSQLJoinType0);
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLJoin0, "");
        // Undeclared exception!
        try {
            ySQLCollate0.getExpressionType();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test6() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant(3459L);
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLConstant0, "sql");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLCollate0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.INT, ySQLSchema_YSQLDataType0);
    }

    @Test
    public void test7() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant(3459L);
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLConstant0, "sql");
        YSQLConstant ySQLConstant1 = ySQLCollate0.getExpectedValue();
        assertNull(ySQLConstant1);
    }

    @Test
    public void test8() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createIntConstant(3459L);
        YSQLCollate ySQLCollate0 = new YSQLCollate(ySQLConstant0, "sql");
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = (YSQLConstant.IntConstant) ySQLCollate0.getExpr();
        assertEquals("3459", ySQLConstant_IntConstant0.getTextRepresentation());
    }

    @Test
    public void test9() throws Throwable {
        YSQLCollate ySQLCollate0 = new YSQLCollate((YSQLExpression) null, "Fk~m9IW@DLS!_0'");
        String string0 = ySQLCollate0.getCollate();
        assertEquals("Fk~m9IW@DLS!_0'", string0);
    }
}
