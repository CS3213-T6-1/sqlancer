/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:36:55 GMT 2025
 */

package sqlancer.evosuite.yugabyte.ysql.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.yugabyte.ysql.ast.YSQLBinaryComparisonOperation;
import sqlancer.yugabyte.ysql.ast.YSQLBinaryRangeOperation;
import sqlancer.yugabyte.ysql.ast.YSQLConstant;
import sqlancer.yugabyte.ysql.ast.YSQLExpression;
import sqlancer.yugabyte.ysql.ast.YSQLFunction;
import sqlancer.yugabyte.ysql.ast.YSQLPrefixOperation;
import sqlancer.yugabyte.ysql.ast.YSQLSelect;
import sqlancer.yugabyte.ysql.YSQLSchema;

public class YSQLBinaryComparisonOperation_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        YSQLConstant.StringConstant ySQLConstant_StringConstant0 = new YSQLConstant.StringConstant("");
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(
                ySQLConstant_StringConstant0, ySQLConstant_StringConstant0,
                ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation0.getExpectedValue();
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation0.getExpectedValue();
        YSQLConstant ySQLConstant2 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant0, ySQLConstant1);
        assertEquals("TRUE", ySQLConstant2.getUnquotedTextRepresentation());
        assertTrue(ySQLConstant1.asBoolean());
    }

    @Test
    public void test01() throws Throwable {
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.IS_DISTINCT;
        YSQLConstant[] ySQLConstantArray0 = new YSQLConstant[4];
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        // Undeclared exception!
        try {
            ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0.getExpectedValue(ySQLConstant_YSQLNullConstant0,
                    ySQLConstantArray0[3]);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLBinaryComparisonOperation$YSQLBinaryComparisonOperator$3",
                    e);
        }
    }

    @Test
    public void test02() throws Throwable {
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator
                .getRandom();
        YSQLConstant[] ySQLConstantArray0 = new YSQLConstant[4];
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant_YSQLNullConstant0, ySQLConstantArray0[0]);
        assertEquals("NULL", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test03() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLPrefixOperation.PrefixOperator ySQLPrefixOperation_PrefixOperator0 = YSQLPrefixOperation.PrefixOperator.UNARY_MINUS;
        YSQLPrefixOperation ySQLPrefixOperation0 = new YSQLPrefixOperation(ySQLConstant_YSQLNullConstant0,
                ySQLPrefixOperation_PrefixOperator0);
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(
                ySQLConstant_YSQLNullConstant0, ySQLPrefixOperation0,
                ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        // Undeclared exception!
        try {
            ySQLBinaryComparisonOperation0.getExpectedValue();
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLPrefixOperation$PrefixOperator$3", e);
        }
    }

    @Test
    public void test04() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLExpression ySQLExpression0 = YSQLConstant.createBitConstant(1935L);
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLExpression0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        // Undeclared exception!
        try {
            ySQLBinaryComparisonOperation0.getExpectedValue();
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // B'11110001111'
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLConstant", e);
        }
    }

    @Test
    public void test05() throws Throwable {
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(
                (YSQLExpression) null, (YSQLExpression) null,
                ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        // Undeclared exception!
        try {
            ySQLBinaryComparisonOperation0.getExpectedValue();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLBinaryComparisonOperation", e);
        }
    }

    @Test
    public void test06() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.IS_NOT_DISTINCT;
        YSQLConstant.InetConstant ySQLConstant_InetConstant0 = new YSQLConstant.InetConstant((String) null);
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant_InetConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        // Undeclared exception!
        try {
            ySQLBinaryComparisonOperation0.getExpectedValue();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // 'null'
            //
        }
    }

    @Test
    public void test07() throws Throwable {
        YSQLFunction.YSQLFunctionWithResult ySQLFunction_YSQLFunctionWithResult0 = YSQLFunction.YSQLFunctionWithResult.LENGTH;
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BOOLEAN;
        YSQLExpression[] ySQLExpressionArray0 = new YSQLExpression[0];
        YSQLFunction ySQLFunction0 = new YSQLFunction(ySQLFunction_YSQLFunctionWithResult0, ySQLSchema_YSQLDataType0,
                ySQLExpressionArray0);
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.NOT_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLFunction0,
                ySQLFunction0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        // Undeclared exception!
        try {
            ySQLBinaryComparisonOperation0.getExpectedValue();
            fail("Expecting exception: ArrayIndexOutOfBoundsException");

        } catch (ArrayIndexOutOfBoundsException e) {
            //
            // Index 0 out of bounds for length 0
            //
            verifyException("sqlancer.yugabyte.ysql.ast.YSQLFunction$YSQLFunctionWithResult$3", e);
        }
    }

    @Test
    public void test08() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation0.getExpectedValue();
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation1 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant1, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant2 = ySQLBinaryComparisonOperation1.getExpectedValue();
        assertNotSame(ySQLConstant2, ySQLConstant1);
        assertEquals("TRUE", ySQLConstant2.getTextRepresentation());
    }

    @Test
    public void test09() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS_EQUALS;
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant0, ySQLConstant0);
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator1 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant1,
                ySQLConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator1);
        YSQLConstant ySQLConstant2 = ySQLBinaryComparisonOperation0.getExpectedValue();
        assertTrue(ySQLConstant1.asBoolean());
        assertEquals("TRUE", ySQLConstant2.getUnquotedTextRepresentation());
    }

    @Test
    public void test10() throws Throwable {
        YSQLConstant.StringConstant ySQLConstant_StringConstant0 = new YSQLConstant.StringConstant("");
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(
                ySQLConstant_StringConstant0, ySQLConstant_StringConstant0,
                ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation0.getExpectedValue();
        assertNotNull(ySQLConstant0);

        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator1 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER_EQUALS;
        ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator1.getExpectedValue(ySQLConstant0, ySQLConstant0);
        assertTrue(ySQLConstant0.asBoolean());
        assertEquals("TRUE", ySQLConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test11() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER_EQUALS;
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant_YSQLNullConstant0, ySQLConstant_YSQLNullConstant0);
        assertFalse(ySQLConstant0.isString());
    }

    @Test
    public void test12() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant ySQLConstant1 = YSQLConstant.createTrue();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER;
        YSQLConstant ySQLConstant2 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant0, ySQLConstant1);
        assertFalse(ySQLConstant2.asBoolean());
    }

    @Test
    public void test13() throws Throwable {
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER;
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant0, ySQLConstant0);
        assertEquals("FALSE", ySQLConstant1.getTextRepresentation());
    }

    @Test
    public void test14() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.GREATER;
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant_YSQLNullConstant0, ySQLConstant_YSQLNullConstant0);
        assertEquals("NULL", ySQLConstant0.getTextRepresentation());
    }

    @Test
    public void test15() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(
                ySQLConstant_YSQLNullConstant0, ySQLConstant_YSQLNullConstant0,
                ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation0.getExpectedValue();
        assertNotSame(ySQLConstant0, ySQLConstant_YSQLNullConstant0);
        assertNotNull(ySQLConstant0);
    }

    @Test
    public void test16() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant ySQLConstant1 = ySQLConstant0.isEquals(ySQLConstant0);
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.NOT_EQUALS;
        YSQLConstant ySQLConstant2 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant1, ySQLConstant0);
        assertEquals("TRUE", ySQLConstant2.getUnquotedTextRepresentation());
    }

    @Test
    public void test17() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.NOT_EQUALS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation0.getExpectedValue();
        assertNotNull(ySQLConstant1);
        assertEquals("FALSE", ySQLConstant1.getUnquotedTextRepresentation());
    }

    @Test
    public void test18() throws Throwable {
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.NOT_EQUALS;
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant_YSQLNullConstant0, ySQLConstant_YSQLNullConstant0);
        assertNotSame(ySQLConstant0, ySQLConstant_YSQLNullConstant0);
    }

    @Test
    public void test19() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.IS_DISTINCT;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation0.getExpectedValue();
        assertNotNull(ySQLConstant1);
        assertFalse(ySQLConstant1.asBoolean());
    }

    @Test
    public void test20() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLConstant ySQLConstant1 = YSQLConstant.createNullConstant();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.IS_DISTINCT;
        YSQLConstant ySQLConstant2 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0
                .getExpectedValue(ySQLConstant0, ySQLConstant1);
        assertTrue(ySQLConstant2.asBoolean());
    }

    @Test
    public void test21() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator
                .getRandom();
        YSQLBinaryRangeOperation.YSQLBinaryRangeOperator ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0 = YSQLBinaryRangeOperation.YSQLBinaryRangeOperator.DIFFERENCE;
        YSQLBinaryRangeOperation ySQLBinaryRangeOperation0 = new YSQLBinaryRangeOperation(
                ySQLBinaryRangeOperation_YSQLBinaryRangeOperator0, ySQLConstant0, ySQLConstant0);
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation1 = new YSQLBinaryComparisonOperation(
                ySQLBinaryComparisonOperation0, ySQLBinaryRangeOperation0,
                ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant1 = ySQLBinaryComparisonOperation1.getExpectedValue();
        assertNull(ySQLConstant1);
    }

    @Test
    public void test22() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator.LESS;
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLSelect0,
                ySQLSelect0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLConstant ySQLConstant0 = ySQLBinaryComparisonOperation0.getExpectedValue();
        assertNull(ySQLConstant0);
    }

    @Test
    public void test23() throws Throwable {
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator
                .getRandom();
        String string0 = ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0.getTextRepresentation();
        assertEquals("=", string0);
    }

    @Test
    public void test24() throws Throwable {
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0 = YSQLBinaryComparisonOperation.YSQLBinaryComparisonOperator
                .getRandom();
        YSQLBinaryComparisonOperation ySQLBinaryComparisonOperation0 = new YSQLBinaryComparisonOperation(ySQLConstant0,
                ySQLConstant0, ySQLBinaryComparisonOperation_YSQLBinaryComparisonOperator0);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = ySQLBinaryComparisonOperation0.getExpressionType();
        assertEquals(YSQLSchema.YSQLDataType.BOOLEAN, ySQLSchema_YSQLDataType0);
    }
}
