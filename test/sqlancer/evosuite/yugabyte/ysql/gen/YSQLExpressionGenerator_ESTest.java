/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:16:53 GMT 2025
 */

package sqlancer.evosuite.yugabyte.ysql.gen;

import static org.junit.jupiter.api.Assertions.*;
import java.util.List;

import org.junit.jupiter.api.Test;
import sqlancer.Randomly;
import sqlancer.yugabyte.ysql.ast.YSQLConstant;
import sqlancer.yugabyte.ysql.ast.YSQLExpression;
import sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator;
import sqlancer.yugabyte.ysql.YSQLGlobalState;
import sqlancer.yugabyte.ysql.YSQLSchema;

public class YSQLExpressionGenerator_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        YSQLGlobalState ySQLGlobalState0 = new YSQLGlobalState();
        // Undeclared exception!
        try {
            YSQLExpressionGenerator.createSubquery(ySQLGlobalState0,
                    "sqlancer.yugabyte.ysql.ast.YSQLBinaryRangeOperation$YSQLBinaryRangeComparisonOperator",
                    (YSQLSchema.YSQLTables) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator", e);
        }
    }

    @Test
    public void test01() throws Throwable {
        Randomly randomly0 = new Randomly(950L);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.FLOAT;
        YSQLConstant.FloatConstant ySQLConstant_FloatConstant0 = (YSQLConstant.FloatConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertFalse(ySQLConstant_FloatConstant0.isString());
    }

    @Test
    public void test02() throws Throwable {
        YSQLGlobalState ySQLGlobalState0 = new YSQLGlobalState();
        YSQLExpressionGenerator ySQLExpressionGenerator0 = null;
        try {
            ySQLExpressionGenerator0 = new YSQLExpressionGenerator(ySQLGlobalState0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator", e);
        }
    }

    @Test
    public void test03() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INET;
        YSQLConstant.InetConstant ySQLConstant_InetConstant0 = (YSQLConstant.InetConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertEquals("'1.1.5.7'", ySQLConstant_InetConstant0.getTextRepresentation());
    }

    @Test
    public void test04() throws Throwable {
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BIT;
        // Undeclared exception!
        try {
            YSQLExpressionGenerator.generateConstant((Randomly) null, ySQLSchema_YSQLDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator", e);
        }
    }

    @Test
    public void test05() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.RANGE;
        YSQLConstant.RangeConstant ySQLConstant_RangeConstant0 = (YSQLConstant.RangeConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertFalse(ySQLConstant_RangeConstant0.isInt());
    }

    @Test
    public void test06() throws Throwable {
        Randomly randomly0 = new Randomly(950L);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.REAL;
        YSQLExpression ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertEquals(YSQLSchema.YSQLDataType.FLOAT, ySQLExpression0.getExpressionType());
    }

    @Test
    public void test07() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.DECIMAL;
        YSQLExpression ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertEquals(YSQLSchema.YSQLDataType.DECIMAL, ySQLExpression0.getExpressionType());
    }

    @Test
    public void test08() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLConstant.StringConstant ySQLConstant_StringConstant0 = (YSQLConstant.StringConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertEquals("", ySQLConstant_StringConstant0.getUnquotedTextRepresentation());
    }

    @Test
    public void test09() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        YSQLConstant.ByteConstant ySQLConstant_ByteConstant0 = (YSQLConstant.ByteConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertTrue(ySQLConstant_ByteConstant0.isString());
    }

    /*
     * Test disabled because it contains mock() function calls that are not implemented
     *
     * @Test public void test10() throws Throwable { Supplier<String> supplier0 = (Supplier<String>)
     * mock(Supplier.class, new ViolatedAssumptionAnswer()); Randomly randomly0 = new Randomly(supplier0);
     * YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BOOLEAN; YSQLExpression
     * ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
     * assertEquals(YSQLSchema.YSQLDataType.BOOLEAN, ySQLExpression0.getExpressionType()); }
     */

    @Test
    public void test11() throws Throwable {
        Randomly randomly0 = new Randomly();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INT;
        YSQLConstant.IntConstant ySQLConstant_IntConstant0 = (YSQLConstant.IntConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertEquals(1L, ySQLConstant_IntConstant0.asInt());
    }

    @Test
    public void test12() throws Throwable {
        Randomly randomly0 = new Randomly();
        randomly0.getRandomBigDecimal();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.MONEY;
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = (YSQLConstant.YSQLNullConstant) YSQLExpressionGenerator
                .generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertFalse(ySQLConstant_YSQLNullConstant0.isBoolean());
    }

    @Test
    public void test13() throws Throwable {
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.MONEY;
        Randomly randomly0 = new Randomly(7L);
        YSQLExpression ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        assertEquals(YSQLSchema.YSQLDataType.MONEY, ySQLExpression0.getExpressionType());
    }

    @Test
    public void test14() throws Throwable {
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INET;
        YSQLGlobalState ySQLGlobalState0 = new YSQLGlobalState();
        // Undeclared exception!
        try {
            YSQLExpressionGenerator.generateExpression(ySQLGlobalState0, ySQLSchema_YSQLDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator", e);
        }
    }

    @Test
    public void test15() throws Throwable {
        YSQLGlobalState ySQLGlobalState0 = new YSQLGlobalState();
        // Undeclared exception!
        try {
            YSQLExpressionGenerator.generateExpression(ySQLGlobalState0, (List<YSQLSchema.YSQLColumn>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator", e);
        }
    }

    @Test
    public void test16() throws Throwable {
        YSQLGlobalState ySQLGlobalState0 = new YSQLGlobalState();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        // Undeclared exception!
        try {
            YSQLExpressionGenerator.generateExpression(ySQLGlobalState0, (List<YSQLSchema.YSQLColumn>) null,
                    ySQLSchema_YSQLDataType0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator", e);
        }
    }
}
