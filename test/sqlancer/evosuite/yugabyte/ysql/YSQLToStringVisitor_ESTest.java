/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:19:58 GMT 2025
 */

package sqlancer.evosuite.yugabyte.ysql;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;
import sqlancer.Randomly;
import sqlancer.yugabyte.ysql.ast.YSQLAggregate;
import sqlancer.yugabyte.ysql.ast.YSQLBetweenOperation;
import sqlancer.yugabyte.ysql.ast.YSQLBinaryLogicalOperation;
import sqlancer.yugabyte.ysql.ast.YSQLCastOperation;
import sqlancer.yugabyte.ysql.ast.YSQLColumnValue;
import sqlancer.yugabyte.ysql.ast.YSQLConcatOperation;
import sqlancer.yugabyte.ysql.ast.YSQLConstant;
import sqlancer.yugabyte.ysql.ast.YSQLExpression;
import sqlancer.yugabyte.ysql.ast.YSQLFunction;
import sqlancer.yugabyte.ysql.ast.YSQLFunctionWithUnknownResult;
import sqlancer.yugabyte.ysql.ast.YSQLInOperation;
import sqlancer.yugabyte.ysql.ast.YSQLOrderByTerm;
import sqlancer.yugabyte.ysql.ast.YSQLPOSIXRegularExpression;
import sqlancer.yugabyte.ysql.ast.YSQLPostfixOperation;
import sqlancer.yugabyte.ysql.ast.YSQLPostfixText;
import sqlancer.yugabyte.ysql.ast.YSQLPrefixOperation;
import sqlancer.yugabyte.ysql.ast.YSQLSelect;
import sqlancer.yugabyte.ysql.ast.YSQLSimilarTo;
import sqlancer.yugabyte.ysql.gen.YSQLExpressionGenerator;
import sqlancer.yugabyte.ysql.YSQLCompoundDataType;
import sqlancer.yugabyte.ysql.YSQLSchema;
import sqlancer.yugabyte.ysql.YSQLToStringVisitor;

public class YSQLToStringVisitor_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        ySQLToStringVisitor0.visitSpecific((YSQLExpression) ySQLConstant0);
        assertFalse(ySQLConstant0.isBoolean());
    }

    @Test
    public void test01() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLPOSIXRegularExpression.POSIXRegex ySQLPOSIXRegularExpression_POSIXRegex0 = YSQLPOSIXRegularExpression.POSIXRegex.MATCH_CASE_INSENSITIVE;
        YSQLPOSIXRegularExpression ySQLPOSIXRegularExpression0 = new YSQLPOSIXRegularExpression(ySQLConstant0,
                ySQLConstant0, ySQLPOSIXRegularExpression_POSIXRegex0);
        ySQLToStringVisitor0.visit(ySQLPOSIXRegularExpression0);
        assertEquals("NULL~*NULL", ySQLToStringVisitor0.get());
    }

    @Test
    public void test02() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.BitConstant ySQLConstant_BitConstant0 = new YSQLConstant.BitConstant((-1087L));
        ySQLToStringVisitor0.visit((YSQLConstant) ySQLConstant_BitConstant0);
        assertFalse(ySQLConstant_BitConstant0.isBoolean());
    }

    @Test
    public void test03() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.MONEY;
        YSQLSchema.YSQLColumn ySQLSchema_YSQLColumn0 = new YSQLSchema.YSQLColumn("Hq?3_o]S3DHO",
                ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLColumnValue ySQLColumnValue0 = YSQLColumnValue.create(ySQLSchema_YSQLColumn0, ySQLConstant0);
        ySQLToStringVisitor0.visit(ySQLColumnValue0);
        assertEquals("Hq?3_o]S3DHO", ySQLToStringVisitor0.get());
    }

    @Test
    public void test04() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        LinkedList<YSQLExpression> linkedList0 = new LinkedList<YSQLExpression>();
        YSQLAggregate.YSQLAggregateFunction ySQLAggregate_YSQLAggregateFunction0 = YSQLAggregate.YSQLAggregateFunction.AVG;
        YSQLAggregate ySQLAggregate0 = new YSQLAggregate(linkedList0, ySQLAggregate_YSQLAggregateFunction0);
        ySQLToStringVisitor0.visit(ySQLAggregate0);
        assertEquals("AVG()", ySQLToStringVisitor0.get());
    }

    @Test
    public void test05() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        Randomly randomly0 = new Randomly((-1623L));
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLExpression ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        YSQLOrderByTerm.YSQLOrder ySQLOrderByTerm_YSQLOrder0 = YSQLOrderByTerm.YSQLOrder.ASC;
        YSQLOrderByTerm ySQLOrderByTerm0 = new YSQLOrderByTerm(ySQLExpression0, ySQLOrderByTerm_YSQLOrder0);
        YSQLPrefixOperation.PrefixOperator ySQLPrefixOperation_PrefixOperator0 = YSQLPrefixOperation.PrefixOperator.NOT;
        YSQLPrefixOperation ySQLPrefixOperation0 = new YSQLPrefixOperation(ySQLOrderByTerm0,
                ySQLPrefixOperation_PrefixOperator0);
        ySQLToStringVisitor0.visit(ySQLPrefixOperation0);
        assertEquals("NOT ('' ASC)", ySQLToStringVisitor0.get());
    }

    @Test
    public void test06() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        YSQLConstant ySQLConstant0 = YSQLConstant.createDoubleConstant((-1.7976931348623157E308));
        YSQLPostfixText ySQLPostfixText0 = new YSQLPostfixText(ySQLConstant0, (String) null, ySQLConstant0,
                ySQLSchema_YSQLDataType0);
        ySQLToStringVisitor0.visit(ySQLPostfixText0);
        assertEquals(YSQLSchema.YSQLDataType.BYTEA, ySQLPostfixText0.getExpressionType());
    }

    @Test
    public void test07() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLPostfixOperation.PostfixOperator ySQLPostfixOperation_PostfixOperator0 = YSQLPostfixOperation.PostfixOperator.IS_UNKNOWN;
        YSQLPostfixOperation ySQLPostfixOperation0 = new YSQLPostfixOperation(ySQLConstant_YSQLNullConstant0,
                ySQLPostfixOperation_PostfixOperator0);
        ySQLToStringVisitor0.visit(ySQLPostfixOperation0);
        assertEquals("(NULL) IS UNKNOWN", ySQLToStringVisitor0.get());
    }

    @Test
    public void test08() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        Randomly randomly0 = new Randomly((-1623L));
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLExpression ySQLExpression0 = YSQLExpressionGenerator.generateConstant(randomly0, ySQLSchema_YSQLDataType0);
        YSQLOrderByTerm.YSQLOrder ySQLOrderByTerm_YSQLOrder0 = YSQLOrderByTerm.YSQLOrder.ASC;
        YSQLOrderByTerm ySQLOrderByTerm0 = new YSQLOrderByTerm(ySQLExpression0, ySQLOrderByTerm_YSQLOrder0);
        ySQLToStringVisitor0.visit(ySQLOrderByTerm0);
        assertEquals("'' ASC", ySQLToStringVisitor0.get());
    }

    @Test
    public void test09() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLPOSIXRegularExpression.POSIXRegex ySQLPOSIXRegularExpression_POSIXRegex0 = YSQLPOSIXRegularExpression.POSIXRegex.MATCH_CASE_INSENSITIVE;
        YSQLPOSIXRegularExpression ySQLPOSIXRegularExpression0 = new YSQLPOSIXRegularExpression(ySQLConstant0,
                ySQLConstant0, ySQLPOSIXRegularExpression_POSIXRegex0);
        YSQLBinaryLogicalOperation.BinaryLogicalOperator ySQLBinaryLogicalOperation_BinaryLogicalOperator0 = YSQLBinaryLogicalOperation.BinaryLogicalOperator.AND;
        YSQLBinaryLogicalOperation ySQLBinaryLogicalOperation0 = new YSQLBinaryLogicalOperation(
                ySQLPOSIXRegularExpression0, ySQLConstant0, ySQLBinaryLogicalOperation_BinaryLogicalOperator0);
        ySQLToStringVisitor0.visit(ySQLBinaryLogicalOperation0);
        assertEquals(YSQLSchema.YSQLDataType.BOOLEAN, ySQLBinaryLogicalOperation0.getExpressionType());
    }

    @Test
    public void test10() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLAggregate.YSQLAggregateFunction ySQLAggregate_YSQLAggregateFunction0 = YSQLAggregate.YSQLAggregateFunction.BIT_OR;
        LinkedList<YSQLExpression> linkedList0 = new LinkedList<YSQLExpression>();
        YSQLAggregate ySQLAggregate0 = new YSQLAggregate(linkedList0, ySQLAggregate_YSQLAggregateFunction0);
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.RANGE;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLAggregate0, ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(BIT_OR())::int4range", ySQLToStringVisitor0.get());
    }

    @Test
    public void test11() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLAggregate.YSQLAggregateFunction ySQLAggregate_YSQLAggregateFunction0 = YSQLAggregate.YSQLAggregateFunction.COUNT;
        YSQLAggregate ySQLAggregate0 = new YSQLAggregate((List<YSQLExpression>) null,
                ySQLAggregate_YSQLAggregateFunction0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visitSpecific((YSQLExpression) ySQLAggregate0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.visitor.ToStringVisitor", e);
        }
    }

    @Test
    public void test12() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visitSpecific((YSQLExpression) ySQLSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test13() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visitSpecific((YSQLExpression) null);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test14() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLSimilarTo) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test15() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSimilarTo ySQLSimilarTo0 = new YSQLSimilarTo(ySQLSelect0, ySQLSelect0, ySQLSelect0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLSimilarTo0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test16() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSimilarTo ySQLSimilarTo0 = new YSQLSimilarTo((YSQLExpression) null, (YSQLExpression) null,
                (YSQLExpression) null);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLSimilarTo0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test17() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLSelect) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test18() throws Throwable {
        YSQLSelect.SelectType ySQLSelect_SelectType0 = YSQLSelect.SelectType.DISTINCT;
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        ySQLSelect0.setSelectType(ySQLSelect_SelectType0);
        YSQLConcatOperation ySQLConcatOperation0 = new YSQLConcatOperation((YSQLExpression) null, ySQLSelect0);
        ySQLSelect0.setDistinctOnClause(ySQLConcatOperation0);
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLSelect0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test19() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLSelect.YSQLSubquery ySQLSelect_YSQLSubquery0 = new YSQLSelect.YSQLSubquery(ySQLSelect0, "SUM_INT");
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLSelect_YSQLSubquery0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test20() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLSelect.YSQLFromTable) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test21() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLPrefixOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test22() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLPrefixOperation.PrefixOperator ySQLPrefixOperation_PrefixOperator0 = YSQLPrefixOperation.PrefixOperator.UNARY_PLUS;
        YSQLPrefixOperation ySQLPrefixOperation0 = new YSQLPrefixOperation((YSQLExpression) null,
                ySQLPrefixOperation_PrefixOperator0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPrefixOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test23() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLPostfixText) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test24() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant("m|vcF $&S~\"<qS3");
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.DECIMAL;
        YSQLPostfixText ySQLPostfixText0 = new YSQLPostfixText((YSQLExpression) null, "m|vcF $&S~\"<qS3",
                ySQLConstant0, ySQLSchema_YSQLDataType0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPostfixText0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test25() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLPostfixOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test26() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLPostfixOperation.PostfixOperator ySQLPostfixOperation_PostfixOperator0 = YSQLPostfixOperation.PostfixOperator.IS_NOT_UNKNOWN;
        YSQLPostfixOperation ySQLPostfixOperation0 = new YSQLPostfixOperation((YSQLExpression) null,
                ySQLPostfixOperation_PostfixOperator0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPostfixOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test27() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLPOSIXRegularExpression) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test28() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLPOSIXRegularExpression.POSIXRegex ySQLPOSIXRegularExpression_POSIXRegex0 = YSQLPOSIXRegularExpression.POSIXRegex.MATCH_CASE_INSENSITIVE;
        YSQLPOSIXRegularExpression ySQLPOSIXRegularExpression0 = new YSQLPOSIXRegularExpression((YSQLExpression) null,
                (YSQLExpression) null, ySQLPOSIXRegularExpression_POSIXRegex0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPOSIXRegularExpression0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test29() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLOrderByTerm) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test30() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLOrderByTerm.YSQLOrder ySQLOrderByTerm_YSQLOrder0 = YSQLOrderByTerm.YSQLOrder.DESC;
        YSQLOrderByTerm ySQLOrderByTerm0 = new YSQLOrderByTerm((YSQLExpression) null, ySQLOrderByTerm_YSQLOrder0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLOrderByTerm0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test31() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        List<YSQLExpression> list0 = ySQLSelect0.getGroupByClause();
        YSQLInOperation ySQLInOperation0 = new YSQLInOperation(ySQLSelect0, list0, true);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLInOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test32() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLInOperation ySQLInOperation0 = new YSQLInOperation((YSQLExpression) null, (List<YSQLExpression>) null,
                true);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLInOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test33() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLFunction) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test34() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLFunction.YSQLFunctionWithResult ySQLFunction_YSQLFunctionWithResult0 = YSQLFunction.YSQLFunctionWithResult.LOWER;
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.MONEY;
        YSQLExpression[] ySQLExpressionArray0 = new YSQLExpression[1];
        ySQLExpressionArray0[0] = (YSQLExpression) ySQLSelect0;
        YSQLFunction ySQLFunction0 = new YSQLFunction(ySQLFunction_YSQLFunctionWithResult0, ySQLSchema_YSQLDataType0,
                ySQLExpressionArray0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLFunction0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test35() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLCastOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test36() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLFunctionWithUnknownResult ySQLFunctionWithUnknownResult0 = YSQLFunctionWithUnknownResult.EXP;
        YSQLExpression[] ySQLExpressionArray0 = new YSQLExpression[1];
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.REAL;
        YSQLFunction ySQLFunction0 = new YSQLFunction(ySQLFunctionWithUnknownResult0, ySQLSchema_YSQLDataType0,
                ySQLExpressionArray0);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLFunction0, (YSQLCompoundDataType) null);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLCastOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test37() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLBinaryLogicalOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.visitor.ToStringVisitor", e);
        }
    }

    @Test
    public void test38() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLBinaryLogicalOperation.BinaryLogicalOperator ySQLBinaryLogicalOperation_BinaryLogicalOperator0 = YSQLBinaryLogicalOperation.BinaryLogicalOperator.OR;
        YSQLBinaryLogicalOperation ySQLBinaryLogicalOperation0 = new YSQLBinaryLogicalOperation((YSQLExpression) null,
                (YSQLExpression) null, ySQLBinaryLogicalOperation_BinaryLogicalOperator0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLBinaryLogicalOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test39() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLBetweenOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test40() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLBetweenOperation ySQLBetweenOperation0 = new YSQLBetweenOperation(ySQLSelect0, ySQLSelect0, ySQLSelect0,
                false);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLBetweenOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test41() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLBetweenOperation ySQLBetweenOperation0 = new YSQLBetweenOperation((YSQLExpression) null,
                (YSQLExpression) null, (YSQLExpression) null, false);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLBetweenOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test42() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLSelect.SelectType ySQLSelect_SelectType0 = YSQLSelect.SelectType.DISTINCT;
        ySQLSelect0.setSelectType(ySQLSelect_SelectType0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test43() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test44() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLColumnValue) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test45() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLConstant) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test46() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INET;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant0, ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(TRUE)::INET", ySQLToStringVisitor0.get());
    }

    @Test
    public void test47() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BIT;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant0, ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::BIT", ySQLToStringVisitor0.get());
    }

    @Test
    public void test48() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.MONEY;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant_YSQLNullConstant0,
                ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::MONEY", ySQLToStringVisitor0.get());
    }

    @Test
    public void test49() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.REAL;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0, 3);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant_YSQLNullConstant0,
                ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::REAL(3)", ySQLToStringVisitor0.get());
    }

    @Test
    public void test50() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.DECIMAL;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant_YSQLNullConstant0,
                ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::DECIMAL", ySQLToStringVisitor0.get());
    }

    @Test
    public void test51() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.TEXT;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant0, ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::VARCHAR", ySQLToStringVisitor0.get());
    }

    @Test
    public void test52() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant0, ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::BYTEA", ySQLToStringVisitor0.get());
    }

    @Test
    public void test53() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BOOLEAN;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant_YSQLNullConstant0,
                ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::BOOLEAN", ySQLToStringVisitor0.get());
    }

    @Test
    public void test54() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.FLOAT;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant0, ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(TRUE)::FLOAT", ySQLToStringVisitor0.get());
    }

    @Test
    public void test55() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.INT;
        YSQLCompoundDataType ySQLCompoundDataType0 = YSQLCompoundDataType.create(ySQLSchema_YSQLDataType0);
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLConstant_YSQLNullConstant0,
                ySQLCompoundDataType0);
        ySQLToStringVisitor0.visit(ySQLCastOperation0);
        assertEquals("(NULL)::INT", ySQLToStringVisitor0.get());
    }

    @Test
    public void test56() throws Throwable {
        LinkedList<YSQLSchema.YSQLColumn> linkedList0 = new LinkedList<YSQLSchema.YSQLColumn>();
        LinkedList<YSQLSchema.YSQLIndex> linkedList1 = new LinkedList<YSQLSchema.YSQLIndex>();
        LinkedList<YSQLSchema.YSQLStatisticsObject> linkedList2 = new LinkedList<YSQLSchema.YSQLStatisticsObject>();
        YSQLSchema.YSQLTable.TableType ySQLSchema_YSQLTable_TableType0 = YSQLSchema.YSQLTable.TableType.STANDARD;
        YSQLSchema.YSQLTable ySQLSchema_YSQLTable0 = new YSQLSchema.YSQLTable("BIT", linkedList0, linkedList1,
                ySQLSchema_YSQLTable_TableType0, linkedList2, true, true);
        YSQLSelect.YSQLFromTable ySQLSelect_YSQLFromTable0 = new YSQLSelect.YSQLFromTable(ySQLSchema_YSQLTable0, true);
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        ySQLToStringVisitor0.visit(ySQLSelect_YSQLFromTable0);
        assertEquals("ONLY BIT", ySQLToStringVisitor0.get());
    }

    @Test
    public void test57() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        LinkedList<YSQLSchema.YSQLColumn> linkedList0 = new LinkedList<YSQLSchema.YSQLColumn>();
        LinkedList<YSQLSchema.YSQLIndex> linkedList1 = new LinkedList<YSQLSchema.YSQLIndex>();
        LinkedList<YSQLSchema.YSQLStatisticsObject> linkedList2 = new LinkedList<YSQLSchema.YSQLStatisticsObject>();
        YSQLSchema.YSQLTable.TableType ySQLSchema_YSQLTable_TableType0 = YSQLSchema.YSQLTable.TableType.STANDARD;
        YSQLSchema.YSQLTable ySQLSchema_YSQLTable0 = new YSQLSchema.YSQLTable("BIT_OR", linkedList0, linkedList1,
                ySQLSchema_YSQLTable_TableType0, linkedList2, false, false);
        YSQLSelect.YSQLFromTable ySQLSelect_YSQLFromTable0 = new YSQLSelect.YSQLFromTable(ySQLSchema_YSQLTable0, false);
        ySQLToStringVisitor0.visit(ySQLSelect_YSQLFromTable0);
        assertEquals("BIT_OR", ySQLToStringVisitor0.get());
    }

    @Test
    public void test58() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createTrue();
        YSQLSimilarTo ySQLSimilarTo0 = new YSQLSimilarTo(ySQLConstant0, ySQLConstant0, ySQLConstant0);
        ySQLToStringVisitor0.visit(ySQLSimilarTo0);
        assertEquals("(TRUE SIMILAR TO TRUETRUE)", ySQLToStringVisitor0.get());
    }

    @Test
    public void test59() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant.YSQLNullConstant ySQLConstant_YSQLNullConstant0 = new YSQLConstant.YSQLNullConstant();
        YSQLInOperation ySQLInOperation0 = new YSQLInOperation(ySQLConstant_YSQLNullConstant0,
                (List<YSQLExpression>) null, false);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLInOperation0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.visitor.ToStringVisitor", e);
        }
    }

    @Test
    public void test60() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createFalse();
        List<YSQLExpression> list0 = List.of((YSQLExpression) ySQLConstant0);
        YSQLInOperation ySQLInOperation0 = new YSQLInOperation(ySQLConstant0, list0, true);
        ySQLToStringVisitor0.visit(ySQLInOperation0);
        assertEquals("(FALSE) IN (FALSE)", ySQLToStringVisitor0.get());
    }

    @Test
    public void test61() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLExpression ySQLExpression0 = YSQLConstant.createInetConstant((String) null);
        YSQLBetweenOperation ySQLBetweenOperation0 = new YSQLBetweenOperation(ySQLExpression0, ySQLExpression0,
                ySQLExpression0, true);
        ySQLToStringVisitor0.visit(ySQLBetweenOperation0);
        assertEquals("('null') BETWEEN SYMMETRIC ('null') AND ('null')", ySQLToStringVisitor0.get());
    }

    @Test
    public void test62() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createTextConstant("INT16");
        YSQLBetweenOperation ySQLBetweenOperation0 = new YSQLBetweenOperation(ySQLConstant0, ySQLConstant0,
                ySQLConstant0, false);
        ySQLToStringVisitor0.visit(ySQLBetweenOperation0);
        String string0 = ySQLToStringVisitor0.get();
        assertEquals("('INT16') BETWEEN ('INT16') AND ('INT16')", string0);
    }

    @Test
    public void test63() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLCastOperation ySQLCastOperation0 = new YSQLCastOperation(ySQLSelect0, (YSQLCompoundDataType) null);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLCastOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test64() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.RANGE;
        YSQLFunctionWithUnknownResult ySQLFunctionWithUnknownResult0 = YSQLFunctionWithUnknownResult.CHR;
        YSQLExpression[] ySQLExpressionArray0 = new YSQLExpression[2];
        ySQLExpressionArray0[0] = (YSQLExpression) ySQLConstant0;
        ySQLExpressionArray0[1] = (YSQLExpression) ySQLConstant0;
        YSQLFunction ySQLFunction0 = new YSQLFunction(ySQLFunctionWithUnknownResult0, ySQLSchema_YSQLDataType0,
                ySQLExpressionArray0);
        ySQLToStringVisitor0.visit(ySQLFunction0);
        assertEquals("chr(NULL, NULL)", ySQLToStringVisitor0.get());
    }

    @Test
    public void test65() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLFunction.YSQLFunctionWithResult ySQLFunction_YSQLFunctionWithResult0 = YSQLFunction.YSQLFunctionWithResult.LOWER;
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.MONEY;
        YSQLExpression[] ySQLExpressionArray0 = new YSQLExpression[1];
        YSQLFunction ySQLFunction0 = new YSQLFunction(ySQLFunction_YSQLFunctionWithResult0, ySQLSchema_YSQLDataType0,
                ySQLExpressionArray0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLFunction0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test66() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLSelect.SelectType ySQLSelect_SelectType0 = YSQLSelect.SelectType.DISTINCT;
        ySQLSelect0.setSelectType(ySQLSelect_SelectType0);
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLPrefixOperation.PrefixOperator ySQLPrefixOperation_PrefixOperator0 = YSQLPrefixOperation.PrefixOperator.NOT;
        YSQLPrefixOperation ySQLPrefixOperation0 = new YSQLPrefixOperation(ySQLSelect0,
                ySQLPrefixOperation_PrefixOperator0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPrefixOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test67() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLSchema.YSQLDataType ySQLSchema_YSQLDataType0 = YSQLSchema.YSQLDataType.BYTEA;
        YSQLPostfixText ySQLPostfixText0 = new YSQLPostfixText(ySQLSelect0, "sqlancer.tidb.ast.TiDBTableReference",
                (YSQLConstant) null, ySQLSchema_YSQLDataType0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPostfixText0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test68() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLOrderByTerm.YSQLOrder ySQLOrderByTerm_YSQLOrder0 = YSQLOrderByTerm.YSQLOrder.ASC;
        YSQLOrderByTerm ySQLOrderByTerm0 = new YSQLOrderByTerm(ySQLSelect0, ySQLOrderByTerm_YSQLOrder0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLOrderByTerm0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test69() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLBinaryLogicalOperation.BinaryLogicalOperator ySQLBinaryLogicalOperation_BinaryLogicalOperator0 = YSQLBinaryLogicalOperation.BinaryLogicalOperator.AND;
        YSQLBinaryLogicalOperation ySQLBinaryLogicalOperation0 = new YSQLBinaryLogicalOperation(ySQLSelect0,
                (YSQLExpression) null, ySQLBinaryLogicalOperation_BinaryLogicalOperator0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLBinaryLogicalOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test70() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        String string0 = ySQLToStringVisitor0.get();
        assertEquals("", string0);
    }

    @Test
    public void test71() throws Throwable {
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLPostfixOperation.PostfixOperator ySQLPostfixOperation_PostfixOperator0 = YSQLPostfixOperation.PostfixOperator.IS_NOT_UNKNOWN;
        YSQLPostfixOperation ySQLPostfixOperation0 = new YSQLPostfixOperation(ySQLSelect0,
                ySQLPostfixOperation_PostfixOperator0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPostfixOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test72() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSchema.YSQLColumn ySQLSchema_YSQLColumn0 = YSQLSchema.YSQLColumn.createDummy("");
        YSQLConstant ySQLConstant0 = YSQLConstant.createNullConstant();
        YSQLColumnValue ySQLColumnValue0 = new YSQLColumnValue(ySQLSchema_YSQLColumn0, ySQLConstant0);
        YSQLSimilarTo ySQLSimilarTo0 = new YSQLSimilarTo(ySQLColumnValue0, ySQLConstant0, (YSQLExpression) null);
        ySQLToStringVisitor0.visit(ySQLSimilarTo0);
        assertEquals("( SIMILAR TO NULL)", ySQLToStringVisitor0.get());
    }

    @Test
    public void test73() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        YSQLSelect ySQLSelect0 = new YSQLSelect();
        YSQLPOSIXRegularExpression.POSIXRegex ySQLPOSIXRegularExpression_POSIXRegex0 = YSQLPOSIXRegularExpression.POSIXRegex.NOT_MATCH_CASE_SENSITIVE;
        YSQLPOSIXRegularExpression ySQLPOSIXRegularExpression0 = new YSQLPOSIXRegularExpression(ySQLSelect0,
                ySQLSelect0, ySQLPOSIXRegularExpression_POSIXRegex0);
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit(ySQLPOSIXRegularExpression0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test74() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLAggregate) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }

    @Test
    public void test75() throws Throwable {
        YSQLToStringVisitor ySQLToStringVisitor0 = new YSQLToStringVisitor();
        // Undeclared exception!
        try {
            ySQLToStringVisitor0.visit((YSQLSelect.YSQLSubquery) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.yugabyte.ysql.YSQLToStringVisitor", e);
        }
    }
}
