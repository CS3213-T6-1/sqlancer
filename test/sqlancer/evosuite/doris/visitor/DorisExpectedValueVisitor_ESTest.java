/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 16:46:55 GMT 2025
 */

package sqlancer.evosuite.doris.visitor;

import static org.junit.jupiter.api.Assertions.*;

import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.common.ast.BinaryOperatorNode;
import sqlancer.common.ast.newast.NewOrderingTerm;
import sqlancer.doris.ast.DorisAggregateOperation;
import sqlancer.doris.ast.DorisAlias;
import sqlancer.doris.ast.DorisBetweenOperation;
import sqlancer.doris.ast.DorisBinaryArithmeticOperation;
import sqlancer.doris.ast.DorisBinaryComparisonOperation;
import sqlancer.doris.ast.DorisBinaryLogicalOperation;
import sqlancer.doris.ast.DorisBinaryOperation;
import sqlancer.doris.ast.DorisCastOperation;
import sqlancer.doris.ast.DorisColumnReference;
import sqlancer.doris.ast.DorisColumnValue;
import sqlancer.doris.ast.DorisConstant;
import sqlancer.doris.ast.DorisExpression;
import sqlancer.doris.ast.DorisFunction;
import sqlancer.doris.ast.DorisFunctionOperation;
import sqlancer.doris.ast.DorisInOperation;
import sqlancer.doris.ast.DorisJoin;
import sqlancer.doris.ast.DorisLikeOperation;
import sqlancer.doris.ast.DorisOrderByTerm;
import sqlancer.doris.ast.DorisPostfixText;
import sqlancer.doris.ast.DorisSelect;
import sqlancer.doris.ast.DorisTableReference;
import sqlancer.doris.ast.DorisUnaryPostfixOperation;
import sqlancer.doris.ast.DorisUnaryPrefixOperation;
import sqlancer.doris.DorisSchema;
import sqlancer.doris.visitor.DorisExpectedValueVisitor;
import sqlancer.h2.H2ExpressionGenerator;
import sqlancer.presto.PrestoGlobalState;

public class DorisExpectedValueVisitor_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createNullConstant();
        DorisUnaryPrefixOperation.DorisUnaryPrefixOperator dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0 = DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_PLUS;
        DorisUnaryPrefixOperation dorisUnaryPrefixOperation0 = new DorisUnaryPrefixOperation(dorisConstant0,
                dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        dorisExpectedValueVisitor0.visit(dorisUnaryPrefixOperation0);
        assertEquals(DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_PLUS, dorisUnaryPrefixOperation0.getOp());
    }

    @Test
    public void test01() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = DorisSchema.DorisDataType.VARCHAR;
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = new DorisSchema.DorisCompositeDataType(
                dorisSchema_DorisDataType0, 1793702779);
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn((String) null,
                dorisSchema_DorisCompositeDataType0, false, false);
        List<DorisSchema.DorisColumn> list0 = List.of(dorisSchema_DorisColumn0, dorisSchema_DorisColumn0,
                dorisSchema_DorisColumn0);
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("\n", list0, true);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        dorisExpectedValueVisitor0.visit(dorisTableReference0);
        assertEquals("\n -- null\n", dorisExpectedValueVisitor0.get());
    }

    @Test
    public void test02() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisConstant.DorisTextConstant dorisConstant_DorisTextConstant0 = new DorisConstant.DorisTextConstant("L");
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant();
        DorisConstant dorisConstant0 = dorisConstant_DorisTextConstant0
                .valueLessThan(dorisConstant_DorisDatetimeConstant0);
        dorisSelect0.setWhereClause(dorisConstant0);
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        dorisExpectedValueVisitor0.visit(dorisSelect0);
        assertFalse(dorisSelect0.isDistinct());
    }

    @Test
    public void test03() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createDateConstant((-1L));
        DorisPostfixText dorisPostfixText0 = new DorisPostfixText(dorisConstant0, " -- ");
        dorisExpectedValueVisitor0.visit(dorisPostfixText0);
        assertEquals(" -- ", dorisPostfixText0.getText());
    }

    @Test
    public void test04() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        LinkedList<DorisSchema.DorisColumn> linkedList0 = new LinkedList<DorisSchema.DorisColumn>();
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable((String) null, linkedList0, false);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisBinaryComparisonOperation.DorisBinaryComparisonOperator dorisBinaryComparisonOperation_DorisBinaryComparisonOperator0 = DorisBinaryComparisonOperation.DorisBinaryComparisonOperator.LESS;
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant();
        DorisConstant dorisConstant0 = dorisBinaryComparisonOperation_DorisBinaryComparisonOperator0
                .apply(dorisConstant_DorisDatetimeConstant0, dorisConstant_DorisDatetimeConstant0);
        DorisJoin dorisJoin0 = DorisJoin.createStraightJoin(dorisTableReference0, dorisTableReference0, dorisConstant0);
        dorisExpectedValueVisitor0.visit(dorisJoin0);
        assertEquals(DorisJoin.JoinType.STRAIGHT, dorisJoin0.getJoinType());
    }

    @Test
    public void test05() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisTextConstant dorisConstant_DorisTextConstant0 = new DorisConstant.DorisTextConstant(
                "sqlancer.databend.DatabendOptions");
        DorisConstant.DorisFloatConstant dorisConstant_DorisFloatConstant0 = new DorisConstant.DorisFloatConstant(638L);
        DorisConstant dorisConstant0 = dorisConstant_DorisTextConstant0.valueEquals(dorisConstant_DorisFloatConstant0);
        LinkedList<DorisExpression> linkedList0 = new LinkedList<DorisExpression>();
        DorisInOperation dorisInOperation0 = new DorisInOperation(dorisConstant0, linkedList0, false);
        dorisExpectedValueVisitor0.visit(dorisInOperation0);
        assertEquals(DorisSchema.DorisDataType.BOOLEAN, dorisInOperation0.getExpectedType());
    }

    @Test
    public void test06() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSelect dorisSelect0 = new DorisSelect();
        List<DorisExpression> list0 = dorisSelect0.getOrderByClauses();
        PrestoGlobalState prestoGlobalState0 = new PrestoGlobalState();
        DorisFunction<PrestoGlobalState> dorisFunction0 = new DorisFunction<PrestoGlobalState>(list0,
                prestoGlobalState0);
        dorisExpectedValueVisitor0.visit(dorisFunction0);
    }

    @Test
    public void test07() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisNullConstant dorisConstant_DorisNullConstant0 = new DorisConstant.DorisNullConstant();
        dorisExpectedValueVisitor0.visit((DorisConstant) dorisConstant_DorisNullConstant0);
        assertFalse(dorisConstant_DorisNullConstant0.isDatetime());
    }

    @Test
    public void test08() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = DorisSchema.DorisDataType.VARCHAR;
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = new DorisSchema.DorisCompositeDataType(
                dorisSchema_DorisDataType0, (-173));
        DorisSchema.DorisColumnAggrType dorisSchema_DorisColumnAggrType0 = DorisSchema.DorisColumnAggrType.SUM;
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("VXC 2V^hH1",
                dorisSchema_DorisCompositeDataType0, false, false, dorisSchema_DorisColumnAggrType0, false, "");
        DorisColumnReference dorisColumnReference0 = new DorisColumnReference(dorisSchema_DorisColumn0);
        dorisExpectedValueVisitor0.visit(dorisColumnReference0);
        assertEquals("VXC 2V^hH1 -- null\n", dorisExpectedValueVisitor0.get());
    }

    @Test
    public void test09() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisLikeOperation.DorisLikeOperator dorisLikeOperation_DorisLikeOperator0 = DorisLikeOperation.DorisLikeOperator.NOT_LIKE;
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant();
        DorisConstant dorisConstant0 = dorisLikeOperation_DorisLikeOperator0.apply(dorisConstant_DorisDatetimeConstant0,
                dorisConstant_DorisDatetimeConstant0);
        DorisAlias dorisAlias0 = new DorisAlias(dorisConstant0, (String) null);
        dorisExpectedValueVisitor0.visit(dorisAlias0);
        assertNull(dorisAlias0.getAlias());
    }

    @Test
    public void test10() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisConstant.DorisDateConstant dorisConstant_DorisDateConstant0 = new DorisConstant.DorisDateConstant(511L);
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = DorisSchema.DorisDataType.BOOLEAN;
        DorisConstant dorisConstant0 = dorisConstant_DorisDateConstant0.cast(dorisSchema_DorisDataType0);
        dorisSelect0.setWhereClause(dorisConstant0);
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisSelect0);
        assertFalse(dorisSelect0.isDistinct());
    }

    @Test
    public void test11() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant(
                0L);
        DorisBetweenOperation dorisBetweenOperation0 = new DorisBetweenOperation(dorisConstant_DorisDatetimeConstant0,
                dorisConstant_DorisDatetimeConstant0, dorisConstant_DorisDatetimeConstant0, false);
        DorisUnaryPrefixOperation.DorisUnaryPrefixOperator dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0 = DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.NOT;
        DorisUnaryPrefixOperation dorisUnaryPrefixOperation0 = new DorisUnaryPrefixOperation(
                dorisConstant_DorisDatetimeConstant0, dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        DorisBinaryOperation dorisBinaryOperation0 = new DorisBinaryOperation(dorisUnaryPrefixOperation0,
                dorisBetweenOperation0, dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        dorisExpectedValueVisitor0.visit(dorisBinaryOperation0);
    }

    @Test
    public void test12() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        List<DorisExpression> list0 = dorisSelect0.getOrderByClauses();
        DorisAggregateOperation.DorisAggregateFunction dorisAggregateOperation_DorisAggregateFunction0 = DorisAggregateOperation.DorisAggregateFunction.STDDEV_POP;
        DorisAggregateOperation dorisAggregateOperation0 = new DorisAggregateOperation(list0,
                dorisAggregateOperation_DorisAggregateFunction0);
        String string0 = DorisExpectedValueVisitor.asExpectedValues(dorisAggregateOperation0);
        assertNotNull(string0);
    }

    @Test
    public void test13() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createDateConstant(3726L);
        H2ExpressionGenerator.H2BinaryArithmeticOperator h2ExpressionGenerator_H2BinaryArithmeticOperator0 = H2ExpressionGenerator.H2BinaryArithmeticOperator.DIV;
        DorisBinaryOperation dorisBinaryOperation0 = new DorisBinaryOperation(dorisConstant0, dorisConstant0,
                h2ExpressionGenerator_H2BinaryArithmeticOperator0);
        DorisBinaryOperation dorisBinaryOperation1 = new DorisBinaryOperation(dorisConstant0, dorisBinaryOperation0,
                h2ExpressionGenerator_H2BinaryArithmeticOperator0);
        dorisExpectedValueVisitor0.visit(dorisBinaryOperation1);
        assertNotSame(dorisBinaryOperation0, dorisBinaryOperation1);
    }

    @Test
    public void test14() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createBooleanConstant(true);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisConstant0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisUnaryPostfixOperation0);
        assertEquals(DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL,
                dorisUnaryPostfixOperation0.getOp());
    }

    @Test
    public void test15() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("Bl,R",
                dorisSchema_DorisCompositeDataType0, true, false);
        DorisColumnReference dorisColumnReference0 = new DorisColumnReference(dorisSchema_DorisColumn0);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisColumnReference0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        dorisExpectedValueVisitor0.visit(dorisUnaryPostfixOperation0);
        assertEquals("((Bl,R) IS NOT NULL) -- null\nBl,R -- null\n", dorisExpectedValueVisitor0.get());
    }

    @Test
    public void test16() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant(
                0L);
        DorisBetweenOperation dorisBetweenOperation0 = new DorisBetweenOperation(dorisConstant_DorisDatetimeConstant0,
                dorisConstant_DorisDatetimeConstant0, dorisConstant_DorisDatetimeConstant0, false);
        dorisExpectedValueVisitor0.visit(dorisBetweenOperation0);
        assertEquals(DorisSchema.DorisDataType.BOOLEAN, dorisBetweenOperation0.getExpectedType());
    }

    @Test
    public void test17() throws Throwable {
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant();
        DorisAlias dorisAlias0 = new DorisAlias(dorisConstant_DorisDatetimeConstant0, "CURRENT_TIMESTAMP");
        String string0 = DorisExpectedValueVisitor.asExpectedValues(dorisAlias0);
        assertNotNull(string0);
    }

    @Test
    public void test18() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        LinkedList<DorisSchema.DorisColumn> linkedList0 = new LinkedList<DorisSchema.DorisColumn>();
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("Nf*Z=rta!w>rj$PEJ+B", linkedList0,
                true);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = DorisSchema.DorisDataType.DATE;
        DorisCastOperation dorisCastOperation0 = new DorisCastOperation(dorisTableReference0,
                dorisSchema_DorisDataType0);
        DorisJoin dorisJoin0 = DorisJoin.createRightOuterJoin(dorisTableReference0, dorisTableReference0,
                dorisCastOperation0);
        NewOrderingTerm.Ordering newOrderingTerm_Ordering0 = NewOrderingTerm.Ordering.ASC;
        DorisOrderByTerm dorisOrderByTerm0 = new DorisOrderByTerm(dorisJoin0, newOrderingTerm_Ordering0);
        dorisExpectedValueVisitor0.visit(dorisOrderByTerm0);
        dorisExpectedValueVisitor0.get();
        assertEquals(
                " Nf*Z=rta!w>rj$PEJ+B RIGHT JOIN Nf*Z=rta!w>rj$PEJ+B ON CAST(Nf*Z=rta!w>rj$PEJ+B AS DATE)  ASC -- null\nCAST(Nf*Z=rta!w>rj$PEJ+B AS DATE)  -- null\n",
                dorisExpectedValueVisitor0.get());
    }

    @Test
    public void test19() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisUnaryPrefixOperation.DorisUnaryPrefixOperator dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0 = DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_MINUS;
        DorisUnaryPrefixOperation dorisUnaryPrefixOperation0 = new DorisUnaryPrefixOperation(dorisSelect0,
                dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisUnaryPrefixOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test20() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createFloatConstant((-1193.0));
        DorisLikeOperation.DorisLikeOperator dorisLikeOperation_DorisLikeOperator0 = DorisLikeOperation.DorisLikeOperator.LIKE_OPERATOR;
        DorisLikeOperation dorisLikeOperation0 = new DorisLikeOperation(dorisConstant0, dorisConstant0,
                dorisLikeOperation_DorisLikeOperator0);
        DorisUnaryPrefixOperation.DorisUnaryPrefixOperator dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0 = DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_PLUS;
        DorisUnaryPrefixOperation dorisUnaryPrefixOperation0 = new DorisUnaryPrefixOperation(dorisLikeOperation0,
                dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisUnaryPrefixOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisLikeOperation@3
            //
        }
    }

    @Test
    public void test21() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisSelect0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisUnaryPostfixOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test22() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("8",
                dorisSchema_DorisCompositeDataType0, true, false);
        DorisConstant dorisConstant0 = DorisConstant.createDatetimeConstant();
        DorisColumnValue dorisColumnValue0 = new DorisColumnValue(dorisSchema_DorisColumn0, dorisConstant0);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisColumnValue0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisUnaryPostfixOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisColumnValue@bd5c08cc
            //
        }
    }

    @Test
    public void test23() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisPostfixText dorisPostfixText0 = new DorisPostfixText(dorisSelect0,
                "sqlancer.sqlite3.schema.SQLite3Schema");
        dorisSelect0.setWhereClause(dorisPostfixText0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test24() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisPostfixText dorisPostfixText0 = new DorisPostfixText(dorisSelect0, "v");
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisPostfixText0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test25() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisFunctionOperation.DorisFunction dorisFunctionOperation_DorisFunction0 = DorisFunctionOperation.DorisFunction.PMOD;
        DorisFunctionOperation dorisFunctionOperation0 = new DorisFunctionOperation(
                dorisFunctionOperation_DorisFunction0, (List<DorisExpression>) null);
        DorisPostfixText dorisPostfixText0 = new DorisPostfixText(dorisFunctionOperation0, "G~pm");
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisPostfixText0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisFunctionOperation@2
            //
        }
    }

    @Test
    public void test26() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        NewOrderingTerm.Ordering newOrderingTerm_Ordering0 = NewOrderingTerm.Ordering.ASC;
        DorisOrderByTerm dorisOrderByTerm0 = new DorisOrderByTerm(dorisSelect0, newOrderingTerm_Ordering0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisOrderByTerm0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test27() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSelect dorisSelect0 = new DorisSelect();
        List<DorisExpression> list0 = dorisSelect0.getJoinList();
        DorisPostfixText dorisPostfixText0 = new DorisPostfixText(dorisSelect0, (String) null);
        DorisFunction<DorisPostfixText> dorisFunction0 = new DorisFunction<DorisPostfixText>(list0, dorisPostfixText0);
        DorisConstant.DorisNullConstant dorisConstant_DorisNullConstant0 = new DorisConstant.DorisNullConstant();
        DorisBinaryLogicalOperation.DorisBinaryLogicalOperator dorisBinaryLogicalOperation_DorisBinaryLogicalOperator0 = DorisBinaryLogicalOperation.DorisBinaryLogicalOperator.AND;
        DorisBinaryLogicalOperation dorisBinaryLogicalOperation0 = new DorisBinaryLogicalOperation(dorisFunction0,
                dorisConstant_DorisNullConstant0, dorisBinaryLogicalOperation_DorisBinaryLogicalOperator0);
        NewOrderingTerm.Ordering newOrderingTerm_Ordering0 = NewOrderingTerm.Ordering.DESC;
        DorisOrderByTerm dorisOrderByTerm0 = new DorisOrderByTerm(dorisBinaryLogicalOperation0,
                newOrderingTerm_Ordering0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisOrderByTerm0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisBinaryLogicalOperation@6
            //
        }
    }

    @Test
    public void test28() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisJoin.JoinType dorisJoin_JoinType0 = DorisJoin.JoinType.RIGHT;
        DorisJoin dorisJoin0 = new DorisJoin((DorisTableReference) null, (DorisTableReference) null,
                dorisJoin_JoinType0, dorisSelect0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisJoin0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test29() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        LinkedList<DorisExpression> linkedList0 = new LinkedList<DorisExpression>();
        DorisInOperation dorisInOperation0 = new DorisInOperation(dorisSelect0, linkedList0, false);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisInOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test30() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumnAggrType dorisSchema_DorisColumnAggrType0 = DorisSchema.DorisColumnAggrType.BITMAP_UNION;
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn(" -- ",
                dorisSchema_DorisCompositeDataType0, false, false, dorisSchema_DorisColumnAggrType0, true, " -- ");
        DorisColumnValue dorisColumnValue0 = new DorisColumnValue(dorisSchema_DorisColumn0, (DorisConstant) null);
        DorisUnaryPrefixOperation.DorisUnaryPrefixOperator dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0 = DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_PLUS;
        DorisUnaryPrefixOperation dorisUnaryPrefixOperation0 = new DorisUnaryPrefixOperation(dorisColumnValue0,
                dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        DorisBinaryArithmeticOperation dorisBinaryArithmeticOperation0 = new DorisBinaryArithmeticOperation(
                dorisColumnValue0, dorisUnaryPrefixOperation0, dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        DorisSelect dorisSelect0 = new DorisSelect();
        List<DorisExpression> list0 = dorisSelect0.getGroupByExpressions();
        DorisInOperation dorisInOperation0 = new DorisInOperation(dorisBinaryArithmeticOperation0, list0, false);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisInOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisBinaryArithmeticOperation@6
            //
        }
    }

    @Test
    public void test31() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisBinaryOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisExpectedValueVisitor", e);
        }
    }

    @Test
    public void test32() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisBinaryLogicalOperation.DorisBinaryLogicalOperator dorisBinaryLogicalOperation_DorisBinaryLogicalOperator0 = DorisBinaryLogicalOperation.DorisBinaryLogicalOperator
                .getRandom();
        NewOrderingTerm.Ordering newOrderingTerm_Ordering0 = NewOrderingTerm.Ordering.DESC;
        DorisOrderByTerm dorisOrderByTerm0 = new DorisOrderByTerm(dorisSelect0, newOrderingTerm_Ordering0);
        DorisBinaryOperation dorisBinaryOperation0 = new DorisBinaryOperation(dorisOrderByTerm0, dorisSelect0,
                dorisBinaryLogicalOperation_DorisBinaryLogicalOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisBinaryOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test33() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisBetweenOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test34() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisBetweenOperation dorisBetweenOperation0 = new DorisBetweenOperation(dorisSelect0, dorisSelect0,
                dorisSelect0, true);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisBetweenOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test35() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisAlias dorisAlias0 = new DorisAlias(dorisSelect0, "\n");
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisAlias0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test36() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createDatetimeConstant();
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisCastOperation dorisCastOperation0 = new DorisCastOperation(dorisConstant0,
                dorisSchema_DorisCompositeDataType0);
        DorisAlias dorisAlias0 = new DorisAlias(dorisCastOperation0, (String) null);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisAlias0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisCastOperation@4
            //
        }
    }

    @Test
    public void test37() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSelect dorisSelect0 = new DorisSelect();
        NewOrderingTerm.Ordering newOrderingTerm_Ordering0 = NewOrderingTerm.Ordering.DESC;
        DorisOrderByTerm dorisOrderByTerm0 = new DorisOrderByTerm(dorisSelect0, newOrderingTerm_Ordering0);
        List<DorisExpression> list0 = List.of((DorisExpression) dorisOrderByTerm0, (DorisExpression) dorisOrderByTerm0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(list0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test38() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = DorisSchema.DorisDataType.DATETIME;
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = new DorisSchema.DorisCompositeDataType(
                dorisSchema_DorisDataType0, 3933);
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn((String) null,
                dorisSchema_DorisCompositeDataType0, false, false);
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant(
                3395L);
        DorisColumnValue dorisColumnValue0 = DorisColumnValue.create(dorisSchema_DorisColumn0,
                dorisConstant_DorisDatetimeConstant0);
        List<DorisExpression> list0 = List.of((DorisExpression) dorisColumnValue0, (DorisExpression) dorisColumnValue0,
                (DorisExpression) dorisColumnValue0, (DorisExpression) dorisColumnValue0,
                (DorisExpression) dorisConstant_DorisDatetimeConstant0, (DorisExpression) dorisColumnValue0,
                (DorisExpression) dorisColumnValue0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(list0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisColumnValue@33f3e55d
            //
        }
    }

    @Test
    public void test39() throws Throwable {
        // Undeclared exception!
        try {
            DorisExpectedValueVisitor.asExpectedValues((DorisExpression) null);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test40() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        List<DorisExpression> list0 = dorisSelect0.getOrderByClauses();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        dorisExpectedValueVisitor0.visit(list0);
        assertTrue(list0.isEmpty());
    }

    @Test
    public void test41() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisJoin dorisJoin0 = DorisJoin.createLeftOuterJoin((DorisTableReference) null, (DorisTableReference) null,
                (DorisExpression) null);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisJoin0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test42() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisFloatConstant dorisConstant_DorisFloatConstant0 = new DorisConstant.DorisFloatConstant(
                (-1082.929290471));
        DorisBinaryLogicalOperation.DorisBinaryLogicalOperator dorisBinaryLogicalOperation_DorisBinaryLogicalOperator0 = DorisBinaryLogicalOperation.DorisBinaryLogicalOperator.AND;
        DorisBinaryLogicalOperation dorisBinaryLogicalOperation0 = new DorisBinaryLogicalOperation(
                dorisConstant_DorisFloatConstant0, dorisConstant_DorisFloatConstant0,
                dorisBinaryLogicalOperation_DorisBinaryLogicalOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisBinaryLogicalOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisBinaryLogicalOperation@3
            //
        }
    }

    @Test
    public void test43() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisFloatConstant dorisConstant_DorisFloatConstant0 = new DorisConstant.DorisFloatConstant(
                (-1082.929290471));
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisConstant_DorisFloatConstant0);
        assertEquals((-1082.929290471), dorisConstant_DorisFloatConstant0.asFloat(), 0.01);
    }

    @Test
    public void test44() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisIntConstant dorisConstant_DorisIntConstant0 = new DorisConstant.DorisIntConstant((-1275L));
        DorisPostfixText dorisPostfixText0 = new DorisPostfixText(dorisConstant_DorisIntConstant0, "");
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisPostfixText0);
        assertEquals("", dorisPostfixText0.getText());
    }

    @Test
    public void test45() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createIntConstant(5L);
        NewOrderingTerm.Ordering newOrderingTerm_Ordering0 = NewOrderingTerm.Ordering.ASC;
        DorisOrderByTerm dorisOrderByTerm0 = new DorisOrderByTerm(dorisConstant0, newOrderingTerm_Ordering0);
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisOrderByTerm0);
        assertEquals(NewOrderingTerm.Ordering.ASC, dorisOrderByTerm0.getOrdering());
    }

    @Test
    public void test46() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisBetweenOperation dorisBetweenOperation0 = new DorisBetweenOperation(dorisSelect0, dorisSelect0,
                dorisSelect0, true);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisBetweenOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test47() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisAggregateOperation.DorisAggregateFunction dorisAggregateOperation_DorisAggregateFunction0 = DorisAggregateOperation.DorisAggregateFunction.GROUPING;
        DorisAggregateOperation dorisAggregateOperation0 = new DorisAggregateOperation((List<DorisExpression>) null,
                dorisAggregateOperation_DorisAggregateFunction0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisAggregateOperation0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.newast.NewToStringVisitor", e);
        }
    }

    @Test
    public void test48() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSchema.DorisColumn[] dorisSchema_DorisColumnArray0 = new DorisSchema.DorisColumn[1];
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("/",
                dorisSchema_DorisCompositeDataType0, true, true);
        dorisSchema_DorisColumnArray0[0] = dorisSchema_DorisColumn0;
        List<DorisSchema.DorisColumn> list0 = List.of(dorisSchema_DorisColumnArray0);
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("-[P|'! ", list0, true);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisTableReference0);
        assertEquals("-[P|'!  -- null\n", dorisExpectedValueVisitor0.get());
    }

    @Test
    public void test49() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        H2ExpressionGenerator.H2BinaryComparisonOperator h2ExpressionGenerator_H2BinaryComparisonOperator0 = H2ExpressionGenerator.H2BinaryComparisonOperator.NOT_EQUALS;
        DorisBinaryOperation dorisBinaryOperation0 = new DorisBinaryOperation(dorisSelect0, dorisSelect0,
                h2ExpressionGenerator_H2BinaryComparisonOperator0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisBinaryOperation0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test50() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant(
                1L);
        DorisConstant dorisConstant0 = DorisConstant.createDateConstant("1970-01-01 00:00:00");
        DorisConstant dorisConstant1 = dorisConstant_DorisDatetimeConstant0.valueLessThan(dorisConstant0);
        DorisUnaryPrefixOperation.DorisUnaryPrefixOperator dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0 = DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_PLUS;
        DorisUnaryPrefixOperation dorisUnaryPrefixOperation0 = new DorisUnaryPrefixOperation(dorisConstant1,
                dorisUnaryPrefixOperation_DorisUnaryPrefixOperator0);
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisUnaryPrefixOperation0);
        assertEquals(DorisUnaryPrefixOperation.DorisUnaryPrefixOperator.UNARY_PLUS, dorisUnaryPrefixOperation0.getOp());
    }

    @Test
    public void test51() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisColumnReference dorisColumnReference0 = new DorisColumnReference((DorisSchema.DorisColumn) null);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisColumnReference0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.newast.NewToStringVisitor", e);
        }
    }

    @Test
    public void test52() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) null);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test53() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisUnaryPostfixOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test54() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisAlias) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test55() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisInOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test56() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisFunction<?>) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test57() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisConstant) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test58() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisPostfixText) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test59() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisUnaryPrefixOperation) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test60() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisOrderByTerm) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test61() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisTableReference) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test62() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisJoin) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisExpectedValueVisitor", e);
        }
    }

    @Test
    public void test63() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisSelect dorisSelect0 = new DorisSelect();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisSelect0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test64() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        List<DorisExpression> list0 = List.of((DorisExpression) dorisSelect0, (DorisExpression) dorisSelect0,
                (DorisExpression) dorisSelect0, (DorisExpression) dorisSelect0, (DorisExpression) dorisSelect0,
                (DorisExpression) dorisSelect0, (DorisExpression) dorisSelect0, (DorisExpression) dorisSelect0);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(list0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test65() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant.DorisDatetimeConstant dorisConstant_DorisDatetimeConstant0 = new DorisConstant.DorisDatetimeConstant(
                "ERROR");
        H2ExpressionGenerator.H2UnaryPostfixOperator h2ExpressionGenerator_H2UnaryPostfixOperator0 = H2ExpressionGenerator.H2UnaryPostfixOperator.IS_NOT_NULL;
        DorisBinaryArithmeticOperation dorisBinaryArithmeticOperation0 = new DorisBinaryArithmeticOperation(
                dorisConstant_DorisDatetimeConstant0, dorisConstant_DorisDatetimeConstant0,
                h2ExpressionGenerator_H2UnaryPostfixOperator0);
        DorisBetweenOperation dorisBetweenOperation0 = new DorisBetweenOperation(dorisBinaryArithmeticOperation0,
                dorisBinaryArithmeticOperation0, dorisConstant_DorisDatetimeConstant0, false);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisBetweenOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // sqlancer.doris.ast.DorisBinaryArithmeticOperation@3
            //
        }
    }

    @Test
    public void test66() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        H2ExpressionGenerator.H2BinaryLogicalOperator h2ExpressionGenerator_H2BinaryLogicalOperator0 = H2ExpressionGenerator.H2BinaryLogicalOperator.AND;
        DorisBinaryOperation dorisBinaryOperation0 = new DorisBinaryOperation(dorisSelect0, dorisSelect0,
                h2ExpressionGenerator_H2BinaryLogicalOperator0);
        // Undeclared exception!
        try {
            DorisExpectedValueVisitor.asExpectedValues(dorisBinaryOperation0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }

    @Test
    public void test67() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisBetweenOperation dorisBetweenOperation0 = new DorisBetweenOperation(dorisSelect0, dorisSelect0,
                dorisSelect0, false);
        // Undeclared exception!
        try {
            DorisExpectedValueVisitor.asExpectedValues(dorisBetweenOperation0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test68() throws Throwable {
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisAlias dorisAlias0 = new DorisAlias(dorisSelect0, "-JIy1!8`*.%5x*DC");
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisExpression) dorisAlias0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test69() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisConstant dorisConstant0 = DorisConstant.createStringConstant((String) null);
        DorisSelect dorisSelect0 = new DorisSelect();
        List<DorisExpression> list0 = dorisSelect0.getJoinList();
        DorisInOperation dorisInOperation0 = new DorisInOperation(dorisConstant0, list0, true);
        dorisExpectedValueVisitor0.visit((DorisExpression) dorisInOperation0);
        assertEquals(DorisSchema.DorisDataType.BOOLEAN, dorisInOperation0.getExpectedType());
    }

    @Test
    public void test70() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        DorisBinaryOperation dorisBinaryOperation0 = new DorisBinaryOperation((DorisExpression) null,
                (DorisExpression) null, (BinaryOperatorNode.Operator) null);
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit(dorisBinaryOperation0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // no message in exception (getMessage() returned null)
            //
        }
    }

    @Test
    public void test71() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        String string0 = dorisExpectedValueVisitor0.get();
        assertEquals("", string0);
    }

    @Test
    public void test72() throws Throwable {
        DorisExpectedValueVisitor dorisExpectedValueVisitor0 = new DorisExpectedValueVisitor();
        // Undeclared exception!
        try {
            dorisExpectedValueVisitor0.visit((DorisColumnReference) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.visitor.DorisToStringVisitor", e);
        }
    }
}
