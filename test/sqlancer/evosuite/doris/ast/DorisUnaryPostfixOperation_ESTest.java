/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 21:53:27 GMT 2025
 */

package sqlancer.evosuite.doris.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.doris.ast.DorisBinaryArithmeticOperation;
import sqlancer.doris.ast.DorisCastOperation;
import sqlancer.doris.ast.DorisColumnValue;
import sqlancer.doris.ast.DorisConstant;
import sqlancer.doris.ast.DorisExpression;
import sqlancer.doris.ast.DorisSelect;
import sqlancer.doris.ast.DorisUnaryPostfixOperation;
import sqlancer.doris.DorisSchema;

public class DorisUnaryPostfixOperation_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test00() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator
                .getRandom();
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation((DorisExpression) null,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        String string0 = dorisUnaryPostfixOperation0.getOperatorRepresentation();
        assertEquals("IS NULL", string0);
    }

    @Test
    public void test01() throws Throwable {
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation((DorisExpression) null,
                (DorisUnaryPostfixOperation.DorisUnaryPostfixOperator) null);
        dorisUnaryPostfixOperation0.getOp();
    }

    @Test
    public void test02() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator
                .getRandom();
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation((DorisExpression) null,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisExpression dorisExpression0 = dorisUnaryPostfixOperation0.getExpression();
        assertNull(dorisExpression0);
    }

    @Test
    public void test03() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation((DorisExpression) null,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        // Undeclared exception!
        try {
            dorisUnaryPostfixOperation0.getExpectedValue();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.ast.DorisUnaryPostfixOperation", e);
        }
    }

    @Test
    public void test04() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator
                .getRandom();
        DorisConstant dorisConstant0 = DorisConstant.createDatetimeConstant();
        DorisColumnValue dorisColumnValue0 = DorisColumnValue.create((DorisSchema.DorisColumn) null, dorisConstant0);
        DorisBinaryArithmeticOperation dorisBinaryArithmeticOperation0 = new DorisBinaryArithmeticOperation(
                dorisColumnValue0, dorisColumnValue0, dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(
                dorisBinaryArithmeticOperation0, dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        // Undeclared exception!
        try {
            dorisUnaryPostfixOperation0.getExpectedValue();
            fail("Expecting exception: ClassCastException");

        } catch (ClassCastException e) {
            //
            // class sqlancer.doris.ast.DorisUnaryPostfixOperation$DorisUnaryPostfixOperator$1 cannot be cast to class
            // sqlancer.doris.ast.DorisBinaryArithmeticOperation$DorisBinaryArithmeticOperator
            // (sqlancer.doris.ast.DorisUnaryPostfixOperation$DorisUnaryPostfixOperator$1 and
            // sqlancer.doris.ast.DorisBinaryArithmeticOperation$DorisBinaryArithmeticOperator are in unnamed module of
            // loader org.evosuite.instrumentation.InstrumentingClassLoader @ebc5c1e)
            //
            verifyException("sqlancer.doris.ast.DorisBinaryArithmeticOperation", e);
        }
    }

    @Test
    public void test05() throws Throwable {
        DorisConstant.DorisFloatConstant dorisConstant_DorisFloatConstant0 = new DorisConstant.DorisFloatConstant(
                (-1.0));
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = DorisSchema.DorisDataType.INT;
        DorisConstant dorisConstant0 = dorisConstant_DorisFloatConstant0.cast(dorisSchema_DorisDataType0);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisConstant0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisConstant.DorisIntConstant dorisConstant_DorisIntConstant0 = (DorisConstant.DorisIntConstant) dorisUnaryPostfixOperation0
                .getExpression();
        assertEquals((-1L), dorisConstant_DorisIntConstant0.getValue());
    }

    @Test
    public void test06() throws Throwable {
        DorisConstant dorisConstant0 = DorisConstant.createNullConstant();
        DorisColumnValue dorisColumnValue0 = new DorisColumnValue((DorisSchema.DorisColumn) null, dorisConstant0);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisColumnValue0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator1 = dorisUnaryPostfixOperation0
                .getOp();
        assertSame(dorisUnaryPostfixOperation_DorisUnaryPostfixOperator1,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
    }

    @Test
    public void test07() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisConstant dorisConstant0 = DorisConstant.createDatetimeConstant();
        DorisConstant dorisConstant1 = dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0.apply(dorisConstant0);
        assertTrue(dorisConstant1.asBoolean());
    }

    @Test
    public void test08() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator
                .getRandom();
        DorisSelect dorisSelect0 = new DorisSelect();
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisSelect0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisConstant dorisConstant0 = dorisUnaryPostfixOperation0.getExpectedValue();
        assertNull(dorisConstant0);
    }

    @Test
    public void test09() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator
                .getRandom();
        DorisConstant.DorisBooleanConstant dorisConstant_DorisBooleanConstant0 = new DorisConstant.DorisBooleanConstant(
                false);
        DorisConstant dorisConstant0 = dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0
                .apply(dorisConstant_DorisBooleanConstant0);
        assertTrue(dorisConstant0.isBoolean());
    }

    @Test
    public void test10() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NULL;
        DorisSchema.DorisDataType[] dorisSchema_DorisDataTypeArray0 = dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0
                .getInputDataTypes();
        assertEquals(8, dorisSchema_DorisDataTypeArray0.length);
    }

    @Test
    public void test11() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        String string0 = dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0.getTextRepresentation();
        assertEquals("IS NOT NULL", string0);
    }

    @Test
    public void test12() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisSchema.DorisDataType[] dorisSchema_DorisDataTypeArray0 = dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0
                .getInputDataTypes();
        assertEquals(8, dorisSchema_DorisDataTypeArray0.length);
    }

    @Test
    public void test13() throws Throwable {
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator
                .getRandom();
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("MPND$5 Nz8GglW",
                dorisSchema_DorisCompositeDataType0, false, false);
        DorisConstant dorisConstant0 = DorisConstant.createStringConstant("");
        DorisColumnValue dorisColumnValue0 = new DorisColumnValue(dorisSchema_DorisColumn0, dorisConstant0);
        DorisCastOperation dorisCastOperation0 = new DorisCastOperation(dorisColumnValue0,
                dorisSchema_DorisCompositeDataType0);
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisCastOperation0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisSchema.DorisDataType dorisSchema_DorisDataType0 = dorisUnaryPostfixOperation0.getExpectedType();
        assertEquals(0, dorisSchema_DorisDataType0.getDecimalScale());
    }

    @Test
    public void test14() throws Throwable {
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation((DorisExpression) null,
                (DorisUnaryPostfixOperation.DorisUnaryPostfixOperator) null);
        // Undeclared exception!
        try {
            dorisUnaryPostfixOperation0.getOperatorRepresentation();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.doris.ast.DorisUnaryPostfixOperation", e);
        }
    }

    @Test
    public void test15() throws Throwable {
        DorisConstant.DorisNullConstant dorisConstant_DorisNullConstant0 = new DorisConstant.DorisNullConstant();
        DorisColumnValue dorisColumnValue0 = DorisColumnValue.create((DorisSchema.DorisColumn) null,
                dorisConstant_DorisNullConstant0);
        DorisUnaryPostfixOperation.DorisUnaryPostfixOperator dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0 = DorisUnaryPostfixOperation.DorisUnaryPostfixOperator.IS_NOT_NULL;
        DorisUnaryPostfixOperation dorisUnaryPostfixOperation0 = new DorisUnaryPostfixOperation(dorisColumnValue0,
                dorisUnaryPostfixOperation_DorisUnaryPostfixOperator0);
        DorisConstant dorisConstant0 = dorisUnaryPostfixOperation0.getExpectedValue();
        assertNotNull(dorisConstant0);
        assertFalse(dorisConstant0.asBoolean());
    }
}
