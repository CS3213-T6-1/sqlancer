/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 03:11:54 GMT 2025
 */

package sqlancer.evosuite.doris.ast;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.doris.ast.DorisConstant;
import sqlancer.doris.ast.DorisExpression;
import sqlancer.doris.ast.DorisJoin;
import sqlancer.doris.ast.DorisTableReference;
import sqlancer.doris.DorisProvider;
import sqlancer.doris.DorisSchema;

public class DorisJoin_ESTest {

    @Test
    public void test00() throws Throwable {
        LinkedList<DorisSchema.DorisColumn> linkedList0 = new LinkedList<DorisSchema.DorisColumn>();
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("~q+m;7r('", linkedList0, true);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisJoin dorisJoin0 = DorisJoin.createLeftOuterJoin((DorisTableReference) null, dorisTableReference0,
                (DorisExpression) null);
        assertEquals(DorisJoin.JoinType.LEFT, dorisJoin0.getJoinType());
    }

    @Test
    public void test01() throws Throwable {
        DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
        DorisTableReference dorisTableReference1 = new DorisTableReference((DorisSchema.DorisTable) null);
        DorisJoin dorisJoin0 = DorisJoin.createStraightJoin(dorisTableReference0, dorisTableReference1,
                dorisTableReference1);
        assertEquals(DorisJoin.JoinType.STRAIGHT, dorisJoin0.getJoinType());
    }

    @Test
    public void test02() throws Throwable {
        LinkedList<DorisSchema.DorisColumn> linkedList0 = new LinkedList<DorisSchema.DorisColumn>();
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable(",\"VEB+u<E!\"g/3eR{", linkedList0,
                true);
        DorisConstant dorisConstant0 = DorisConstant.createDatetimeConstant(",\"VEB+u<E!\"g/3eR{");
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisTableReference dorisTableReference1 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisJoin dorisJoin0 = DorisJoin.createInnerJoin(dorisTableReference0, dorisTableReference1, dorisConstant0);
        assertEquals(DorisJoin.JoinType.INNER, dorisJoin0.getJoinType());
    }

    // @Test
    // public void test03() throws Throwable {
    // DorisProvider.DorisGlobalState dorisProvider_DorisGlobalState0 = new DorisProvider.DorisGlobalState();
    // DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
    // DorisTableReference dorisTableReference1 = new DorisTableReference((DorisSchema.DorisTable) null);
    // List<DorisTableReference> list0 = List.of(dorisTableReference0, dorisTableReference1, dorisTableReference1,
    // dorisTableReference0, dorisTableReference1, dorisTableReference0);
    // LinkedList<DorisTableReference> linkedList0 = new LinkedList<DorisTableReference>(list0);
    // // Undeclared exception!
    // try {
    // DorisJoin.getJoins(linkedList0, dorisProvider_DorisGlobalState0);
    // fail("Expecting exception: NullPointerException");
    //
    // } catch (NullPointerException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("sqlancer.doris.ast.DorisJoin", e);
    // }
    // }

    @Test
    public void test04() throws Throwable {
        DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
        DorisTableReference dorisTableReference1 = new DorisTableReference((DorisSchema.DorisTable) null);
        DorisJoin dorisJoin0 = DorisJoin.createRightOuterJoin(dorisTableReference0, dorisTableReference1,
                dorisTableReference0);
        assertEquals(DorisJoin.JoinType.RIGHT, dorisJoin0.getJoinType());
    }

    @Test
    public void test05() throws Throwable {
        DorisJoin dorisJoin0 = DorisJoin.createStraightJoin((DorisTableReference) null, (DorisTableReference) null,
                (DorisExpression) null);
        DorisTableReference dorisTableReference0 = dorisJoin0.getRightTable();
        assertNull(dorisTableReference0);
    }

    @Test
    public void test06() throws Throwable {
        DorisJoin dorisJoin0 = DorisJoin.createInnerJoin((DorisTableReference) null, (DorisTableReference) null,
                (DorisExpression) null);
        DorisExpression dorisExpression0 = dorisJoin0.getOnCondition();
        assertNull(dorisExpression0);
    }

    @Test
    public void test07() throws Throwable {
        DorisSchema.DorisColumnAggrType dorisSchema_DorisColumnAggrType0 = DorisSchema.DorisColumnAggrType.MAX;
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("z|na1K;Y)",
                (DorisSchema.DorisCompositeDataType) null, false, false, dorisSchema_DorisColumnAggrType0, true,
                "z|na1K;Y)");
        List<DorisSchema.DorisColumn> list0 = List.of(dorisSchema_DorisColumn0, dorisSchema_DorisColumn0,
                dorisSchema_DorisColumn0, dorisSchema_DorisColumn0, dorisSchema_DorisColumn0);
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("z|na1K;Y)", list0, false);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisJoin.JoinType dorisJoin_JoinType0 = DorisJoin.JoinType.STRAIGHT;
        DorisJoin dorisJoin0 = new DorisJoin(dorisTableReference0, dorisTableReference0, dorisJoin_JoinType0,
                dorisTableReference0);
        DorisTableReference dorisTableReference1 = dorisJoin0.getLeftTable();
        assertSame(dorisTableReference1, dorisTableReference0);
    }

    @Test
    public void test08() throws Throwable {
        DorisProvider.DorisGlobalState dorisProvider_DorisGlobalState0 = new DorisProvider.DorisGlobalState();
        DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
        List<DorisTableReference> list0 = List.of(dorisTableReference0, dorisTableReference0);
        List<DorisJoin> list1 = DorisJoin.getJoins(list0, dorisProvider_DorisGlobalState0);
        assertEquals(0, list1.size());
    }

    @Test
    public void test09() throws Throwable {
        LinkedList<DorisTableReference> linkedList0 = new LinkedList<DorisTableReference>();
        DorisProvider.DorisGlobalState dorisProvider_DorisGlobalState0 = new DorisProvider.DorisGlobalState();
        List<DorisJoin> list0 = DorisJoin.getJoins(linkedList0, dorisProvider_DorisGlobalState0);
        assertEquals(0, list0.size());
    }

    // @Test
    // public void test10() throws Throwable {
    // DorisJoin.JoinType.getRandom();
    // DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
    // List<DorisTableReference> list0 = List.of(dorisTableReference0, dorisTableReference0, dorisTableReference0,
    // dorisTableReference0, dorisTableReference0, dorisTableReference0, dorisTableReference0,
    // dorisTableReference0, dorisTableReference0, dorisTableReference0);
    // DorisProvider.DorisGlobalState dorisProvider_DorisGlobalState0 = new DorisProvider.DorisGlobalState();
    // // Undeclared exception!
    // try {
    // DorisJoin.getJoins(list0, dorisProvider_DorisGlobalState0);
    // fail("Expecting exception: UnsupportedOperationException");
    //
    // } catch (UnsupportedOperationException e) {
    // //
    // // no message in exception (getMessage() returned null)
    // //
    // verifyException("java.util.ImmutableCollections", e);
    // }
    // }

    @Test
    public void test11() throws Throwable {
        DorisJoin.JoinType dorisJoin_JoinType0 = DorisJoin.JoinType.RIGHT;
        DorisJoin dorisJoin0 = new DorisJoin((DorisTableReference) null, (DorisTableReference) null,
                dorisJoin_JoinType0, (DorisExpression) null);
        DorisTableReference dorisTableReference0 = dorisJoin0.getLeftTable();
        assertNull(dorisTableReference0);
    }

    @Test
    public void test12() throws Throwable {
        DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
        DorisJoin dorisJoin0 = DorisJoin.createInnerJoin(dorisTableReference0, dorisTableReference0,
                dorisTableReference0);
        dorisJoin0.setOnClause((DorisExpression) null);
        assertEquals(DorisJoin.JoinType.INNER, dorisJoin0.getJoinType());
    }

    @Test
    public void test13() throws Throwable {
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumnAggrType dorisSchema_DorisColumnAggrType0 = DorisSchema.DorisColumnAggrType.SUM;
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("ENUM$VALUES",
                dorisSchema_DorisCompositeDataType0, false, false, dorisSchema_DorisColumnAggrType0, false,
                (String) null);
        List<DorisSchema.DorisColumn> list0 = List.of(dorisSchema_DorisColumn0, dorisSchema_DorisColumn0,
                dorisSchema_DorisColumn0, dorisSchema_DorisColumn0, dorisSchema_DorisColumn0);
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("ENUM$VALUES", list0, false);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisJoin dorisJoin0 = DorisJoin.createLeftOuterJoin(dorisTableReference0, dorisTableReference0,
                dorisTableReference0);
        DorisExpression dorisExpression0 = dorisJoin0.getOnCondition();
        assertSame(dorisExpression0, dorisTableReference0);
    }

    @Test
    public void test14() throws Throwable {
        DorisSchema.DorisCompositeDataType dorisSchema_DorisCompositeDataType0 = DorisSchema.DorisCompositeDataType
                .getRandomWithoutNull();
        DorisSchema.DorisColumnAggrType dorisSchema_DorisColumnAggrType0 = DorisSchema.DorisColumnAggrType.SUM;
        DorisSchema.DorisColumn dorisSchema_DorisColumn0 = new DorisSchema.DorisColumn("ENUM$VALUES",
                dorisSchema_DorisCompositeDataType0, false, false, dorisSchema_DorisColumnAggrType0, false,
                (String) null);
        List<DorisSchema.DorisColumn> list0 = List.of(dorisSchema_DorisColumn0, dorisSchema_DorisColumn0,
                dorisSchema_DorisColumn0, dorisSchema_DorisColumn0, dorisSchema_DorisColumn0);
        DorisSchema.DorisTable dorisSchema_DorisTable0 = new DorisSchema.DorisTable("ENUM$VALUES", list0, false);
        DorisTableReference dorisTableReference0 = new DorisTableReference(dorisSchema_DorisTable0);
        DorisJoin dorisJoin0 = DorisJoin.createLeftOuterJoin(dorisTableReference0, dorisTableReference0,
                dorisTableReference0);
        DorisTableReference dorisTableReference1 = dorisJoin0.getRightTable();
        assertSame(dorisTableReference0, dorisTableReference1);
    }

    @Test
    public void test15() throws Throwable {
        DorisTableReference dorisTableReference0 = new DorisTableReference((DorisSchema.DorisTable) null);
        DorisJoin dorisJoin0 = DorisJoin.createInnerJoin(dorisTableReference0, dorisTableReference0,
                dorisTableReference0);
        DorisJoin.JoinType dorisJoin_JoinType0 = dorisJoin0.getJoinType();
        assertEquals(DorisJoin.JoinType.INNER, dorisJoin_JoinType0);
    }
}
