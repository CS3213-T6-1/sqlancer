/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 01:28:12 GMT 2025
 */

package sqlancer.evosuite.doris;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.doris.DorisOptions;
import sqlancer.doris.DorisOracleFactory;

public class DorisOptions_ESTest {

    @Test
    public void test0() throws Throwable {
        DorisOptions dorisOptions0 = new DorisOptions();
        dorisOptions0.oracles = null;
        dorisOptions0.getTestOracleFactory();
        assertTrue(dorisOptions0.testDistribution);
        assertTrue(dorisOptions0.testBooleanConstants);
        assertTrue(dorisOptions0.testStringConstants);
        assertTrue(dorisOptions0.testIntConstants);
        assertTrue(dorisOptions0.testCasts);
        assertTrue(dorisOptions0.testIndexes);
        assertTrue(dorisOptions0.testColumnAggr);
        assertTrue(dorisOptions0.testDecimalConstants);
        assertTrue(dorisOptions0.testNotNullConstraints);
        assertTrue(dorisOptions0.testDefaultValues);
        assertTrue(dorisOptions0.testCase);
        assertTrue(dorisOptions0.testDataModel);
        assertTrue(dorisOptions0.testFloatConstants);
        assertTrue(dorisOptions0.testBinaryComparisons);
        assertTrue(dorisOptions0.testDateTimeConstants);
        assertTrue(dorisOptions0.testIn);
        assertTrue(dorisOptions0.testBetween);
        assertEquals(1, dorisOptions0.maxNumDeletes);
        assertEquals(20, dorisOptions0.maxNumIndexes);
        assertEquals(10, dorisOptions0.maxNumTables);
        assertTrue(dorisOptions0.testBinaryLogicals);
        assertTrue(dorisOptions0.testDateConstants);
    }

    @Test
    public void test1() throws Throwable {
        DorisOptions dorisOptions0 = new DorisOptions();
        LinkedList<DorisOracleFactory> linkedList0 = new LinkedList<DorisOracleFactory>();
        dorisOptions0.oracles = (List<DorisOracleFactory>) linkedList0;
        dorisOptions0.getTestOracleFactory();
        assertTrue(dorisOptions0.testIn);
        assertEquals(1, dorisOptions0.maxNumDeletes);
        assertTrue(dorisOptions0.testBinaryLogicals);
        assertTrue(dorisOptions0.testColumnAggr);
        assertTrue(dorisOptions0.testBinaryComparisons);
        assertTrue(dorisOptions0.testDateConstants);
        assertTrue(dorisOptions0.testFloatConstants);
        assertTrue(dorisOptions0.testDistribution);
        assertTrue(dorisOptions0.testBooleanConstants);
        assertTrue(dorisOptions0.testDateTimeConstants);
        assertTrue(dorisOptions0.testNotNullConstraints);
        assertTrue(dorisOptions0.testIntConstants);
        assertTrue(dorisOptions0.testIndexes);
        assertTrue(dorisOptions0.testDefaultValues);
        assertTrue(dorisOptions0.testCase);
        assertTrue(dorisOptions0.testDataModel);
        assertTrue(dorisOptions0.testStringConstants);
        assertTrue(dorisOptions0.testBetween);
        assertTrue(dorisOptions0.testDecimalConstants);
        assertEquals(10, dorisOptions0.maxNumTables);
        assertEquals(20, dorisOptions0.maxNumIndexes);
        assertTrue(dorisOptions0.testCasts);
    }

    @Test
    public void test2() throws Throwable {
        DorisOptions dorisOptions0 = new DorisOptions();
        LinkedList<DorisOracleFactory> linkedList0 = new LinkedList<DorisOracleFactory>();
        dorisOptions0.oracles = (List<DorisOracleFactory>) linkedList0;
        DorisOracleFactory dorisOracleFactory0 = DorisOracleFactory.NOREC;
        linkedList0.add(dorisOracleFactory0);
        dorisOptions0.getTestOracleFactory();
        assertTrue(dorisOptions0.testDistribution);
        assertTrue(dorisOptions0.testBooleanConstants);
        assertTrue(dorisOptions0.testNotNullConstraints);
        assertTrue(dorisOptions0.testDataModel);
        assertTrue(dorisOptions0.testColumnAggr);
        assertTrue(dorisOptions0.testBinaryLogicals);
        assertTrue(dorisOptions0.testCasts);
        assertTrue(dorisOptions0.testStringConstants);
        assertTrue(dorisOptions0.testIntConstants);
        assertEquals(10, dorisOptions0.maxNumTables);
        assertEquals(20, dorisOptions0.maxNumIndexes);
        assertTrue(dorisOptions0.testDateConstants);
        assertTrue(dorisOptions0.testDateTimeConstants);
        assertTrue(dorisOptions0.testBetween);
        assertTrue(dorisOptions0.testDecimalConstants);
        assertTrue(dorisOptions0.testFloatConstants);
        assertTrue(dorisOptions0.testCase);
        assertTrue(dorisOptions0.testDefaultValues);
        assertTrue(dorisOptions0.testBinaryComparisons);
        assertTrue(dorisOptions0.testIndexes);
        assertTrue(dorisOptions0.testIn);
        assertEquals(1, dorisOptions0.maxNumDeletes);
    }
}
