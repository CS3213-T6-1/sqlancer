/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 22:44:31 GMT 2025
 */

package sqlancer.evosuite.postgres.oracle.tlp;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.citus.CitusGlobalState;
import sqlancer.common.gen.ExpressionGenerator;
import sqlancer.postgres.ast.PostgresExpression;
import sqlancer.postgres.ast.PostgresJoin;
import sqlancer.postgres.oracle.tlp.PostgresTLPBase;
import sqlancer.postgres.PostgresGlobalState;
import sqlancer.postgres.PostgresSchema;
import sqlancer.Randomly;

public class PostgresTLPBase_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase((PostgresGlobalState) null);
        LinkedList<PostgresSchema.PostgresTable> linkedList0 = new LinkedList<PostgresSchema.PostgresTable>();
        // Undeclared exception!
        try {
            postgresTLPBase0.getJoinStatements((PostgresGlobalState) null, (List<PostgresSchema.PostgresColumn>) null,
                    linkedList0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.gen.PostgresExpressionGenerator", e);
        }
    }

    @Test
    public void test1() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase(citusGlobalState0);
        LinkedList<PostgresSchema.PostgresTable> linkedList0 = new LinkedList<PostgresSchema.PostgresTable>();
        LinkedList<PostgresJoin> linkedList1 = new LinkedList<PostgresJoin>();
        // Undeclared exception!
        try {
            postgresTLPBase0.generateSelectBase(linkedList0, linkedList1);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.gen.PostgresExpressionGenerator", e);
        }
    }

    @Test
    public void test2() throws Throwable {
        // Undeclared exception!
        try {
            PostgresTLPBase.createSubquery((PostgresGlobalState) null, "$:9ZF')[`0kUL",
                    (PostgresSchema.PostgresTables) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.gen.PostgresExpressionGenerator", e);
        }
    }

    @Test
    public void test3() throws Throwable {
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase((PostgresGlobalState) null);
        // Undeclared exception!
        try {
            postgresTLPBase0.check();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.oracle.tlp.PostgresTLPBase", e);
        }
    }

    @Test
    public void test4() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase(citusGlobalState0);
        LinkedList<PostgresSchema.PostgresColumn> linkedList0 = new LinkedList<PostgresSchema.PostgresColumn>();
        Randomly.subset((List<PostgresSchema.PostgresColumn>) linkedList0);
        List<PostgresExpression> list0 = postgresTLPBase0.generateFetchColumns();
        assertEquals(1, list0.size());
    }

    @Test
    public void test5() throws Throwable {
        PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase(postgresGlobalState0);
        // Undeclared exception!
        try {
            postgresTLPBase0.generateFetchColumns();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.oracle.tlp.PostgresTLPBase", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase(citusGlobalState0);
        // Undeclared exception!
        try {
            postgresTLPBase0.check();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test7() throws Throwable {
        PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
        PostgresTLPBase postgresTLPBase0 = new PostgresTLPBase(postgresGlobalState0);
        ExpressionGenerator<PostgresExpression> expressionGenerator0 = postgresTLPBase0.getGen();
        assertNull(expressionGenerator0);
    }
}
