/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 15:41:15 GMT 2025
 */

package sqlancer.evosuite.postgres.oracle;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import sqlancer.citus.CitusGlobalState;
import sqlancer.common.query.SQLQueryAdapter;
import sqlancer.postgres.ast.PostgresConstant;
import sqlancer.postgres.ast.PostgresExpression;
import sqlancer.postgres.ast.PostgresLikeOperation;
import sqlancer.postgres.ast.PostgresOrderByTerm;
import sqlancer.postgres.ast.PostgresPrefixOperation;
import sqlancer.postgres.ast.PostgresSelect;
import sqlancer.postgres.gen.PostgresExpressionGenerator;
import sqlancer.postgres.oracle.PostgresPivotedQuerySynthesisOracle;
import sqlancer.postgres.PostgresGlobalState;
import sqlancer.postgres.PostgresSchema;
import sqlancer.Randomly;

public class PostgresPivotedQuerySynthesisOracle_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                postgresGlobalState0);
        PostgresConstant postgresConstant0 = PostgresConstant.createTrue();
        String string0 = postgresPivotedQuerySynthesisOracle0.getExpectedValues(postgresConstant0);
        assertEquals("TRUE -- TRUE\n", string0);
    }

    @Test
    public void test1() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                citusGlobalState0);
        Randomly randomly0 = new Randomly();
        PostgresSchema.PostgresDataType postgresSchema_PostgresDataType0 = PostgresSchema.PostgresDataType.REAL;
        PostgresExpression postgresExpression0 = PostgresExpressionGenerator.generateConstant(randomly0,
                postgresSchema_PostgresDataType0);
        PostgresOrderByTerm.PostgresOrder postgresOrderByTerm_PostgresOrder0 = PostgresOrderByTerm.PostgresOrder.DESC;
        PostgresOrderByTerm postgresOrderByTerm0 = new PostgresOrderByTerm(postgresExpression0,
                postgresOrderByTerm_PostgresOrder0);
        String string0 = postgresPivotedQuerySynthesisOracle0.getExpectedValues(postgresOrderByTerm0);
        assertEquals("", string0);
    }

    @Test
    public void test2() throws Throwable {
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                (PostgresGlobalState) null);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getRectifiedQuery();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.oracle.PostgresPivotedQuerySynthesisOracle", e);
        }
    }

    @Test
    public void test3() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                citusGlobalState0);
        PostgresConstant.DoubleConstant postgresConstant_DoubleConstant0 = new PostgresConstant.DoubleConstant('s');
        PostgresLikeOperation postgresLikeOperation0 = new PostgresLikeOperation(postgresConstant_DoubleConstant0,
                postgresConstant_DoubleConstant0);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getExpectedValues(postgresLikeOperation0);
            fail("Expecting exception: UnsupportedOperationException");

        } catch (UnsupportedOperationException e) {
            //
            // 115.0
            //
            verifyException("sqlancer.postgres.ast.PostgresConstant", e);
        }
    }

    @Test
    public void test4() throws Throwable {
        CitusGlobalState citusGlobalState0 = new CitusGlobalState();
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                citusGlobalState0);
        PostgresConstant postgresConstant0 = PostgresConstant.createTextConstant((String) null);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getExpectedValues(postgresConstant0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.ast.PostgresConstant$StringConstant", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                (PostgresGlobalState) null);
        PostgresSelect postgresSelect0 = new PostgresSelect();
        PostgresSelect.PostgresSubquery postgresSelect_PostgresSubquery0 = new PostgresSelect.PostgresSubquery(
                postgresSelect0, "dOs");
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getExpectedValues(postgresSelect_PostgresSubquery0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                (PostgresGlobalState) null);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getExpectedValues((PostgresExpression) null);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test7() throws Throwable {
        PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
        SQLQueryAdapter sQLQueryAdapter0 = new SQLQueryAdapter("L^qi");
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                postgresGlobalState0);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getContainmentCheckQuery(sQLQueryAdapter0);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.oracle.PostgresPivotedQuerySynthesisOracle", e);
        }
    }

    @Test
    public void test8() throws Throwable {
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                (PostgresGlobalState) null);
        PostgresConstant.PostgresNullConstant postgresConstant_PostgresNullConstant0 = new PostgresConstant.PostgresNullConstant();
        PostgresPrefixOperation.PrefixOperator postgresPrefixOperation_PrefixOperator0 = PostgresPrefixOperation.PrefixOperator.UNARY_MINUS;
        PostgresPrefixOperation postgresPrefixOperation0 = new PostgresPrefixOperation(
                postgresConstant_PostgresNullConstant0, postgresPrefixOperation_PrefixOperator0);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getExpectedValues(postgresPrefixOperation0);
            fail("Expecting exception: RuntimeException");

        } catch (RuntimeException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.postgres.ast.PostgresPrefixOperation$PrefixOperator$3", e);
        }
    }

    @Test
    public void test9() throws Throwable {
        PostgresGlobalState postgresGlobalState0 = new PostgresGlobalState();
        PostgresPivotedQuerySynthesisOracle postgresPivotedQuerySynthesisOracle0 = new PostgresPivotedQuerySynthesisOracle(
                postgresGlobalState0);
        // Undeclared exception!
        try {
            postgresPivotedQuerySynthesisOracle0.getRectifiedQuery();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }
}
