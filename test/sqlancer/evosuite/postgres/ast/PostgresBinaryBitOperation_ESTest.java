/*
 * This file was automatically generated by EvoSuite
 * Sat Apr 12 03:37:27 GMT 2025
 */

package sqlancer.evosuite.postgres.ast;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import sqlancer.postgres.ast.PostgresBinaryBitOperation;
import sqlancer.postgres.ast.PostgresSelect;
import sqlancer.postgres.PostgresSchema;

public class PostgresBinaryBitOperation_ESTest {

    @Test
    public void test0() throws Throwable {
        PostgresBinaryBitOperation.PostgresBinaryBitOperator postgresBinaryBitOperation_PostgresBinaryBitOperator0 = PostgresBinaryBitOperation.PostgresBinaryBitOperator.BITWISE_XOR;
        String string0 = postgresBinaryBitOperation_PostgresBinaryBitOperator0.getTextRepresentation();
        assertEquals("#", string0);
    }

    @Test
    public void test1() throws Throwable {
        PostgresBinaryBitOperation.PostgresBinaryBitOperator postgresBinaryBitOperation_PostgresBinaryBitOperator0 = PostgresBinaryBitOperation.PostgresBinaryBitOperator
                .getRandom();
        assertEquals("||", postgresBinaryBitOperation_PostgresBinaryBitOperator0.getTextRepresentation());
    }

    @Test
    public void test2() throws Throwable {
        PostgresBinaryBitOperation.PostgresBinaryBitOperator postgresBinaryBitOperation_PostgresBinaryBitOperator0 = PostgresBinaryBitOperation.PostgresBinaryBitOperator.BITWISE_OR;
        PostgresSelect postgresSelect0 = new PostgresSelect();
        PostgresBinaryBitOperation postgresBinaryBitOperation0 = new PostgresBinaryBitOperation(
                postgresBinaryBitOperation_PostgresBinaryBitOperator0, postgresSelect0, postgresSelect0);
        PostgresSchema.PostgresDataType postgresSchema_PostgresDataType0 = postgresBinaryBitOperation0
                .getExpressionType();
        assertEquals(PostgresSchema.PostgresDataType.BIT, postgresSchema_PostgresDataType0);
    }
}
