/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 19:46:47 GMT 2025
 */

package sqlancer.evosuite.questdb;

import static org.junit.jupiter.api.Assertions.*;
import java.util.List;

import org.junit.jupiter.api.Test;
import sqlancer.questdb.ast.QuestDBColumnReference;
import sqlancer.questdb.ast.QuestDBConstant;
import sqlancer.questdb.ast.QuestDBExpression;
import sqlancer.questdb.ast.QuestDBSelect;
import sqlancer.questdb.ast.QuestDBTableReference;
import sqlancer.questdb.QuestDBSchema;
import sqlancer.questdb.QuestDBToStringVisitor;

public class QuestDBToStringVisitor_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        QuestDBToStringVisitor questDBToStringVisitor0 = new QuestDBToStringVisitor();
        QuestDBConstant.QuestDBIntConstant questDBConstant_QuestDBIntConstant0 = (QuestDBConstant.QuestDBIntConstant) QuestDBConstant
                .createIntConstant((-3230L));
        questDBToStringVisitor0.visitSpecific((QuestDBExpression) questDBConstant_QuestDBIntConstant0);
        assertEquals((-3230L), questDBConstant_QuestDBIntConstant0.getValue());
    }

    @Test
    public void test1() throws Throwable {
        QuestDBToStringVisitor questDBToStringVisitor0 = new QuestDBToStringVisitor();
        QuestDBExpression questDBExpression0 = QuestDBConstant.createNullConstant();
        List<QuestDBExpression> list0 = List.of(questDBExpression0, questDBExpression0, questDBExpression0,
                questDBExpression0, questDBExpression0, questDBExpression0);
        QuestDBSelect questDBSelect0 = new QuestDBSelect();
        questDBSelect0.setFetchColumns(list0);
        // Undeclared exception!
        try {
            questDBToStringVisitor0.visitSpecific((QuestDBExpression) questDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test2() throws Throwable {
        QuestDBConstant.QuestDBNullConstant questDBConstant_QuestDBNullConstant0 = new QuestDBConstant.QuestDBNullConstant();
        String string0 = QuestDBToStringVisitor.asString(questDBConstant_QuestDBNullConstant0);
        assertNotNull(string0);
    }

    @Test
    public void test3() throws Throwable {
        QuestDBSchema.QuestDBColumn questDBSchema_QuestDBColumn0 = new QuestDBSchema.QuestDBColumn("",
                (QuestDBSchema.QuestDBCompositeDataType) null, true);
        QuestDBColumnReference questDBColumnReference0 = new QuestDBColumnReference(questDBSchema_QuestDBColumn0);
        String string0 = QuestDBToStringVisitor.asString(questDBColumnReference0);
        assertEquals("", string0);
    }

    @Test
    public void test4() throws Throwable {
        QuestDBToStringVisitor questDBToStringVisitor0 = new QuestDBToStringVisitor();
        // Undeclared exception!
        try {
            questDBToStringVisitor0.visitSpecific((QuestDBExpression) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.questdb.QuestDBToStringVisitor", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        // Undeclared exception!
        try {
            QuestDBToStringVisitor.asString((QuestDBExpression) null);
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.questdb.QuestDBToStringVisitor", e);
        }
    }

    @Test
    public void test6() throws Throwable {
        QuestDBSelect questDBSelect0 = new QuestDBSelect();
        questDBSelect0.setDistinct(true);
        // Undeclared exception!
        try {
            QuestDBToStringVisitor.asString(questDBSelect0);
            fail("Expecting exception: IllegalStateException");

        } catch (IllegalStateException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.common.ast.SelectBase", e);
        }
    }

    @Test
    public void test7() throws Throwable {
        QuestDBToStringVisitor questDBToStringVisitor0 = new QuestDBToStringVisitor();
        QuestDBTableReference questDBTableReference0 = new QuestDBTableReference((QuestDBSchema.QuestDBTable) null);
        // Undeclared exception!
        try {
            questDBToStringVisitor0.visitSpecific((QuestDBExpression) questDBTableReference0);
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // Unknown class: class sqlancer.questdb.ast.QuestDBTableReference
            //
        }
    }
}
