/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 11 14:59:24 GMT 2025
 */

package sqlancer.evosuite.questdb.test;

import static org.junit.jupiter.api.Assertions.*;
import java.util.LinkedList;
import java.util.List;
import org.junit.jupiter.api.Test;
import sqlancer.common.gen.ExpressionGenerator;
import sqlancer.questdb.ast.QuestDBExpression;
import sqlancer.questdb.gen.QuestDBExpressionGenerator;
import sqlancer.questdb.QuestDBProvider;
import sqlancer.questdb.QuestDBSchema;
import sqlancer.questdb.test.QuestDBQueryPartitioningBase;

public class QuestDBQueryPartitioningBase_ESTest {

    private void verifyException(String s, Exception e) {
    }

    @Test
    public void test0() throws Throwable {
        QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                questDBProvider_QuestDBGlobalState0);
        QuestDBExpressionGenerator questDBExpressionGenerator0 = new QuestDBExpressionGenerator(
                questDBProvider_QuestDBGlobalState0);
        questDBQueryPartitioningBase0.gen = questDBExpressionGenerator0;
        ExpressionGenerator<QuestDBExpression> expressionGenerator0 = questDBQueryPartitioningBase0.getGen();
        assertNotNull(expressionGenerator0);
    }

    @Test
    public void test1() throws Throwable {
        QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                questDBProvider_QuestDBGlobalState0);
        QuestDBSchema.QuestDBDataType questDBSchema_QuestDBDataType0 = QuestDBSchema.QuestDBDataType.NULL;
        QuestDBSchema.QuestDBCompositeDataType questDBSchema_QuestDBCompositeDataType0 = new QuestDBSchema.QuestDBCompositeDataType(
                questDBSchema_QuestDBDataType0, 1);
        QuestDBSchema.QuestDBColumn questDBSchema_QuestDBColumn0 = new QuestDBSchema.QuestDBColumn("",
                questDBSchema_QuestDBCompositeDataType0, false);
        List<QuestDBSchema.QuestDBColumn> list0 = List.of(questDBSchema_QuestDBColumn0, questDBSchema_QuestDBColumn0,
                questDBSchema_QuestDBColumn0, questDBSchema_QuestDBColumn0, questDBSchema_QuestDBColumn0,
                questDBSchema_QuestDBColumn0, questDBSchema_QuestDBColumn0);
        QuestDBSchema.QuestDBTable questDBSchema_QuestDBTable0 = new QuestDBSchema.QuestDBTable("", list0, false);
        questDBQueryPartitioningBase0.targetTable = questDBSchema_QuestDBTable0;
        List<QuestDBExpression> list1 = questDBQueryPartitioningBase0.generateFetchColumns();
        assertEquals(1, list1.size());
    }

    @Test
    public void test2() throws Throwable {
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                (QuestDBProvider.QuestDBGlobalState) null);
        LinkedList<QuestDBSchema.QuestDBColumn> linkedList0 = new LinkedList<QuestDBSchema.QuestDBColumn>();
        QuestDBSchema.QuestDBTable questDBSchema_QuestDBTable0 = new QuestDBSchema.QuestDBTable("AvJ=-YEhPH}/",
                linkedList0, true);
        questDBQueryPartitioningBase0.targetTable = questDBSchema_QuestDBTable0;
        // Undeclared exception!
        try {
            questDBQueryPartitioningBase0.generateFetchColumns();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // [] 1
            //
        }
    }

    @Test
    public void test3() throws Throwable {
        QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                questDBProvider_QuestDBGlobalState0);
        // Undeclared exception!
        try {
            questDBQueryPartitioningBase0.check();
            fail("Expecting exception: AssertionError");

        } catch (AssertionError e) {
            //
            // null
            //
        }
    }

    @Test
    public void test4() throws Throwable {
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                (QuestDBProvider.QuestDBGlobalState) null);
        // Undeclared exception!
        try {
            questDBQueryPartitioningBase0.generateFetchColumns();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.questdb.test.QuestDBQueryPartitioningBase", e);
        }
    }

    @Test
    public void test5() throws Throwable {
        QuestDBProvider.QuestDBGlobalState questDBProvider_QuestDBGlobalState0 = new QuestDBProvider.QuestDBGlobalState();
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                questDBProvider_QuestDBGlobalState0);
        ExpressionGenerator<QuestDBExpression> expressionGenerator0 = questDBQueryPartitioningBase0.getGen();
        assertNull(expressionGenerator0);
    }

    @Test
    public void test6() throws Throwable {
        QuestDBQueryPartitioningBase questDBQueryPartitioningBase0 = new QuestDBQueryPartitioningBase(
                (QuestDBProvider.QuestDBGlobalState) null);
        // Undeclared exception!
        try {
            questDBQueryPartitioningBase0.check();
            fail("Expecting exception: NullPointerException");

        } catch (NullPointerException e) {
            //
            // no message in exception (getMessage() returned null)
            //
            verifyException("sqlancer.questdb.test.QuestDBQueryPartitioningBase", e);
        }
    }
}
